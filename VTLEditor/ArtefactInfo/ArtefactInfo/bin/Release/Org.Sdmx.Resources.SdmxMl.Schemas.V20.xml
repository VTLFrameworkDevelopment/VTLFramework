<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Org.Sdmx.Resources.SdmxMl.Schemas.V20</name>
    </assembly>
    <members>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ActionTypeConstants">
            <summary>
                The action type constants. This class contains ActionType constants to be used by other software since the
                auto-generated code doesn't.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ActionTypeConstants.Append">
            <summary>
                The append.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ActionTypeConstants.Delete">
            <summary>
                The delete.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ActionTypeConstants.Information">
            <summary>
                The information.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ActionTypeConstants.Replace">
            <summary>
                The replace.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType">
            <summary>
            <para>
            Constraint specifies the object to which constraints are attached. Note that if the constraint is that for a Data Provider, then only ReleaseCalendar information is relevant, as there is no reliable way of determining which key family is being used to frame constraints in terms of cube regions or key sets. ReferencePeriod is used to report start date and end date constraints. MetadataConceptSet allows for conten t constraints to be described for metadata sets.
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.#ctor">
            <summary>
            <para>
            Constraint specifies the object to which constraints are attached. Note that if the constraint is that for a Data Provider, then only ReleaseCalendar information is relevant, as there is no reliable way of determining which key family is being used to frame constraints in terms of cube regions or key sets. ReferencePeriod is used to report start date and end date constraints. MetadataConceptSet allows for conten t constraints to be described for metadata sets.
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.ConstraintID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.CubeRegion">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.MetadataConceptSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.KeySet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.ReleaseCalendar">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.ReferencePeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ConstraintID, CubeRegion*, MetadataConceptSet?, KeySet*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintType.ConstraintType1">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.CubeRegionType">
            <summary>
            <para>
            CubeRegion describes the portion(s) of the possible combinations of all components within a key family or metadata structure definition by providing valid values on a per-component basis. This does not guarantee that data will be available for all possible combinations, but describes the portion of the cube in which it is useful to query for data. The isIncluded attribute, if true, indicates that the described area is the one in which it is useful to search/expect to find data. If false, this means that the portions of the cube outside the described region are useful to search/where you may expect to find data.
            </para>
            <para>
            Regular expression: (Member+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.CubeRegionType.#ctor">
            <summary>
            <para>
            CubeRegion describes the portion(s) of the possible combinations of all components within a key family or metadata structure definition by providing valid values on a per-component basis. This does not guarantee that data will be available for all possible combinations, but describes the portion of the cube in which it is useful to query for data. The isIncluded attribute, if true, indicates that the described area is the one in which it is useful to search/expect to find data. If false, this means that the portions of the cube outside the described region are useful to search/where you may expect to find data.
            </para>
            <para>
            Regular expression: (Member+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.CubeRegionType.Member">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Member+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.CubeRegionType.isIncluded">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MetadataConceptSetType">
            <summary>
            <para>
             The isIncluded attribute, if true, indicates that the described concepts - of those described as possibilities in the relevant metadata structure definition - are reported. If the value is false, then the specified concepts are not reported.
            </para>
            <para>
            Regular expression: (Member+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MetadataConceptSetType.#ctor">
            <summary>
            <para>
             The isIncluded attribute, if true, indicates that the described concepts - of those described as possibilities in the relevant metadata structure definition - are reported. If the value is false, then the specified concepts are not reported.
            </para>
            <para>
            Regular expression: (Member+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MetadataConceptSetType.Member">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Member+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MetadataConceptSetType.isIncluded">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberType">
            <summary>
            <para>
            Member describes the constrained component - which can be a dimension, an attribute, a metadata attribute, or a measure. This must agree with the metadata structure definition or key family  referenced by the Provision Agreement's Dataflow or Metadataflow. The isIncluded attribute indicates whether the Member is listing included or excluded values for each component, as seen against the full valid set described in the key family. When used to describe reported metadata, the MemberValue may be omitted in cases where no specification is made regarding the representation of the concept (as is the case with un-coded metadata attributes). Otherwise, MemberValue must be included.
            </para>
            <para>
            Regular expression: (ComponentRef, MemberValue*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberType.#ctor">
            <summary>
            <para>
            Member describes the constrained component - which can be a dimension, an attribute, a metadata attribute, or a measure. This must agree with the metadata structure definition or key family  referenced by the Provision Agreement's Dataflow or Metadataflow. The isIncluded attribute indicates whether the Member is listing included or excluded values for each component, as seen against the full valid set described in the key family. When used to describe reported metadata, the MemberValue may be omitted in cases where no specification is made regarding the representation of the concept (as is the case with un-coded metadata attributes). Otherwise, MemberValue must be included.
            </para>
            <para>
            Regular expression: (ComponentRef, MemberValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberType.ComponentRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ComponentRef, MemberValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberType.MemberValue">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ComponentRef, MemberValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberType.isIncluded">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberValueType">
            <summary>
            <para>
            MemberValue specifies the value of the specified component, which must be a valid value as described in the appropriate structure definition (key family).
            </para>
            <para>
            Regular expression: (Value)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberValueType.#ctor">
            <summary>
            <para>
            MemberValue specifies the value of the specified component, which must be a valid value as described in the appropriate structure definition (key family).
            </para>
            <para>
            Regular expression: (Value)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.MemberValueType.Value">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Value)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeySetType">
            <summary>
            <para>
            KeySet describes a set of keys. The isIncluded attribute, if true, indicates that the specified keys are valid keys within the constraint. If false, the set of keys described are not valid - all other possible keys are the valid ones.
            </para>
            <para>
            Regular expression: (Key)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeySetType.#ctor">
            <summary>
            <para>
            KeySet describes a set of keys. The isIncluded attribute, if true, indicates that the specified keys are valid keys within the constraint. If false, the set of keys described are not valid - all other possible keys are the valid ones.
            </para>
            <para>
            Regular expression: (Key)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeySetType.Key">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Key)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeySetType.isIncluded">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeyType">
            <summary>
            <para>
            Key allows for sets of component references - holding the name of the component's concept - and a permitted value for that component. This conctruct can be repeated as many times as dessired, but must describe complete keys according to teh relevant structure definition (key family).
            </para>
            <para>
            Regular expression: (ComponentRef, Value)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeyType.#ctor">
            <summary>
            <para>
            Key allows for sets of component references - holding the name of the component's concept - and a permitted value for that component. This conctruct can be repeated as many times as dessired, but must describe complete keys according to teh relevant structure definition (key family).
            </para>
            <para>
            Regular expression: (ComponentRef, Value)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeyType.ComponentRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ComponentRef, Value)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.KeyType.Value">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ComponentRef, Value)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReleaseCalendarType">
            <summary>
            <para>
            The ReleaseCalendar holds information about the timing of releases of the constrained data. Periodicity is the period between releases of the data set. Offset is the interval between January first and the first release of data within the year. Tolerance is the period after which the release of data may be deemed late. All of these values use the standard "P7D"-style format.
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReleaseCalendarType.#ctor">
            <summary>
            <para>
            The ReleaseCalendar holds information about the timing of releases of the constrained data. Periodicity is the period between releases of the data set. Offset is the interval between January first and the first release of data within the year. Tolerance is the period after which the release of data may be deemed late. All of these values use the standard "P7D"-style format.
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReleaseCalendarType.Periodicity">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReleaseCalendarType.Offset">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReleaseCalendarType.Tolerance">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReferencePeriodType">
            <summary>
            <para>
            Specifies the inclusive start and end times for a registry query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReferencePeriodType.#ctor">
            <summary>
            <para>
            Specifies the inclusive start and end times for a registry query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReferencePeriodType.startTime">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ReferencePeriodType.endTime">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ConstraintTypeType">
            <summary>
            <para>
            ConstraintType provides an enumeration of values of the types of constraints.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.TextType">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable construct in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.TextType.#ctor">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable construct in the instance.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.TextType.lang">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationType">
            <summary>
            <para>
            AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationType.#ctor">
            <summary>
            <para>
            AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationType.AnnotationTitle">
            <summary>
            <para>
            AnnotationTitle provides a title for the annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationType.AnnotationType1">
            <summary>
            <para>
            AnnotationType is used to distinguish between annotations designed to support various uses. The types are not enumerated, as these can be specified by the user or creator of the annotations. The definitions and use of annotation types should be documented by their creator.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationType.AnnotationURL">
            <summary>
            <para>
            This is a URI - typically a URL - which points to an external resource which may contain or supplement the annotation. If a specific behavior is desired, an annotation type should be defined which specifies the use of this field more exactly.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationType.AnnotationText">
            <summary>
            <para>
            This is a language-specific string which holds the text oif the annotation.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationsType">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationsType.#ctor">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.AnnotationsType.Annotation">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.PeriodType">
            <summary>
            <para>
            PeriodType provides a list of tokens for specifying common periods: Quarterly: Q1, Q2, Q3, Q4; Weekly: W1 - W52; Triannual: T1, T2, T3; Biannual: B1, B2. These values appear after a four-digit year indicator, followed by a dash (ie, 2005-Q1).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.TimePeriodType">
            <summary>
            <para>
            TIME_PERIOD is not completely expressable in XML Schema's date type: instead we use the union of dateTime, date, gYearMonth, and gYear. The default name for the concept is TIME_PERIOD. Bi-annual, tri-annual, quarterly, and weekly periods have special formats (see PeriodType, above), but other periods would be described in terms of their beginning date or time (eg, a period of a decade is identified with a four-digit year corresponding to the decades' first year).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.ActionType">
            <summary>
            <para>
            ActionType provides a list of actions, describing the intention of the data transmission from the sender's side. Each action provided at the dataset or metadataset level applies to the entire dataset for which it is given. Note that the actions indicated in the Message Header are optional, and used to summarize specific actions indicated with this data type for all registry interactions. The "Informational" value is used when the message contains information in response to a query, rather than being used to invoke a maintenance activity.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Common.IDType">
            <summary>
            <para>
            IDType provides a type which is used for restricting the characters in codes and IDs throughout all SDMX-ML messages. Valid characters include A-Z, a-z, @, 0-9, _, -, $.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType">
            <summary>
                The Attribute type.
            </summary>
            <summary>
            <para>
            AttributeType describes the structure of attributes declared in the key family. If the codelist attribute is not used, then the attribute is uncoded. You may use the TextFormat element to specify constraints on the value of the uncoded attribute. The concept attribute contains the name of a concept. The codelist attribute supplies the id value of a codelist. The attachmentLevel attribute indicates the level to which the attribute is attached in time-series formats (GenericData, CompactData, and UtilityData formats). The assignmentStatus attribute indicates whether a value must be provided for the attribute when sending documentation along with the data. The AttachmentGroup element is included only when the attribute is attached at the Group level, to indicate which declared group or groups the attribute may be attached to. For each such group, an AttachmentGroup element should appear, with the content of the element being the name of the group. The AttachmentMeasure element is similar, indicating for cross-sectional formats which declared measure or measures the attribute attached at the observation level may be attached to. The isTimeFormat attribute indicates that the attribute represents the concept of time format (typically a mandatory series-level attribute with a codelist representation taken from ISO 8601). For key families not used to structure cross-sectional formats, this element may be ommitted. Each such element contains the name of the declared measure. The attributes crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation indicate what the attachment level or levels are for cross-sectional data formats, and may be ommitted if the key family will not be used to structure them. A value of "true" indicates that it is permissible to provide a value for the attribute at the specified level within the structure. Note that all groups in cross-sectional formats are replaced by a generic group which has any values for time and frequency, and allows any group-level attributes to be attached to it. An attribute which is an Entity attribute has a true value for the isEntityAttribute attribute - you may have either one Entity dimension or one Entity Attribute in a key family; a non-observational time  has a true value for isNonObservationalTimeAttribute; and a Count attribute has a true value for the isCountAttribute attribute. The attributes  isFrequencyAttribute and isEntityAttribute are mutually exclusive - that is, only one of them may have a "true" value for any instance of the Attribute element. The definitions and limits on representation of each attribute type are as follows: Frequency attribute describes the period between observations, and is coded; Count attributes are represented by values which are sequential, incrementing numbers - representations are always of the Increment or Count type; Entity attributes describe the subject of the data set - they can be coded or represented in any other form; Non-Observational Time attributes must have a representation which contains a time; Identity attributes may be coded or uncoded, but must be represented by a scheme which refers to the identifiers of external entities. Any given instance of an attribute may only have a true value for this set of attributes, and if so may not have a true value for the isTimeFormat attribute.
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.ConceptSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.#ctor">
            <summary>
            <para>
            AttributeType describes the structure of attributes declared in the key family. If the codelist attribute is not used, then the attribute is uncoded. You may use the TextFormat element to specify constraints on the value of the uncoded attribute. The concept attribute contains the name of a concept. The codelist attribute supplies the id value of a codelist. The attachmentLevel attribute indicates the level to which the attribute is attached in time-series formats (GenericData, CompactData, and UtilityData formats). The assignmentStatus attribute indicates whether a value must be provided for the attribute when sending documentation along with the data. The AttachmentGroup element is included only when the attribute is attached at the Group level, to indicate which declared group or groups the attribute may be attached to. For each such group, an AttachmentGroup element should appear, with the content of the element being the name of the group. The AttachmentMeasure element is similar, indicating for cross-sectional formats which declared measure or measures the attribute attached at the observation level may be attached to. The isTimeFormat attribute indicates that the attribute represents the concept of time format (typically a mandatory series-level attribute with a codelist representation taken from ISO 8601). For key families not used to structure cross-sectional formats, this element may be ommitted. Each such element contains the name of the declared measure. The attributes crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation indicate what the attachment level or levels are for cross-sectional data formats, and may be ommitted if the key family will not be used to structure them. A value of "true" indicates that it is permissible to provide a value for the attribute at the specified level within the structure. Note that all groups in cross-sectional formats are replaced by a generic group which has any values for time and frequency, and allows any group-level attributes to be attached to it. An attribute which is an Entity attribute has a true value for the isEntityAttribute attribute - you may have either one Entity dimension or one Entity Attribute in a key family; a non-observational time  has a true value for isNonObservationalTimeAttribute; and a Count attribute has a true value for the isCountAttribute attribute. The attributes  isFrequencyAttribute and isEntityAttribute are mutually exclusive - that is, only one of them may have a "true" value for any instance of the Attribute element. The definitions and limits on representation of each attribute type are as follows: Frequency attribute describes the period between observations, and is coded; Count attributes are represented by values which are sequential, incrementing numbers - representations are always of the Increment or Count type; Entity attributes describe the subject of the data set - they can be coded or represented in any other form; Non-Observational Time attributes must have a representation which contains a time; Identity attributes may be coded or uncoded, but must be represented by a scheme which refers to the identifiers of external entities. Any given instance of an attribute may only have a true value for this set of attributes, and if so may not have a true value for the isTimeFormat attribute.
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.AttachmentGroup">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.AttachmentMeasure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.conceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.conceptVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.conceptAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.conceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.conceptSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.codelistVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.codelistAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.attachmentLevel">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.assignmentStatus">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.isTimeFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.crossSectionalAttachDataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.crossSectionalAttachGroup">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.crossSectionalAttachSection">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.crossSectionalAttachObservation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.isEntityAttribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.isNonObservationalTimeAttribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.isCountAttribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.isFrequencyAttribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttributeType.isIdentityAttribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType">
            <summary>
                The concept type class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            ConceptType specifies the information provided for a single concept. This includes a name, as element content, and an ID. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the concept. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". In this case, all details of the concept are assumed to be found externally, and inline characteristics provided through child elements and the coreRepresentation and coreRepresentationAgency attributes are to be ignored. The coreRepresentation and coreRepresentationAgency attributes can identify a codelist which is a default representation of the concept. Uncoded default representations (or information about the textual aspects of coded default representations) can be provided with the TextFormat child element of the concept. Semantic relationships between concepts which occur within a single concept scheme can be captured with the parent and parentAgency attributes - these identify the concept of which the current concept is a qualification (in the ISO 11179 sense) or subclass. When used outside of a containing ConceptScheme, these attributes may be ignored. If a coreRepresentation and core RepresentationAgency are not provided, but are provided in the indicated parent, then the default representation is inherited from the specified parent concept. Note that all concepts within a concept scheme must be uniquely identified by their id - each concept scheme has only one agency for all its concepts. The agency attribute here is provided for backward-compatibility with version 1.0 of the standards, and it must not be used for concepts which are child elements of a concept scheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.CoreRepresentationVersionEstat">
            <summary>
                Gets or sets the core representation version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.#ctor">
            <summary>
            <para>
            ConceptType specifies the information provided for a single concept. This includes a name, as element content, and an ID. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the concept. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". In this case, all details of the concept are assumed to be found externally, and inline characteristics provided through child elements and the coreRepresentation and coreRepresentationAgency attributes are to be ignored. The coreRepresentation and coreRepresentationAgency attributes can identify a codelist which is a default representation of the concept. Uncoded default representations (or information about the textual aspects of coded default representations) can be provided with the TextFormat child element of the concept. Semantic relationships between concepts which occur within a single concept scheme can be captured with the parent and parentAgency attributes - these identify the concept of which the current concept is a qualification (in the ISO 11179 sense) or subclass. When used outside of a containing ConceptScheme, these attributes may be ignored. If a coreRepresentation and core RepresentationAgency are not provided, but are provided in the indicated parent, then the default representation is inherited from the specified parent concept. Note that all concepts within a concept scheme must be uniquely identified by their id - each concept scheme has only one agency for all its concepts. The agency attribute here is provided for backward-compatibility with version 1.0 of the standards, and it must not be used for concepts which are child elements of a concept scheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.agencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.coreRepresentation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.coreRepresentationAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.parent">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptType.parentAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType">
            <summary>
                The CrossSectional-Measure
            </summary>
            <summary>
            <para>
            CrossSectionalMeasureType describes the observation values for multiple-measure cross-sectional data formats. For non-cross sectional key families, it is not necesary to specify any cross-sectional measures.The concept attribute points to the unique concept represented by the measure. The measureDimension attribute contains the concept name of the measure dimension. The code attribute contains the value of its corresponding code in the codelist used to represent the measure dimension. A CrossSectionalMeasure must be declared for each code in the codelist used to represent the measure dimension - these will replace the primary measure for multiple-measure cross-sectional data formats.The TextFormat element allows description of the contents of the observation value. The codelist attribute references a codelist if the observation value is coded. If this attribute is used, then codelistAgencyID must contain the ID of the maintenance agency of the referenced codelist. The codelistVersion attribute may be specified - if not, then the version of the referenced codelist is assumed to be "1.0".
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.ConceptSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.#ctor">
            <summary>
            <para>
            CrossSectionalMeasureType describes the observation values for multiple-measure cross-sectional data formats. For non-cross sectional key families, it is not necesary to specify any cross-sectional measures.The concept attribute points to the unique concept represented by the measure. The measureDimension attribute contains the concept name of the measure dimension. The code attribute contains the value of its corresponding code in the codelist used to represent the measure dimension. A CrossSectionalMeasure must be declared for each code in the codelist used to represent the measure dimension - these will replace the primary measure for multiple-measure cross-sectional data formats.The TextFormat element allows description of the contents of the observation value. The codelist attribute references a codelist if the observation value is coded. If this attribute is used, then codelistAgencyID must contain the ID of the maintenance agency of the referenced codelist. The codelistVersion attribute may be specified - if not, then the version of the referenced codelist is assumed to be "1.0".
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.conceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.conceptVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.conceptAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.conceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.conceptSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.codelistVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.codelistAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.measureDimension">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CrossSectionalMeasureType.code">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType">
            <summary>
            Class DataflowType.
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType" />
            <summary>
            <para>
            DataflowType describes the structure of a data flow. A human-readable name must be provided, and may be given in several language-specific variations. A longer human-readable description (also in multiple language-specific versions) may be provided. A reference must be made to a key family, and to a category within a category scheme, using the KeyFamilyRef and CategoryRef elements, unless the Dataflow is a reference to an external data flow, in which case a url must be provided in the uri attribute, and the isExternalReference attribute must be set to true.. Annotations may be provided in the Annotations element. An id unique to the maintaining agency (identified in the agencyID attribute) must be supplied in the "id" attribute;  a version may be specified, and is assumed to be "1.0" if not supplied. The urn attribute may contain a valid registry URN (as per the SDMX Registry Specification). If the dataflow is final, the isFinal attribute must have a value of true - any production dataflow must be final (that is, it cannot be changed without versioning). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.#ctor">
            <summary>
            <para>
            DataflowType describes the structure of a data flow. A human-readable name must be provided, and may be given in several language-specific variations. A longer human-readable description (also in multiple language-specific versions) may be provided. A reference must be made to a key family, and to a category within a category scheme, using the KeyFamilyRef and CategoryRef elements, unless the Dataflow is a reference to an external data flow, in which case a url must be provided in the uri attribute, and the isExternalReference attribute must be set to true.. Annotations may be provided in the Annotations element. An id unique to the maintaining agency (identified in the agencyID attribute) must be supplied in the "id" attribute;  a version may be specified, and is assumed to be "1.0" if not supplied. The urn attribute may contain a valid registry URN (as per the SDMX Registry Specification). If the dataflow is final, the isFinal attribute must have a value of true - any production dataflow must be final (that is, it cannot be changed without versioning). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.CategoryRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, KeyFamilyRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType">
            <summary>
            A common interface for handling of the different Maintainable types in XSD generated classes.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.agencyID">
            <summary>
            Gets or sets the agency identifier.
            </summary>
            <value>The agency identifier.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.Annotations">
            <summary>
            Gets or sets the annotations.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>The identifier.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.isExternalReference">
            <summary>
            Gets or sets a value indicating whether this instance is external reference.
            </summary>
            <value><c>null</c> if [is external reference] contains no value, <c>true</c> if [is external reference]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.isFinal">
            <summary>
            Gets or sets a value indicating whether this instance is final.
            </summary>
            <value><c>null</c> if [is final] contains no value, <c>true</c> if [is final]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.uri">
            <summary>
            Gets or sets the URI.
            </summary>
            <value>The URI.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.urn">
            <summary>
            Gets or sets the urn.
            </summary>
            <value>The urn.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.validFrom">
            <summary>
            Gets or sets the valid from.
            </summary>
            <value>The valid from.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.validTo">
            <summary>
            Gets or sets the valid to.
            </summary>
            <value>The valid to.</value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType.version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType">
            <summary>
            Class KeyFamilyType.
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType" />
            <summary>
            <para>
            KeyFamilyType defines the structure of a key-family description. This includes the name and a set of components (attributes and dimensions) as element content, and an ID, agency, version, and the URL where located as attributes. The urn attribute holds a valid SDMX Registry URN, as per the SDMX Registry spec. The isFinal attribute, once set to true, indicates that no changes may be made without versioning. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version. If the isExternalReference attribute is true, then the uri attribute must be provided, giving a location where a valid structure message can be found containing the full details of the key family.
            </para>
            <para>
            Regular expression: (Name+, Description*, Components?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.#ctor">
            <summary>
            <para>
            KeyFamilyType defines the structure of a key-family description. This includes the name and a set of components (attributes and dimensions) as element content, and an ID, agency, version, and the URL where located as attributes. The urn attribute holds a valid SDMX Registry URN, as per the SDMX Registry spec. The isFinal attribute, once set to true, indicates that no changes may be made without versioning. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version. If the isExternalReference attribute is true, then the uri attribute must be provided, giving a location where a valid structure message can be found containing the full details of the key family.
            </para>
            <para>
            Regular expression: (Name+, Description*, Components?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Components?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Components?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.Components">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Components?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Components?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType">
            <summary>
                The metadata attribute type
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            Metadata attributes are those concepts - whether taking a coded or uncoded value, or made up of child concepts, or both - which are reported against a full or partial target identifier. If there are nested metadata attributes, these concepts are subordinate to the parent metadata attribute - that is, for the purposes of presentation, the parent concept is made up of the child concepts. This hierarchy is strictly presentational, for the purposes of structuring reports. If the metadata attribute can have a coded or uncoded value, then the charateristics of the value are indicated with the TextFormat child element. If the value is coded, then the representationScheme and representationSchemeAgency attributes must hold values: the representationScheme attribute takes the ID of a representation scheme, and the representationSchemeAgency takes the ID of the agency which maintains that scheme. The conceptRef attribute holds the ID of the metadata attribute's concept. The conceptAgency attribute takes the agency ID of the concept referenced in conceptRef. The conceptSchemeRef attribute holds the ID value of the concept scheme from which the concept is taken, and the conceptSchemeAgency holds the ID of the agency that maintains the concept scheme referenced in the conceptSchemeRef attribute. The useageStatus attribute indicates whether provision of the metadata attribute is conditional or mandatory.
            </para>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.ConceptSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.RepresentationSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.#ctor">
            <summary>
            <para>
            Metadata attributes are those concepts - whether taking a coded or uncoded value, or made up of child concepts, or both - which are reported against a full or partial target identifier. If there are nested metadata attributes, these concepts are subordinate to the parent metadata attribute - that is, for the purposes of presentation, the parent concept is made up of the child concepts. This hierarchy is strictly presentational, for the purposes of structuring reports. If the metadata attribute can have a coded or uncoded value, then the charateristics of the value are indicated with the TextFormat child element. If the value is coded, then the representationScheme and representationSchemeAgency attributes must hold values: the representationScheme attribute takes the ID of a representation scheme, and the representationSchemeAgency takes the ID of the agency which maintains that scheme. The conceptRef attribute holds the ID of the metadata attribute's concept. The conceptAgency attribute takes the agency ID of the concept referenced in conceptRef. The conceptSchemeRef attribute holds the ID value of the concept scheme from which the concept is taken, and the conceptSchemeAgency holds the ID of the agency that maintains the concept scheme referenced in the conceptSchemeRef attribute. The useageStatus attribute indicates whether provision of the metadata attribute is conditional or mandatory.
            </para>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.MetadataAttribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.conceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.conceptVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.conceptAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.conceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.conceptSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.representationScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.representationSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataAttributeType.usageStatus">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType">
            <summary>
            Class MetadataflowType.
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType" />
            <summary>
            <para>
            MetadataflowType describes the structure of a metadata flow. A human-readable name must be provided, and may be given in several language-specific variations. A longer human-readable description (also in multiple language-specific versions) may be provided. A reference must be made to a metadata structure definition, and to a category within a category scheme, using the MetadataStructureRef and CategoryRef elements. If the Metadataflow is an external reference, this is indicated by setting the isExternalReference attribute to true, and providing a url where the full description can be found in the form of a valid SDMX-ML structure message. In this case, only the id and name must be provided. Annotations may be provided in the Annotations element. An id unique to the maintaining agency (identified in the agencyID attribute) must be supplied in the "id" attribute;  a version may be specified, and is assumed to be "1.0" if not supplied. The urn attribute may contain a valid registry URN (as per the SDMX Registry Specification). If the metadata flow is final, the isFinal attribute must have a value of true - any production metadata flow must be final (that is, it cannot be changed without versioning). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.#ctor">
            <summary>
            <para>
            MetadataflowType describes the structure of a metadata flow. A human-readable name must be provided, and may be given in several language-specific variations. A longer human-readable description (also in multiple language-specific versions) may be provided. A reference must be made to a metadata structure definition, and to a category within a category scheme, using the MetadataStructureRef and CategoryRef elements. If the Metadataflow is an external reference, this is indicated by setting the isExternalReference attribute to true, and providing a url where the full description can be found in the form of a valid SDMX-ML structure message. In this case, only the id and name must be provided. Annotations may be provided in the Annotations element. An id unique to the maintaining agency (identified in the agencyID attribute) must be supplied in the "id" attribute;  a version may be specified, and is assumed to be "1.0" if not supplied. The urn attribute may contain a valid registry URN (as per the SDMX Registry Specification). If the metadata flow is final, the isFinal attribute must have a value of true - any production metadata flow must be final (that is, it cannot be changed without versioning). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.CategoryRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataStructureRef?, CategoryRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType">
            <summary>
            Class MetadataStructureDefinitionType.
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType" />
            <summary>
            <para>
            A metadata structure definition performs several functions: it groups sets of objects into "targets" against which reference metadata may be reported. Targets define the structure of the reference metadata "keys" which identify specific types of reported metadata, and describe the valid values for populating the keys. Also, metadata structure definitions provide a presentational organization of concepts for reporting purposes. The structure of a reference metadata report is derived from this presentational structure. Also, representations - unless defaults from the concepts are used - must be indicated as part of this presentational structure. Attributes allow the assignment of an ID, an agency, a version, and a uri. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the metadata structure definition. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". When an external reference is being made, none of the child elements should be included. Otherwise, both TargetIdentifiers and at least one ReportStructure must be included. The urn attribute holds a valid SDMX registry URN (see the SDMX Registry Specification). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.#ctor">
            <summary>
            <para>
            A metadata structure definition performs several functions: it groups sets of objects into "targets" against which reference metadata may be reported. Targets define the structure of the reference metadata "keys" which identify specific types of reported metadata, and describe the valid values for populating the keys. Also, metadata structure definitions provide a presentational organization of concepts for reporting purposes. The structure of a reference metadata report is derived from this presentational structure. Also, representations - unless defaults from the concepts are used - must be indicated as part of this presentational structure. Attributes allow the assignment of an ID, an agency, a version, and a uri. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the metadata structure definition. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". When an external reference is being made, none of the child elements should be included. Otherwise, both TargetIdentifiers and at least one ReportStructure must be included. The urn attribute holds a valid SDMX registry URN (see the SDMX Registry Specification). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.TargetIdentifiers">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.ReportStructure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetIdentifiers?, ReportStructure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType">
            <summary>
                The primary measure type.
            </summary>
            <summary>
            <para>
            PrimaryMeasureType describes the observation values for all presentations of the data, except those cross-sectional formats which have multiple measures (for which a set of cross-sectional measures are used instead). The concept attribute points to the unique concept represented by the measure. The PrimaryMeasure  is conventionally associated with the OBS-VALUE concept. The TextFormat element allows description of the contents of the observation value. The codelist attribute references a codelist if the observation value is coded. If this attribute is used, then codelistAgencyID must contain the ID of the maintenance agency of the referenced codelist. The codelistVersion attribute may be specified - if not, then the version of the referenced codelist is assumed to be "1.0".
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.ConceptSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.#ctor">
            <summary>
            <para>
            PrimaryMeasureType describes the observation values for all presentations of the data, except those cross-sectional formats which have multiple measures (for which a set of cross-sectional measures are used instead). The concept attribute points to the unique concept represented by the measure. The PrimaryMeasure  is conventionally associated with the OBS-VALUE concept. The TextFormat element allows description of the contents of the observation value. The codelist attribute references a codelist if the observation value is coded. If this attribute is used, then codelistAgencyID must contain the ID of the maintenance agency of the referenced codelist. The codelistVersion attribute may be specified - if not, then the version of the referenced codelist is assumed to be "1.0".
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.conceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.conceptVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.conceptAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.conceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.conceptSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.codelistVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PrimaryMeasureType.codelistAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeType">
            <summary>
                The representation scheme type.
            </summary>
            <summary>
            <para>
            Representation schemes indicated which values are valid for identifying objects within each class. For any given representation scheme, two IDs must be provided: the RepresentationScheme must have an ID as assigned to it by it representationSchemeAgency, whose ID must also be provided. The type of the representation scheme is expressed in the representationSchemeType attribute.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeType.RepresentationSchemeVersionEstat">
            <summary>
                Gets or sets the representation scheme version. This is an ESTAT extension.
            </summary>
            <value>
                The representation scheme version. This is an ESTAT extension.
            </value>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeType.#ctor">
            <summary>
            <para>
            Representation schemes indicated which values are valid for identifying objects within each class. For any given representation scheme, two IDs must be provided: the RepresentationScheme must have an ID as assigned to it by it representationSchemeAgency, whose ID must also be provided. The type of the representation scheme is expressed in the representationSchemeType attribute.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeType.representationScheme">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeType.representationSchemeAgency">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeType.representationSchemeType1">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeTypeConstants">
            <summary>
                The representation scheme type type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeTypeConstants.Category">
            <summary>
                The category.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeTypeConstants.Codelist">
            <summary>
                The codelist.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeTypeConstants.Concept">
            <summary>
                The concept.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeTypeConstants.External">
            <summary>
                The external
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeTypeConstants.Organisation">
            <summary>
                The organisation.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType">
            <summary>
            Class StructureSetType.
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IMaintainableType" />
            <summary>
            <para>
            StructureSetType describes the relationships between two or more key families and/or metadata structure definitions, including the mapping between category schemes and concept schemes, to provide for the mapping of representations. This can include inheritance and extension of properties, or total or partial equivalencies. It also includes mapping of concepts existing in metadata structure definitions to those used in key families, and vice-versa. A human-readable name is provided in the Name element, which may include several language-specific variants. A longer human-readable description may also be provided, in the Description element, which may also have language-specific variants provided. The Annotations element may be used to provide annotations. The StructureRefs element references all of the key families and/or metadata structure definitions included in the Structure Set - these must be provided if a StructureMap element is used, but is not required if the structure set is only used to provide codelist mappings, concept mappings, or category mappings. The StructureMap element indicates which components in the included data and metadata structures are equivalent; CodelistMap indicates which codes map to other codelists. CategorySchemeMap indicates which categories in one scheme map to those in another scheme. ConceptSchemeMap indicates which concepts in one scheme map to those in another scheme. OrganisationSchemeMap describes how one organisation scheme maps to another. The id attribute takes an id which is unique to all structure sets maintained by the agency specified in the agency attribute. version specifies a version number (by default "1.0"). The uri attribute holds a URL where a valid SDMX Structure messgae can be found which provides full details of the StructureSet, and it must be used if the isExternalReference attribute has a value of true. The urn attribute holds a valid SDMX Registry URN as described in the SDMX Registry specification. A true value in the isFinal attribute indicates that the contents of the structure set may not be changed without versioning. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.#ctor">
            <summary>
            <para>
            StructureSetType describes the relationships between two or more key families and/or metadata structure definitions, including the mapping between category schemes and concept schemes, to provide for the mapping of representations. This can include inheritance and extension of properties, or total or partial equivalencies. It also includes mapping of concepts existing in metadata structure definitions to those used in key families, and vice-versa. A human-readable name is provided in the Name element, which may include several language-specific variants. A longer human-readable description may also be provided, in the Description element, which may also have language-specific variants provided. The Annotations element may be used to provide annotations. The StructureRefs element references all of the key families and/or metadata structure definitions included in the Structure Set - these must be provided if a StructureMap element is used, but is not required if the structure set is only used to provide codelist mappings, concept mappings, or category mappings. The StructureMap element indicates which components in the included data and metadata structures are equivalent; CodelistMap indicates which codes map to other codelists. CategorySchemeMap indicates which categories in one scheme map to those in another scheme. ConceptSchemeMap indicates which concepts in one scheme map to those in another scheme. OrganisationSchemeMap describes how one organisation scheme maps to another. The id attribute takes an id which is unique to all structure sets maintained by the agency specified in the agency attribute. version specifies a version number (by default "1.0"). The uri attribute holds a URL where a valid SDMX Structure messgae can be found which provides full details of the StructureSet, and it must be used if the isExternalReference attribute has a value of true. The urn attribute holds a valid SDMX Registry URN as described in the SDMX Registry specification. A true value in the isFinal attribute indicates that the contents of the structure set may not be changed without versioning. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.RelatedStructures">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.StructureMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.CodelistMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.CategorySchemeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.ConceptSchemeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.OrganisationSchemeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, RelatedStructures?, StructureMap?, CodelistMap?, CategorySchemeMap?, ConceptSchemeMap?, OrganisationSchemeMap?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.agencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType">
            <summary>
                The time dimension type.
            </summary>
            <summary>
            <para>
            TimeDimensionType describes the special Time dimension. Any key family which will be used for time-series formats (GenericData, CompactData, and UtilityData) must include the time dimension. Any key family which uses the time dimension must also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). A TextFormat element may be included for indicating the representation of time. The concept attribute must contain the concept name of the time concept. The codelist attribute may provide the value of the concept name of a codelist if needed. If a key family describes cross-sectional data, then for each dimension, the crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation attributes must be given values. A value of "true" for any of these attributes indicates that the dimension may be provided a value at the indicated level within the cross-sectional structure. Note that these attributes do not need to be provided for any dimension with the isFrequencyDimension set to "true", as these dimensions are always attached only at the group level, as is time. A key family designed for cross-sectional use must be structured such that any observation's complete key can be unambiguously described by taking each dimension value from its observation level, section level, group level, and data set level, and ordered according to the sequence given in the key family. 
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.ConceptSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.#ctor">
            <summary>
            <para>
            TimeDimensionType describes the special Time dimension. Any key family which will be used for time-series formats (GenericData, CompactData, and UtilityData) must include the time dimension. Any key family which uses the time dimension must also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). A TextFormat element may be included for indicating the representation of time. The concept attribute must contain the concept name of the time concept. The codelist attribute may provide the value of the concept name of a codelist if needed. If a key family describes cross-sectional data, then for each dimension, the crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation attributes must be given values. A value of "true" for any of these attributes indicates that the dimension may be provided a value at the indicated level within the cross-sectional structure. Note that these attributes do not need to be provided for any dimension with the isFrequencyDimension set to "true", as these dimensions are always attached only at the group level, as is time. A key family designed for cross-sectional use must be structured such that any observation's complete key can be unambiguously described by taking each dimension value from its observation level, section level, group level, and data set level, and ordered according to the sequence given in the key family. 
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.conceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.conceptVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.conceptAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.conceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.conceptSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.codelistVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.codelistAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.crossSectionalAttachDataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.crossSectionalAttachGroup">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.crossSectionalAttachSection">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TimeDimensionType.crossSectionalAttachObservation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType">
            <summary>
                The dimension type.
            </summary>
            <summary>
            <para>
            DimensionType describes the structure of non-Time dimensions. The order of their declaration is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the Time dimension, which is not represented as a member of the ordered key). Some types of non-Time  dimensions have un-coded values: the TextFormat element must be provided, to indicate what type of values are permissible. The attributes isFrequencyDimension and isEntityDimension may have a "true" value for any instance of the Dimension element, indicating that it is a dimension of the stated type. The attributes isCountDimension, isNonObservationalTimeDimension, isMeasureDimension, and is IdentityDimension may occur multiple times, and take a true value to indicate that the diemsnion in question is of that type. Note that only one dimension in the key family may be of the following types: Frequency dimension and Entity dimension, and only if there is not also an attribute in the key family of the same type. Any given dimension may only have a true value for one of the set of attributes isFrequencyDimension, isCountDimension, is measureDimension,  isEntityDimension, isNonObservationalTimeDimension, and is IdentityDimension. The definitions and limits on representation of each dimension type are as follows: Frequency dimension describes the period between observations, and is coded; Count dimensions are represented by values which are sequential, incrementing numbers - representations are always of the Increment or Count type; measureType dimensions are always coded, and they enumerate the set of possible measures declared for the key family; Entity dimensions describe the subject of the data set (ie, a country) - they can be coded or represented in any other form; Non-Observational Time dimensions must have a representation which contains a time; Identity dimensions may be coded or uncoded, but must be represented by a scheme which refers to the identifiers of external entites. (Conventionally, it is the first dimension in the ordered set of dimensions - the key.) If a key family describes cross-sectional data, then for each dimension, the crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation attributes must be given values. A value of "true" for any of these attributes indicates that the dimension may be provided a value at the indicated level within the cross-sectional structure. Note that these attributes do not need to be provided for any dimension with the isFrequencyDimension set to "true", as these dimensions are always attached only at the group level, as is time. A key family designed for cross-sectional use must be structured such that any observation's complete key can be unambiguously described by taking each dimension value from its observation level, section level, group level, and data set level, and ordered according to the sequence given in the key family.  For any dimension, the id of the referenced concept
            		must be unique acrss the entire key family, including all dimensions, attributes and measures.
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.ConceptSchemeVersionEstat">
            <summary>
                Gets or sets the concept scheme version (ESTAT extension)
                <para>
                    Occurrence: optional
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.#ctor">
            <summary>
            <para>
            DimensionType describes the structure of non-Time dimensions. The order of their declaration is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the Time dimension, which is not represented as a member of the ordered key). Some types of non-Time  dimensions have un-coded values: the TextFormat element must be provided, to indicate what type of values are permissible. The attributes isFrequencyDimension and isEntityDimension may have a "true" value for any instance of the Dimension element, indicating that it is a dimension of the stated type. The attributes isCountDimension, isNonObservationalTimeDimension, isMeasureDimension, and is IdentityDimension may occur multiple times, and take a true value to indicate that the diemsnion in question is of that type. Note that only one dimension in the key family may be of the following types: Frequency dimension and Entity dimension, and only if there is not also an attribute in the key family of the same type. Any given dimension may only have a true value for one of the set of attributes isFrequencyDimension, isCountDimension, is measureDimension,  isEntityDimension, isNonObservationalTimeDimension, and is IdentityDimension. The definitions and limits on representation of each dimension type are as follows: Frequency dimension describes the period between observations, and is coded; Count dimensions are represented by values which are sequential, incrementing numbers - representations are always of the Increment or Count type; measureType dimensions are always coded, and they enumerate the set of possible measures declared for the key family; Entity dimensions describe the subject of the data set (ie, a country) - they can be coded or represented in any other form; Non-Observational Time dimensions must have a representation which contains a time; Identity dimensions may be coded or uncoded, but must be represented by a scheme which refers to the identifiers of external entites. (Conventionally, it is the first dimension in the ordered set of dimensions - the key.) If a key family describes cross-sectional data, then for each dimension, the crossSectionalAttachDataSet, crossSectionalAttachGroup, crossSectionalAttachSection, and crossSectionalAttachObservation attributes must be given values. A value of "true" for any of these attributes indicates that the dimension may be provided a value at the indicated level within the cross-sectional structure. Note that these attributes do not need to be provided for any dimension with the isFrequencyDimension set to "true", as these dimensions are always attached only at the group level, as is time. A key family designed for cross-sectional use must be structured such that any observation's complete key can be unambiguously described by taking each dimension value from its observation level, section level, group level, and data set level, and ordered according to the sequence given in the key family.  For any dimension, the id of the referenced concept
            		must be unique acrss the entire key family, including all dimensions, attributes and measures.
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.TextFormat">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.conceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.conceptVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.conceptAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.conceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.conceptSchemeAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.codelistVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.codelistAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.isMeasureDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.isFrequencyDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.isEntityDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.isCountDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.isNonObservationTimeDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.isIdentityDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.crossSectionalAttachDataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.crossSectionalAttachGroup">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.crossSectionalAttachSection">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DimensionType.crossSectionalAttachObservation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.UsageStatusTypeConstants">
            <summary>
                The usage status type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.UsageStatusTypeConstants.Conditional">
            <summary>
                The conditional.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.UsageStatusTypeConstants.Mandatory">
            <summary>
                The mandatory.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationTypeTypeConstants">
            <summary>
                The representation type constants
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationTypeTypeConstants.CategoryScheme">
            <summary>
                The category scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationTypeTypeConstants.Codelist">
            <summary>
                The codelist
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationTypeTypeConstants.OrganisationScheme">
            <summary>
                The organisation scheme
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemesType">
            <summary>
            <para>
            OrganisationSchemesType contains one or more OrganisationSchemes.
            </para>
            <para>
            Regular expression: (OrganisationScheme+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemesType.#ctor">
            <summary>
            <para>
            OrganisationSchemesType contains one or more OrganisationSchemes.
            </para>
            <para>
            Regular expression: (OrganisationScheme+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemesType.OrganisationScheme">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (OrganisationScheme+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType">
            <summary>
            <para>
            OrganisationSchemeType contains the details of an OrganisationScheme. In OrganisationSchemes, the organisation roles of agency, data provider, and data consumer may be specified. A single organisation may play more than one role. Name is an element which provides for a human-readable name for the organization. Description may be used to provide a longer, human-readable description. the is attribute provides a formal ID for the organisation scheme; the version attribute specifies a particular version. If blank, it is assumed that the version is "1.0". The uri attributre specifies the location of a valid SDMC Structure Message containing the full details of the organisation sc`heme, and is required if the isExternalReference attribute has a value of true. If isExternalReference has a value of false, full details must be provided in the current instance of the OrganisationScheme element. The urn attribute provides a formal SDMX Registry URL - see the Logical Registry Specification for specific requirements. An agencyID must be provided, identifying the maintenance agency of the organisation scheme. Also, if the organisation scheme is final, the isFinal attribute must have a value of true - otherwise, it will be assumed to be non-final. (All production schemes must be made final - that is, unchangeable without versioning.) The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.#ctor">
            <summary>
            <para>
            OrganisationSchemeType contains the details of an OrganisationScheme. In OrganisationSchemes, the organisation roles of agency, data provider, and data consumer may be specified. A single organisation may play more than one role. Name is an element which provides for a human-readable name for the organization. Description may be used to provide a longer, human-readable description. the is attribute provides a formal ID for the organisation scheme; the version attribute specifies a particular version. If blank, it is assumed that the version is "1.0". The uri attributre specifies the location of a valid SDMC Structure Message containing the full details of the organisation sc`heme, and is required if the isExternalReference attribute has a value of true. If isExternalReference has a value of false, full details must be provided in the current instance of the OrganisationScheme element. The urn attribute provides a formal SDMX Registry URL - see the Logical Registry Specification for specific requirements. An agencyID must be provided, identifying the maintenance agency of the organisation scheme. Also, if the organisation scheme is final, the isFinal attribute must have a value of true - otherwise, it will be assumed to be non-final. (All production schemes must be made final - that is, unchangeable without versioning.) The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.Agencies">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.DataProviders">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.DataConsumers">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Agencies*, DataProviders*, DataConsumers*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProvidersType">
            <summary>
            <para>
            DataProvidersType contains one or more data providers. Data providers are those who report or disseminate data sets or metadata sets.
            </para>
            <para>
            Regular expression: (DataProvider+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProvidersType.#ctor">
            <summary>
            <para>
            DataProvidersType contains one or more data providers. Data providers are those who report or disseminate data sets or metadata sets.
            </para>
            <para>
            Regular expression: (DataProvider+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProvidersType.DataProvider">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (DataProvider+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataConsumersType">
            <summary>
            <para>
            DataConsumersType contains one or more data consumers. Data consumers collect or use disseminated data sets and metadata sets.
            </para>
            <para>
            Regular expression: (DataConsumer+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataConsumersType.#ctor">
            <summary>
            <para>
            DataConsumersType contains one or more data consumers. Data consumers collect or use disseminated data sets and metadata sets.
            </para>
            <para>
            Regular expression: (DataConsumer+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataConsumersType.DataConsumer">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (DataConsumer+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AgenciesType">
            <summary>
            <para>
            AgenciesType contains one or more Agencies. Agencies are those organisations which act as the maintainers of structural definitions of various types. Agencies are often supplied as part of an organisation scheme, but may also be supplied independently using this element.
            </para>
            <para>
            Regular expression: (Agency+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AgenciesType.#ctor">
            <summary>
            <para>
            AgenciesType contains one or more Agencies. Agencies are those organisations which act as the maintainers of structural definitions of various types. Agencies are often supplied as part of an organisation scheme, but may also be supplied independently using this element.
            </para>
            <para>
            Regular expression: (Agency+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AgenciesType.Agency">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Agency+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType">
            <summary>
            <para>
            OrganisationType provides a structure for describing agencies, data providers, and data consumers and their contact information. The id attribute carries a code identifying the agency. The version attribute indicates the version of the agency description. The uri attribute provides a uri for an alternate way of identifying the agency information (typically a URL resolving to an agency described in SDMX-ML). Name is an element which provides for a human-readable name for the organization. Description provides for a longer human-readable description of the organisation, which may be provided in multiple, parallel language-equivalent forms. MaintenanceContact provides contact information for the agency when acting as a MaintenanceAgency; CollectorContact does the same when the agency is acting as a statistics collector; DisseminatorContact for when the agency functions as a statistics disseminator; and ReporterContact for when the Agency is functioning as a statistics reporter. OtherContact is used to describe any other role. Note that the Role field in the contact information structure should only be specified for OtherContact. It is allowable to reference full Agency information by using (at a minimum) only the id, name, and uri fields, with the uri pointing to an external description in a valid SDMX-ML Structure message which provides more complete information. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". The urn attribute holds a valid SDMX Registry URN (see SDMX Registry Specification). The parentOrganisation attribute holds the id of a parent organisation of the same type from the same scheme, indicating that the organisation in question is a department or other sub-division of the parent organisation. Annotations may be provided using the Annotations element, in multiple, parallel-language form.
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.#ctor">
            <summary>
            <para>
            OrganisationType provides a structure for describing agencies, data providers, and data consumers and their contact information. The id attribute carries a code identifying the agency. The version attribute indicates the version of the agency description. The uri attribute provides a uri for an alternate way of identifying the agency information (typically a URL resolving to an agency described in SDMX-ML). Name is an element which provides for a human-readable name for the organization. Description provides for a longer human-readable description of the organisation, which may be provided in multiple, parallel language-equivalent forms. MaintenanceContact provides contact information for the agency when acting as a MaintenanceAgency; CollectorContact does the same when the agency is acting as a statistics collector; DisseminatorContact for when the agency functions as a statistics disseminator; and ReporterContact for when the Agency is functioning as a statistics reporter. OtherContact is used to describe any other role. Note that the Role field in the contact information structure should only be specified for OtherContact. It is allowable to reference full Agency information by using (at a minimum) only the id, name, and uri fields, with the uri pointing to an external description in a valid SDMX-ML Structure message which provides more complete information. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". The urn attribute holds a valid SDMX Registry URN (see SDMX Registry Specification). The parentOrganisation attribute holds the id of a parent organisation of the same type from the same scheme, indicating that the organisation in question is a department or other sub-division of the parent organisation. Annotations may be provided using the Annotations element, in multiple, parallel-language form.
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.MaintenanceContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.CollectorContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.DisseminatorContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.ReporterContact">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.OtherContact">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MaintenanceContact?, CollectorContact?, DisseminatorContact?, ReporterContact?, OtherContact*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.parentOrganisation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The id element is used to carry user id information for the contact, whereas Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.#ctor">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The id element is used to carry user id information for the contact, whereas Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.Department">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.Role">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.Telephone">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.Fax">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.X400">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.URI">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ContactType.Email">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, id?, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowsType">
            <summary>
            <para>
            DataflowsType contains one or more data flows.
            </para>
            <para>
            Regular expression: (Dataflow+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowsType.#ctor">
            <summary>
            <para>
            DataflowsType contains one or more data flows.
            </para>
            <para>
            Regular expression: (Dataflow+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowsType.Dataflow">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Dataflow+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyRefType">
            <summary>
            <para>
            KeyFamilyRefType provides a reference to a key-family (data set structure definition). At a minimum, either (a) The key family ID must be provided, as assigned to the key family by the agency whose ID is the value of KeyFamilyAgencyID. A version must also be provided; OR (b) a valid SDMX Registry URN must be provided in the URN element (see SDMX Registry Specification)
            </para>
            <para>
            Regular expression: (URN?, KeyFamilyID?, KeyFamilyAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyRefType.#ctor">
            <summary>
            <para>
            KeyFamilyRefType provides a reference to a key-family (data set structure definition). At a minimum, either (a) The key family ID must be provided, as assigned to the key family by the agency whose ID is the value of KeyFamilyAgencyID. A version must also be provided; OR (b) a valid SDMX Registry URN must be provided in the URN element (see SDMX Registry Specification)
            </para>
            <para>
            Regular expression: (URN?, KeyFamilyID?, KeyFamilyAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, KeyFamilyID?, KeyFamilyAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyRefType.KeyFamilyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, KeyFamilyID?, KeyFamilyAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyRefType.KeyFamilyAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, KeyFamilyID?, KeyFamilyAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamilyRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, KeyFamilyID?, KeyFamilyAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType">
            <summary>
            <para>
            CategoryRefType provides a reference to a category. At a minimum, either a value for CategorySchemeAgencyID, CategorySchemeID, and CategoryID must be provided, or a valid SDMX Registry URN must be provided in the URN element (see SDMX Registry Specification).
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType.#ctor">
            <summary>
            <para>
            CategoryRefType provides a reference to a category. At a minimum, either a value for CategorySchemeAgencyID, CategorySchemeID, and CategoryID must be provided, or a valid SDMX Registry URN must be provided in the URN element (see SDMX Registry Specification).
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType.CategorySchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType.CategorySchemeAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType.CategorySchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryRefType.CategoryID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CategorySchemeID?, CategorySchemeAgencyID?, CategorySchemeVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryIDType">
            <summary>
            <para>
            CategoryIDType describes a structure which can provide a path inside a hierarchical category scheme. Each node (category) of the referenced scheme is represented by a CategoryID element, with sub-categories represented by the child CategoryID element. Each CategoryID element must be given a node identifier in the ID field, which corresponds to the ID of the category. It is not necessary to represent the full category path with the nesting structure if each node within the hierarchical category scheme has a unique id.
            </para>
            <para>
            Regular expression: (ID, CategoryVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryIDType.#ctor">
            <summary>
            <para>
            CategoryIDType describes a structure which can provide a path inside a hierarchical category scheme. Each node (category) of the referenced scheme is represented by a CategoryID element, with sub-categories represented by the child CategoryID element. Each CategoryID element must be given a node identifier in the ID field, which corresponds to the ID of the category. It is not necessary to represent the full category path with the nesting structure if each node within the hierarchical category scheme has a unique id.
            </para>
            <para>
            Regular expression: (ID, CategoryVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryIDType.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, CategoryVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryIDType.CategoryVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, CategoryVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryIDType.CategoryID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, CategoryVersion?, CategoryID?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowsType">
            <summary>
            <para>
            MetadataflowsType contains one or more metadata flows.
            </para>
            <para>
            Regular expression: (Metadataflow+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowsType.#ctor">
            <summary>
            <para>
            MetadataflowsType contains one or more metadata flows.
            </para>
            <para>
            Regular expression: (Metadataflow+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowsType.Metadataflow">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Metadataflow+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureRefType">
            <summary>
            <para>
            MetadataStructureRefType provides a reference to a metadata structure definition. The ID must be provided, as assigned to the metadata structure definition by the agency whose ID is the value of MetadataStructureAgencyID. A version must also be provided.
            </para>
            <para>
            Regular expression: (URN?, MetadataStructureID?, MetadataStructureAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureRefType.#ctor">
            <summary>
            <para>
            MetadataStructureRefType provides a reference to a metadata structure definition. The ID must be provided, as assigned to the metadata structure definition by the agency whose ID is the value of MetadataStructureAgencyID. A version must also be provided.
            </para>
            <para>
            Regular expression: (URN?, MetadataStructureID?, MetadataStructureAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, MetadataStructureID?, MetadataStructureAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureRefType.MetadataStructureID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, MetadataStructureID?, MetadataStructureAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureRefType.MetadataStructureAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, MetadataStructureID?, MetadataStructureAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, MetadataStructureID?, MetadataStructureAgencyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemesType">
            <summary>
            <para>
            CategorySchemesType contains one or more category schemes.
            </para>
            <para>
            Regular expression: (CategoryScheme+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemesType.#ctor">
            <summary>
            <para>
            CategorySchemesType contains one or more category schemes.
            </para>
            <para>
            Regular expression: (CategoryScheme+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemesType.CategoryScheme">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (CategoryScheme+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType">
            <summary>
            <para>
            CategorySchemeType describes the structure of a category scheme. This is a simple, levelled hierarchy. The scheme itself is given a human-readable name (which may be in multiple language-specific versions), and may optionally have a human-readable description (also in multiple, landuage-specific versions). Annotations may be provided in the Annotations element. The Category element represents a set of nested categories which describe a simple classification hierarchy. The CategoryScheme must have an agency specified in teh agency attribute, and a unique ID provided for all of the category schemes of that agency in the id attribute. A version may also be supplied - if ommitted, the version is understood to be "1.0". If the isFinal attribute has a value of true, the category scheme  is final and cannot be changed without versioning. All production category schemes must be final. The urn attribute holds a valid registry URN (see the SDMX Registry Specification). If the isExternalReference attribute has a value of true, then the uri attribute must have a value which provides the location of a valid SDMX Structure message providing full details of the Category Scheme. Otherwise, all details must be provided here. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.#ctor">
            <summary>
            <para>
            CategorySchemeType describes the structure of a category scheme. This is a simple, levelled hierarchy. The scheme itself is given a human-readable name (which may be in multiple language-specific versions), and may optionally have a human-readable description (also in multiple, landuage-specific versions). Annotations may be provided in the Annotations element. The Category element represents a set of nested categories which describe a simple classification hierarchy. The CategoryScheme must have an agency specified in teh agency attribute, and a unique ID provided for all of the category schemes of that agency in the id attribute. A version may also be supplied - if ommitted, the version is understood to be "1.0". If the isFinal attribute has a value of true, the category scheme  is final and cannot be changed without versioning. All production category schemes must be final. The urn attribute holds a valid registry URN (see the SDMX Registry Specification). If the isExternalReference attribute has a value of true, then the uri attribute must have a value which provides the location of a valid SDMX Structure message providing full details of the Category Scheme. Otherwise, all details must be provided here. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType">
            <summary>
            <para>
             The category is given a human-readable name (which may be in multiple language-specific versions), and may optionally have a human-readable description (also in multiple, landuage-specific versions). Annotations may be provided in the Annotations element. References to dataflows and metadataflows may be provided. The Category element represents a set of nested categories which are child categories. The Category must have a unique ID within the Category Scheme provided in the id attribute. A version may also be supplied - if ommitted, the version is understood to be "1.0". The urn attribute holds a valid registry URN (see the SDMX Registry Specification).
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.#ctor">
            <summary>
            <para>
             The category is given a human-readable name (which may be in multiple language-specific versions), and may optionally have a human-readable description (also in multiple, landuage-specific versions). Annotations may be provided in the Annotations element. References to dataflows and metadataflows may be provided. The Category element represents a set of nested categories which are child categories. The Category must have a unique ID within the Category Scheme provided in the id attribute. A version may also be supplied - if ommitted, the version is understood to be "1.0". The urn attribute holds a valid registry URN (see the SDMX Registry Specification).
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.DataflowRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListsType">
            <summary>
            <para>
            CodelistsType contains one or more codelists. It also defines uniqueness constraints for codelist IDs.
            </para>
            <para>
            Regular expression: (CodeList*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListsType.#ctor">
            <summary>
            <para>
            CodelistsType contains one or more codelists. It also defines uniqueness constraints for codelist IDs.
            </para>
            <para>
            Regular expression: (CodeList*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListsType.CodeList">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (CodeList*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType">
            <summary>
            <para>
            CodeListType defines the contents of a codelist. This includes an ID, the agency which maintains the codelist, its version, and a URL where it is located. Elements are provided for supplying a name and the codes. It is acceptable to provide only the id, name, and uri fields at a minimum, with the uri pointing to an SDMX Structure message containing complete details on the codelist. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". The urn attribute holds a valiud SDMX Registry URN (see SDMX Registry Specification). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.#ctor">
            <summary>
            <para>
            CodeListType defines the contents of a codelist. This includes an ID, the agency which maintains the codelist, its version, and a URL where it is located. Elements are provided for supplying a name and the codes. It is acceptable to provide only the id, name, and uri fields at a minimum, with the uri pointing to an SDMX Structure message containing complete details on the codelist. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". The urn attribute holds a valiud SDMX Registry URN (see SDMX Registry Specification). The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.Code">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Code*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeListType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType">
            <summary>
            <para>
            CodeType defines the structure of a code. This allows for plain-text descriptions as element content, and the coded value as the value attribute. (Short descriptions or other presentational information may be added using Annotations with an indicative type field [eg, "ShortDescription"]). The urn attribute supplies a valid SDMX Registry URN (see the SDMX Registry Specification).The parentCode attribute provides the ability to describe simple hierarchies within a single codelist, by referenceing the id value of another code in the same codelist.
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType.#ctor">
            <summary>
            <para>
            CodeType defines the structure of a code. This allows for plain-text descriptions as element content, and the coded value as the value attribute. (Short descriptions or other presentational information may be added using Annotations with an indicative type field [eg, "ShortDescription"]). The urn attribute supplies a valid SDMX Registry URN (see the SDMX Registry Specification).The parentCode attribute provides the ability to describe simple hierarchies within a single codelist, by referenceing the id value of another code in the same codelist.
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType.Description">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Description+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType.value">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeType.parentCode">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistsType">
            <summary>
            <para>
            HierarchicalCodelistsType contains one or more sets of structural information about the hierarchies within a codelist (hierarchical codelists). This corresponds to complex hierarchical codelists within the SDMX Information Model - very simple hierarchies can be described within the regular Codelist, using the parentCode attribute. 
            </para>
            <para>
            Regular expression: (HierarchicalCodelist+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistsType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistsType contains one or more sets of structural information about the hierarchies within a codelist (hierarchical codelists). This corresponds to complex hierarchical codelists within the SDMX Information Model - very simple hierarchies can be described within the regular Codelist, using the parentCode attribute. 
            </para>
            <para>
            Regular expression: (HierarchicalCodelist+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistsType.HierarchicalCodelist">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (HierarchicalCodelist+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType">
            <summary>
            <para>
            A hierarchical codelist references a Codelist, and supplies the extra structural metadata to assemble the codes into a hierarchy. A human-readable name must be supplied, and multiple language-specific variants may be provided. A longer human-readable description may be provided, and may also be presented as a set of language-specific variants. The CodelistRef element references a codelist, and may indicate more than one. Annotations may be provided in the Annotaions element. An ID unique for the agency specified in the agency attribute must be assigned, using the id attribute. A version may be provided using the version attribute - if no value is provided, it is assumed to be "1.0". A valid SDMX Registry URN may be provided in the urn attribute, as specified in the SDMX Registry Specification. If the isExternalReference attribute has a value of true, the uri attribute must specify the location of a valid SDMX Structure Message which provides the full details of the hierarchical codelist; otherwise, all details must be present. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.#ctor">
            <summary>
            <para>
            A hierarchical codelist references a Codelist, and supplies the extra structural metadata to assemble the codes into a hierarchy. A human-readable name must be supplied, and multiple language-specific variants may be provided. A longer human-readable description may be provided, and may also be presented as a set of language-specific variants. The CodelistRef element references a codelist, and may indicate more than one. Annotations may be provided in the Annotaions element. An ID unique for the agency specified in the agency attribute must be assigned, using the id attribute. A version may be provided using the version attribute - if no value is provided, it is assumed to be "1.0". A valid SDMX Registry URN may be provided in the urn attribute, as specified in the SDMX Registry Specification. If the isExternalReference attribute has a value of true, the uri attribute must specify the location of a valid SDMX Structure Message which provides the full details of the hierarchical codelist; otherwise, all details must be present. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.CodelistRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.Hierarchy">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, CodelistRef*, Hierarchy*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType">
            <summary>
            <para>
            The recursive CodeRef element is used to assemble the codes in the codelist(s) referenced by the parent hierarchical codelist into a hierarchy. The Level element is used to describe the levels of a levelled hierarchy, which may be referenced from each of the CodeRefs in the Hierarchy. A human-readable name must be assigned, which may be provided in multiple, parallel-language versions. A longer, human-readable Description may also be provided, which can also have multiple parallel-language versions. Annotations may be provided with the Annotations element. The id attribute provides a unique id for the hierarchy. The urn attribute can be used to specify the hierarchy with a valid SDMX Registry URN (see the SDMX Registry Specification). The version attribute specifies a version (understood to be "1.0" if not specified), and isFinal, once given a value of true, indicates that nothing may be changed without also changing the version number. validFrom and validTo are inclusive dates indicating the relevant period of the hierarchy.
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.#ctor">
            <summary>
            <para>
            The recursive CodeRef element is used to assemble the codes in the codelist(s) referenced by the parent hierarchical codelist into a hierarchy. The Level element is used to describe the levels of a levelled hierarchy, which may be referenced from each of the CodeRefs in the Hierarchy. A human-readable name must be assigned, which may be provided in multiple, parallel-language versions. A longer, human-readable Description may also be provided, which can also have multiple parallel-language versions. Annotations may be provided with the Annotations element. The id attribute provides a unique id for the hierarchy. The urn attribute can be used to specify the hierarchy with a valid SDMX Registry URN (see the SDMX Registry Specification). The version attribute specifies a version (understood to be "1.0" if not specified), and isFinal, once given a value of true, indicates that nothing may be changed without also changing the version number. validFrom and validTo are inclusive dates indicating the relevant period of the hierarchy.
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.CodeRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.Level">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, CodeRef*, Level*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchyType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType">
            <summary>
            <para>
            LevelType describes a level in a hierarchical codelist. The Order element specifies where the level is in a levelled hierarchy, starting with the value "1" for the top level, and going sequentially from there using whole integers. CodingType specifies the text formatting of the codes at that level. A human-readable name must be assigned, which may be provided in multiple, parallel-language versions. A longer, human-readable Description may also be provided, which can also have multiple parallel-language versions. Annotations may be provided with the Annotations element. The id attribute provides a unique id for the hierarchy. The urn attribute can be used to specify the hierarchy with a valid SDMX Registry URN (see the SDMX Registry Specification).
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.#ctor">
            <summary>
            <para>
            LevelType describes a level in a hierarchical codelist. The Order element specifies where the level is in a levelled hierarchy, starting with the value "1" for the top level, and going sequentially from there using whole integers. CodingType specifies the text formatting of the codes at that level. A human-readable name must be assigned, which may be provided in multiple, parallel-language versions. A longer, human-readable Description may also be provided, which can also have multiple parallel-language versions. Annotations may be provided with the Annotations element. The id attribute provides a unique id for the hierarchy. The urn attribute can be used to specify the hierarchy with a valid SDMX Registry URN (see the SDMX Registry Specification).
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.Order">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.CodingType">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Order, CodingType?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.LevelType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType">
            <summary>
            <para>
            The CodelistRefType provides the structure for a codelist reference. (Note that this is structured differently than a similarly-named type in the Registry namespace.) At a minimum, either: AgencyID has the ID of an agency as a value; CodelistID takes the ID of a codelist maintained by that agency; and Version specifies the version of the codelist; or URN supplies a valid SDMX Registry URN (see the SDMX Registry Specification). Alias is used to carry the identifier for the referenced codelist, so that codes from that list can be easily referenced by the CodeRefs contained in the parent Hierarchy, without having to repeat the agency and version for each reference. The Alias must be unique within the parent Hierarchical Codelist.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType.#ctor">
            <summary>
            <para>
            The CodelistRefType provides the structure for a codelist reference. (Note that this is structured differently than a similarly-named type in the Registry namespace.) At a minimum, either: AgencyID has the ID of an agency as a value; CodelistID takes the ID of a codelist maintained by that agency; and Version specifies the version of the codelist; or URN supplies a valid SDMX Registry URN (see the SDMX Registry Specification). Alias is used to carry the identifier for the referenced codelist, so that codes from that list can be easily referenced by the CodeRefs contained in the parent Hierarchy, without having to repeat the agency and version for each reference. The Alias must be unique within the parent Hierarchical Codelist.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType.CodelistID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistRefType.Alias">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?, Alias?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType">
            <summary>
            <para>
            The CodeRefType provides the structure for a codelist reference. At a minimum, either a URN value (a valid SDMX Registry URN as specified in teh SDMX Registry Specification) must be supplied, or a ColdelistAliasRef and a CodeID must be specified. CodelistAliasRef references an alias assigned in a CodelistRef element in the containing hierarchical codelist.CodeRef references a code from the codelist identified at the level of the parent hierarchical codelist. Codes are arranged in a hierarchy by reference. Note that it is possible to reference a single code such that it has multiple parents within the hierarchy. Further, the hierarchy may or may not be a levelled one. CodeID holds the ID of the code in the codelist referenced by the hierarchical codelist. CodeRef references a code. LevelRef holds the id of a Level described in the same parent Hierarchical Codelist. NodeAliasID allows for an ID to be assigned to the use of the particular code at that specific point in the hierarchy. This value is unique within the hierarchy being created, and is used to map the hierarchy against external structures. Version holds the version number of the referenced code, to support management of complex hierarchies. Along with this field are the ValidFrom and ValidTo dates, which are inclusive dates during which the code is valid within the parent hierarchy.
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.#ctor">
            <summary>
            <para>
            The CodeRefType provides the structure for a codelist reference. At a minimum, either a URN value (a valid SDMX Registry URN as specified in teh SDMX Registry Specification) must be supplied, or a ColdelistAliasRef and a CodeID must be specified. CodelistAliasRef references an alias assigned in a CodelistRef element in the containing hierarchical codelist.CodeRef references a code from the codelist identified at the level of the parent hierarchical codelist. Codes are arranged in a hierarchy by reference. Note that it is possible to reference a single code such that it has multiple parents within the hierarchy. Further, the hierarchy may or may not be a levelled one. CodeID holds the ID of the code in the codelist referenced by the hierarchical codelist. CodeRef references a code. LevelRef holds the id of a Level described in the same parent Hierarchical Codelist. NodeAliasID allows for an ID to be assigned to the use of the particular code at that specific point in the hierarchy. This value is unique within the hierarchy being created, and is used to map the hierarchy against external structures. Version holds the version number of the referenced code, to support management of complex hierarchies. Along with this field are the ValidFrom and ValidTo dates, which are inclusive dates during which the code is valid within the parent hierarchy.
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.CodelistAliasRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.CodeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.CodeRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.LevelRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.NodeAliasID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.ValidFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeRefType.ValidTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, CodelistAliasRef?, CodeID?, CodeRef*, LevelRef?, NodeAliasID?, Version?, ValidFrom?, ValidTo?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptsType">
            <summary>
            <para>
            The ConceptsType describes an XML type which contains information about sets of concepts and their relationships, each of which is described in a ConceptScheme element. This section replaces the section of the version 1.0 SDMXStructure message which provides details about concepts. As such, it is backward-compatible, and may be used to contain a simple list of concepts as per the 1.0 SDMX-ML specification.
            </para>
            <para>
            Regular expression: (Concept*, ConceptScheme*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptsType.#ctor">
            <summary>
            <para>
            The ConceptsType describes an XML type which contains information about sets of concepts and their relationships, each of which is described in a ConceptScheme element. This section replaces the section of the version 1.0 SDMXStructure message which provides details about concepts. As such, it is backward-compatible, and may be used to contain a simple list of concepts as per the 1.0 SDMX-ML specification.
            </para>
            <para>
            Regular expression: (Concept*, ConceptScheme*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptsType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Concept*, ConceptScheme*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptsType.ConceptScheme">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Concept*, ConceptScheme*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptsType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Concept*, ConceptScheme*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType">
            <summary>
            <para>
            ConceptSchemeType describes the structure of a ConceptScheme element, which is the preferred form (as of version 2.0) of presenting the concepts used in other SDMX constructs. ConceptSchemes may be included inline (that is, with all details provided in the instance or may be referenced externally. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the concept. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". A Name may be provided as a child element (in multiple parallel language versions) and an ID and version and agency information may be provided. ConceptSchemes represent a collection of concepts which are used to describe a meaningful set of distinct concepts, to be used in the reporting of data or metadata. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Concept*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.#ctor">
            <summary>
            <para>
            ConceptSchemeType describes the structure of a ConceptScheme element, which is the preferred form (as of version 2.0) of presenting the concepts used in other SDMX constructs. ConceptSchemes may be included inline (that is, with all details provided in the instance or may be referenced externally. It is possible to use the uri field to point to the location of an SDMX-ML Structure message which contains a more detailed version of the concept. (This is termed an "external reference".) If an external reference is being made, the isExternalReference attribute must be set to "true". A Name may be provided as a child element (in multiple parallel language versions) and an ID and version and agency information may be provided. ConceptSchemes represent a collection of concepts which are used to describe a meaningful set of distinct concepts, to be used in the reporting of data or metadata. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, Concept*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Concept*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Concept*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Concept*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Concept*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionsType">
            <summary>
            <para>
            MetadataStructureDefinitionsType describes one or more metadata structure definitions.
            </para>
            <para>
            Regular expression: (MetadataStructureDefinition+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionsType.#ctor">
            <summary>
            <para>
            MetadataStructureDefinitionsType describes one or more metadata structure definitions.
            </para>
            <para>
            Regular expression: (MetadataStructureDefinition+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataStructureDefinitionsType.MetadataStructureDefinition">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (MetadataStructureDefinition+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TargetIdentifiersType">
            <summary>
            <para>
            TargetIdentifiers are the set of objects against which reference metadata is reported (data providers, data flows, data or metadata structures, etc.). There are two types of TargetIdentifiers: the "full" target identifier, which lists every object used to attach metadata to in the metadata structure definition, and the partial target identifiers, which indicate sub-sets of those concepts against which reference metadata may be reported. It is sometimes the case that metadata will also be reported against the full target identifier. 
            		
            		An example of this is as follows: we might wish to collect some metadata concepts such as contact information for some of the objects described by the SDMX Information Model - for each instance of a metadata flow or a data provider, for example. Our concepts would be the concepts associated with contact information: CONTACT_NAME, CONTACT_PHONE_NUMBER, etc. We would determine how these concepts are associated with the objects in the model: do we want a contact for each data provider broken out by data flow? Or do we want only a single contact reported for each data provider (who might provide several data flows)? Each object or combination of objects we need to have metadata reported for becomes a partial target identifier, unless it happens to contain the full target identifier, in which case we use that instead. Thus, our valid partial target identifiers here would be "data flow" and "data provider", because "data flow by data provider" is a full target identifier. For each target identifier, we could have some set of our concepts reported.
            </para>
            <para>
            Regular expression: (FullTargetIdentifier, PartialTargetIdentifier*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TargetIdentifiersType.#ctor">
            <summary>
            <para>
            TargetIdentifiers are the set of objects against which reference metadata is reported (data providers, data flows, data or metadata structures, etc.). There are two types of TargetIdentifiers: the "full" target identifier, which lists every object used to attach metadata to in the metadata structure definition, and the partial target identifiers, which indicate sub-sets of those concepts against which reference metadata may be reported. It is sometimes the case that metadata will also be reported against the full target identifier. 
            		
            		An example of this is as follows: we might wish to collect some metadata concepts such as contact information for some of the objects described by the SDMX Information Model - for each instance of a metadata flow or a data provider, for example. Our concepts would be the concepts associated with contact information: CONTACT_NAME, CONTACT_PHONE_NUMBER, etc. We would determine how these concepts are associated with the objects in the model: do we want a contact for each data provider broken out by data flow? Or do we want only a single contact reported for each data provider (who might provide several data flows)? Each object or combination of objects we need to have metadata reported for becomes a partial target identifier, unless it happens to contain the full target identifier, in which case we use that instead. Thus, our valid partial target identifiers here would be "data flow" and "data provider", because "data flow by data provider" is a full target identifier. For each target identifier, we could have some set of our concepts reported.
            </para>
            <para>
            Regular expression: (FullTargetIdentifier, PartialTargetIdentifier*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TargetIdentifiersType.FullTargetIdentifier">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (FullTargetIdentifier, PartialTargetIdentifier*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TargetIdentifiersType.PartialTargetIdentifier">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (FullTargetIdentifier, PartialTargetIdentifier*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TargetIdentifiersType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (FullTargetIdentifier, PartialTargetIdentifier*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType">
            <summary>
            <para>
            The full target identifier provides details on all of the objects against which metadata can be reported. The full target identifier is made up of a set of identifier components - each getting its own child element - which are similar to the dimensions of a key family: each one indicates that a value will be provided by the metadata reporter to identify and describe the metadata being reported. A human-readable name must be provided, which may be provided in multiple, parallel-language versions. A longer, human-readable name may also be provided in multiple, language-parallel versions. Annotations may be provided.
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponent*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.#ctor">
            <summary>
            <para>
            The full target identifier provides details on all of the objects against which metadata can be reported. The full target identifier is made up of a set of identifier components - each getting its own child element - which are similar to the dimensions of a key family: each one indicates that a value will be provided by the metadata reporter to identify and describe the metadata being reported. A human-readable name must be provided, which may be provided in multiple, parallel-language versions. A longer, human-readable name may also be provided in multiple, language-parallel versions. Annotations may be provided.
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponent*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponent*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponent*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.IdentifierComponent">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponent*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponent*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.FullTargetIdentifierType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType">
            <summary>
            <para>
            An identifier component describes the use of an object within the full target identifier set. An identifier component must be one of the formally-recognized object classes found in the SDMX Information Model: the sub-element TargetObjectClass provides a way of indicating which objects will be used in reporting metadata, and will indicate how those objects are to be identified by the metadata reporters (which value sets will be allowed for each identification field for each object). The RepresentationScheme child element is used to indicate the valid range of values for the providing taget identifiers in reported metadata.
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.#ctor">
            <summary>
            <para>
            An identifier component describes the use of an object within the full target identifier set. An identifier component must be one of the formally-recognized object classes found in the SDMX Information Model: the sub-element TargetObjectClass provides a way of indicating which objects will be used in reporting metadata, and will indicate how those objects are to be identified by the metadata reporters (which value sets will be allowed for each identification field for each object). The RepresentationScheme child element is used to indicate the valid range of values for the providing taget identifiers in reported metadata.
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.TargetObjectClass">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.RepresentationScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, TargetObjectClass, RepresentationScheme?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.IdentifierComponentType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType">
            <summary>
            <para>
            Partial target identifiers are subsets of the full target identifier. They are themselves given an identifier, so that they can be referenced by the metadata attributes of a report. A human-readable name must be provided, which may be provided in multiple, parallel-language versions. A longer, human-readable name may also be provided in multiple, language-parallel versions. Annotations may be provided.
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponentRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.#ctor">
            <summary>
            <para>
            Partial target identifiers are subsets of the full target identifier. They are themselves given an identifier, so that they can be referenced by the metadata attributes of a report. A human-readable name must be provided, which may be provided in multiple, parallel-language versions. A longer, human-readable name may also be provided in multiple, language-parallel versions. Annotations may be provided.
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponentRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponentRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponentRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.IdentifierComponentRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponentRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, IdentifierComponentRef*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.PartialTargetIdentifierType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDType">
            <summary>
            <para>
            The Object ID is used to reference a particular Object within the SDMX Information Model's formalization of statistical exchanges.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType">
            <summary>
            <para>
            The report structure describes the presentation of the reported concepts, and associates them with target identifiers, full or partial. It can be given a name and/or annotations. It must be given an ID, using the id attribute, which must be unique within the MetadataStructureDefinition element. It contains one or more MetadataAttribute elements, each of which may either hold a value, or may have subordinate MetadataAttribute elements. The target attribute holds the ID of a full or partial identifier, which is the identifier of the target against which the metadata attributes are reported.
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataAttribute+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.#ctor">
            <summary>
            <para>
            The report structure describes the presentation of the reported concepts, and associates them with target identifiers, full or partial. It can be given a name and/or annotations. It must be given an ID, using the id attribute, which must be unique within the MetadataStructureDefinition element. It contains one or more MetadataAttribute elements, each of which may either hold a value, or may have subordinate MetadataAttribute elements. The target attribute holds the ID of a full or partial identifier, which is the identifier of the target against which the metadata attributes are reported.
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataAttribute+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataAttribute+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataAttribute+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.MetadataAttribute">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataAttribute+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, MetadataAttribute+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportStructureType.target">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType">
            <summary>
            <para>
            TextFormatType defines the information for describing a text format. If the TextType attribute is not specified, any valid characters may be included in the text field. (It corresponds to the xs:string datatype of W3C XML Schema.) The textType attribute provides a description of the data type, and may place restrictions on the values of the other attributes, referred to as "facets". The isSequence attribute indicates whether the values are intended to be ordered, and it may work in combination with the interval attribute. The minLength and maxLength attributes specify the minimum and maximum lengths of the value in characters. startValue and endValue are used for inclusive and exclusive ranges, indicating what the bounds of the range are. The interval attribute specifies the permitted interval between two values. The timeInterval attribute indicates the permitted duration between two time expressions. The decimals attribute indicates the number of characters allowed after the decimal separator. The pattern attribute holds any regular expression permitted in the simila facet in W3C XML Schema.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.#ctor">
            <summary>
            <para>
            TextFormatType defines the information for describing a text format. If the TextType attribute is not specified, any valid characters may be included in the text field. (It corresponds to the xs:string datatype of W3C XML Schema.) The textType attribute provides a description of the data type, and may place restrictions on the values of the other attributes, referred to as "facets". The isSequence attribute indicates whether the values are intended to be ordered, and it may work in combination with the interval attribute. The minLength and maxLength attributes specify the minimum and maximum lengths of the value in characters. startValue and endValue are used for inclusive and exclusive ranges, indicating what the bounds of the range are. The interval attribute specifies the permitted interval between two values. The timeInterval attribute indicates the permitted duration between two time expressions. The decimals attribute indicates the number of characters allowed after the decimal separator. The pattern attribute holds any regular expression permitted in the simila facet in W3C XML Schema.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.textType">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.isSequence">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.minLength">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.maxLength">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.startValue">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.endValue">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.interval">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.timeInterval">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.decimals">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextFormatType.pattern">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeType">
            <summary>
            <para>
            TextTypeType provides an enumerated list of the types of characters allowed in a TextFormat field.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.UsageStatusType">
            <summary>
            <para>
            UsageStatus provides a list of enumerated types for indicating whether reporting a given metadata attribute is mandatory or conditional.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationSchemeTypeType">
            <summary>
            <para>
            Representation scheme type provides an enumerated list of valid types of representation schemes.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamiliesType">
            <summary>
            <para>
            KeyFamiliesType defines the structure for describing one or more key families. It also provides uniqueness constraints for each of the key family IDs.
            </para>
            <para>
            Regular expression: (KeyFamily+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamiliesType.#ctor">
            <summary>
            <para>
            KeyFamiliesType defines the structure for describing one or more key families. It also provides uniqueness constraints for each of the key family IDs.
            </para>
            <para>
            Regular expression: (KeyFamily+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.KeyFamiliesType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (KeyFamily+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType">
            <summary>
            <para>
            ComponentsType describes the dimensions, groups, attributes, and measures of the key family. If TimeDimension is included in the key family - which it must be if time series formats for the data (GenericData, CompactData, and UtilityData formats) are to be used - then there must also be a frequency dimension. 
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.#ctor">
            <summary>
            <para>
            ComponentsType describes the dimensions, groups, attributes, and measures of the key family. If TimeDimension is included in the key family - which it must be if time series formats for the data (GenericData, CompactData, and UtilityData formats) are to be used - then there must also be a frequency dimension. 
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.Dimension">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.TimeDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.Group">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.PrimaryMeasure">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.CrossSectionalMeasure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentsType.Attribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Dimension*, TimeDimension?, Group*, PrimaryMeasure, CrossSectionalMeasure*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType">
            <summary>
            <para>
            GroupType declares any useful groupings of data, based on a selection of the declared (non-Time) dimensions (indicated with the DimensionRef element) which form partial keys to which attributes may be attached. The value of the DimensionRef element is the concept of the dimension - that is, the value of the dimension's concept attribute. Thus, if data is to be presented as a set of time series which vary only according to their differing frequencies, a "sibling group" would be declared, with all dimensions except the frequency dimension in it. If data is commonly grouped as a set of all countries, then a "Country Group" could be declared, with all dimensions except the country dimension forming part of the partial key. Any dimension which is not part of a group has a value which varies at the series level (for time series formats). There is no requirement to have only a single dimension ommitted from a partial key - it can be any subset of the set of ordered dimensions (that is, all dimensions except the time dimension, which may never be declared as belonging to a group partial key). All groups declared in the key family must be unique - that is, you may not have duplicate partial keys. All groups must also be given unique names (id attributes). Although it is conventional to declare dimensions in the same order as they are declared in the ordered key, there is no requirement to do so - the ordering of the values of the key are taken from the order in which the dimensions are declared. The Description element provides a human-readable description (potentially in multiple, parallel languages) of the group. Note that for cross-sectional formats, the named group mechanism is not used, but is instead replaced by a generic group which carries time and frequency values with it, and allows for any available group-level attributes to be specified if desired. 
            </para>
            <para>
            Regular expression: ((DimensionRef+ | AttachmentConstraintRef), Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType.#ctor">
            <summary>
            <para>
            GroupType declares any useful groupings of data, based on a selection of the declared (non-Time) dimensions (indicated with the DimensionRef element) which form partial keys to which attributes may be attached. The value of the DimensionRef element is the concept of the dimension - that is, the value of the dimension's concept attribute. Thus, if data is to be presented as a set of time series which vary only according to their differing frequencies, a "sibling group" would be declared, with all dimensions except the frequency dimension in it. If data is commonly grouped as a set of all countries, then a "Country Group" could be declared, with all dimensions except the country dimension forming part of the partial key. Any dimension which is not part of a group has a value which varies at the series level (for time series formats). There is no requirement to have only a single dimension ommitted from a partial key - it can be any subset of the set of ordered dimensions (that is, all dimensions except the time dimension, which may never be declared as belonging to a group partial key). All groups declared in the key family must be unique - that is, you may not have duplicate partial keys. All groups must also be given unique names (id attributes). Although it is conventional to declare dimensions in the same order as they are declared in the ordered key, there is no requirement to do so - the ordering of the values of the key are taken from the order in which the dimensions are declared. The Description element provides a human-readable description (potentially in multiple, parallel languages) of the group. Note that for cross-sectional formats, the named group mechanism is not used, but is instead replaced by a generic group which carries time and frequency values with it, and allows for any available group-level attributes to be specified if desired. 
            </para>
            <para>
            Regular expression: ((DimensionRef+ | AttachmentConstraintRef), Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType.DimensionRef">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DimensionRef+ | AttachmentConstraintRef), Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType.AttachmentConstraintRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DimensionRef+ | AttachmentConstraintRef), Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: ((DimensionRef+ | AttachmentConstraintRef), Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: ((DimensionRef+ | AttachmentConstraintRef), Description*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.GroupType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType">
            <summary>
            <para>
            AttachmentConstraintRefType describes a reference to an attachment constraint. This includes a reference to a dataflow, metadataflow, data provider, or provision agreement plus the ID of the attachment constraint, as assigned within the constraints associated with the referenced object, in the ConstraintRef element.
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType.#ctor">
            <summary>
            <para>
            AttachmentConstraintRefType describes a reference to an attachment constraint. This includes a reference to a dataflow, metadataflow, data provider, or provision agreement plus the ID of the attachment constraint, as assigned within the constraints associated with the referenced object, in the ConstraintRef element.
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentConstraintRefType.ConstraintRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: ((DataflowRef | MetadataflowRef | DataProviderRef | ProvisionAgreementRef), ConstraintRef)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType">
            <summary>
            <para>
            ProvisionAgreementRef allows for the identification of a provision agreement. At a minimum, either the URN element - holding a valid registry URN - or the set of OragnisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, DataflowAgencyID, and DataflowID must be specified. Constraint can be used to express constraints associated with the provision agreement. This type differs from the similar type in the Registry namespace package by not providing information about the datasource or constraints.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.#ctor">
            <summary>
            <para>
            ProvisionAgreementRef allows for the identification of a provision agreement. At a minimum, either the URN element - holding a valid registry URN - or the set of OragnisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, DataflowAgencyID, and DataflowID must be specified. Constraint can be used to express constraints associated with the provision agreement. This type differs from the similar type in the Registry namespace package by not providing information about the datasource or constraints.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.OrganisationSchemeAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.DataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.DataProviderVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.DataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.DataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.DataflowVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProvisionAgreementRefType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType">
            <summary>
            <para>
            The DataProviderRef type structures a reference to a data provider. This requires that IDs be provided for an organisation scheme, its maintenance agency, and the data provider as identified in the referenced organisation scheme. The Version element may be used to specify the version of the indicated data provider. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific urn as an alternate means of identification. At a minimum, either the URN element or OrgansisationSchemeID, OrganisationSchemeAgencyID, DataProviderID, and (optionally) Version must be supplied. When used in a response document of any type, the URN must always be provided. Constraints can be used to specify constraints associated with the data provider. This type differs from the similar type in the Registry namespace by not describing the datasource.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.#ctor">
            <summary>
            <para>
            The DataProviderRef type structures a reference to a data provider. This requires that IDs be provided for an organisation scheme, its maintenance agency, and the data provider as identified in the referenced organisation scheme. The Version element may be used to specify the version of the indicated data provider. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific urn as an alternate means of identification. At a minimum, either the URN element or OrgansisationSchemeID, OrganisationSchemeAgencyID, DataProviderID, and (optionally) Version must be supplied. When used in a response document of any type, the URN must always be provided. Constraints can be used to specify constraints associated with the data provider. This type differs from the similar type in the Registry namespace by not describing the datasource.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.OrganisationSchemeAgencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.DataProviderID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataProviderRefType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetsType">
            <summary>
            <para>
            StructureSetsType contains one or more structure sets.
            </para>
            <para>
            Regular expression: (StructureSet+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetsType.#ctor">
            <summary>
            <para>
            StructureSetsType contains one or more structure sets.
            </para>
            <para>
            Regular expression: (StructureSet+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureSetsType.StructureSet">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (StructureSet+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType">
            <summary>
            <para>
            RelatedStructuresType includes references to key families (in the KeyFamilyRef element) and/or metadata structure definitions (In the MetadataStructureRef element). Any mapped CategorySchemes, ConceptSchemes, or Organisation Schemes should also be referenced. HierarchicalCodelistRef allows for HierarchicalCodelists which describe relationships between pertinent codelists to be referenced and included in the structure set - this must be used if the CodelistMap in the StructureSet refers to any hierarchical codelists.
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.#ctor">
            <summary>
            <para>
            RelatedStructuresType includes references to key families (in the KeyFamilyRef element) and/or metadata structure definitions (In the MetadataStructureRef element). Any mapped CategorySchemes, ConceptSchemes, or Organisation Schemes should also be referenced. HierarchicalCodelistRef allows for HierarchicalCodelists which describe relationships between pertinent codelists to be referenced and included in the structure set - this must be used if the CodelistMap in the StructureSet refers to any hierarchical codelists.
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.ConceptSchemeRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.CategorySchemeRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.OrganisationSchemeRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RelatedStructuresType.HierarchicalCodelistRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyFamilyRef*, MetadataStructureRef*, ConceptSchemeRef*, CategorySchemeRef*, OrganisationSchemeRef*, HierarchicalCodelistRef*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeRefType">
            <summary>
            <para>
            CategorySchemeRef allows for references to specific category schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeRefType.#ctor">
            <summary>
            <para>
            CategorySchemeRef allows for references to specific category schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeRefType.CategorySchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeRefType">
            <summary>
            <para>
            ConceptSchemeRef allows for references to specific concept schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. 
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeRefType.#ctor">
            <summary>
            <para>
            ConceptSchemeRef allows for references to specific concept schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. 
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeRefType.ConceptSchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeRefType">
            <summary>
            <para>
            OrganisationSchemeRef allows for references to specific organisation schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeRefType.#ctor">
            <summary>
            <para>
            OrganisationSchemeRef allows for references to specific organisation schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistRefType">
            <summary>
            <para>
            HierarchicalCodelistRef allows for references to specific hierarchical codelists. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistRefType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistRef allows for references to specific hierarchical codelists. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistRefType.HierarchicalCodelistID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.HierarchicalCodelistRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType">
            <summary>
            <para>
            StructureMapType describes the structure of the mapping of components between a referenced key family or metadata structure and a target key family or metadata structure. Components include any dimension, attribute, or reported concept. The Name element is used to provide a human-readable name for the component map; the Description element is used to provide a longer human-readable description. Both of these elements may be provided in multiple, language-specific variations. The StructureMapType provides for Annotations with the Annotations element. Either a KeyFamilyRef or a MetadataStructureRef must be provided; and also a TargetKeyFamilyRef or a TargetMetadataStructureRef. A series of map components are then specified using the ComponentMap element, each of which specifies the equivalence of a concept in the referenced straucture definition to one in the target structure definition. If the isExtension attribute has a value of true, then the target structure definition inherits all properties of the referenced structure definition, and may have additional components. Note that this attribute may only be set to true if the component map has as a referenced structure definition and a target structure definition either two key families or two metadata structure definition. You cannot inherit concepts between the two type of structure definitions using this mechanism. The id attribute allows for an id to be assigned to the component map - it must be unique within its StructureSet.
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.#ctor">
            <summary>
            <para>
            StructureMapType describes the structure of the mapping of components between a referenced key family or metadata structure and a target key family or metadata structure. Components include any dimension, attribute, or reported concept. The Name element is used to provide a human-readable name for the component map; the Description element is used to provide a longer human-readable description. Both of these elements may be provided in multiple, language-specific variations. The StructureMapType provides for Annotations with the Annotations element. Either a KeyFamilyRef or a MetadataStructureRef must be provided; and also a TargetKeyFamilyRef or a TargetMetadataStructureRef. A series of map components are then specified using the ComponentMap element, each of which specifies the equivalence of a concept in the referenced straucture definition to one in the target structure definition. If the isExtension attribute has a value of true, then the target structure definition inherits all properties of the referenced structure definition, and may have additional components. Note that this attribute may only be set to true if the component map has as a referenced structure definition and a target structure definition either two key families or two metadata structure definition. You cannot inherit concepts between the two type of structure definitions using this mechanism. The id attribute allows for an id to be assigned to the component map - it must be unique within its StructureSet.
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.TargetKeyFamilyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.TargetMetadataStructureRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.ComponentMap">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, (KeyFamilyRef | MetadataStructureRef), (TargetKeyFamilyRef | TargetMetadataStructureRef), ComponentMap*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.isExtension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.StructureMapType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType">
            <summary>
            <para>
            CodelistMap allows the description of how the codes in a codelist are represented in a target codelist or associated hierarchical codelist. A human-readable Name is provided, and a longer, human-readable description may be provided as well, in the Name and Description elements respectively. These may be supplied in multiple, language-specific versions.CodelistRef references the codelist or hierarchical codelist being mapped; TargetCodelistRef indicates the codelist to which it will be mapped. CodeMap is the element which indicates the equivalence of codes in the referenced codelist to those in the target codelist. Any codes not mapped are assumed to lack equivalence. The CodelistMap may be annotated using the Annotations element. The id attribute is used to assign an identifier which is unique within the StructureSet for all CodelistMaps.
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.#ctor">
            <summary>
            <para>
            CodelistMap allows the description of how the codes in a codelist are represented in a target codelist or associated hierarchical codelist. A human-readable Name is provided, and a longer, human-readable description may be provided as well, in the Name and Description elements respectively. These may be supplied in multiple, language-specific versions.CodelistRef references the codelist or hierarchical codelist being mapped; TargetCodelistRef indicates the codelist to which it will be mapped. CodeMap is the element which indicates the equivalence of codes in the referenced codelist to those in the target codelist. Any codes not mapped are assumed to lack equivalence. The CodelistMap may be annotated using the Annotations element. The id attribute is used to assign an identifier which is unique within the StructureSet for all CodelistMaps.
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.CodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.HierarchicalCodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.TargetCodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.TargetHierarchicalCodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.CodeMap">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, (CodelistRef | HierarchicalCodelistRef), (TargetCodelistRef | TargetHierarchicalCodelistRef), CodeMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodelistMapType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeMapType">
            <summary>
            <para>
            CodeMap describes the equivalence of the codes in the referenced codelist or hierarchical codelist indicated in the CodelistRef element of the containing CodelistMap to those in the referenced TargetCodelist in the containing CodelistMap. The CodeAlias attribute is used to assign an alias code to the equivalence for querying the structure set.
            </para>
            <para>
            Regular expression: (MapCodeRef, MapTargetCodeRef)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeMapType.#ctor">
            <summary>
            <para>
            CodeMap describes the equivalence of the codes in the referenced codelist or hierarchical codelist indicated in the CodelistRef element of the containing CodelistMap to those in the referenced TargetCodelist in the containing CodelistMap. The CodeAlias attribute is used to assign an alias code to the equivalence for querying the structure set.
            </para>
            <para>
            Regular expression: (MapCodeRef, MapTargetCodeRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeMapType.MapCodeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MapCodeRef, MapTargetCodeRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeMapType.MapTargetCodeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MapCodeRef, MapTargetCodeRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CodeMapType.CodeAlias">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType">
            <summary>
            <para>
            ComponentMapType describes how a component (that is, dimension, attribute, or reported concept) in a referenced metadata structure definition or key family maps to a component in a referenced  "target" metadata structure definition or key family. The MapConceptRef contains the id of the concept in the metadata structure definition or key family referenced in the KeyFamilyRef or MetadataStructureRef element of the containing ComponentMap element. The MapTargetConceptRef contains the id of the concept in the metadata structure definition or key family referenced in the TargetKeyFamilyRef or TargetMetadataStructureRef element of the containing ComponentMap element. The RepresentationMapRef element contains a reference to the CodelistMap which describes how the coded representation of the referenced component maps to the coded representation of the target component. If the target component has an uncoded representation, then ToTextFormat is used to describe the un-coded representation to which the code of the referenced component should be transformed. The ToValueType element tells you whether the value, name, or description of the source value should be used in the resulting text field. The componentAlias attribute assigns a new ID to the relationship between these components. Note that of three components from different key families and/or metadata structure definitions are all equivalent, the two component maps can share a single alias. Note also that for metadata concepts which are represented not by codelists but rather by other types of item schemes (OrganisationSchemes or CategorySchemes), these can also be referenced using the RepresentationMapRef element. The preferredLanguage attribute specifies the language to use when translating coded values into their names or descriptions, if available, in the same form as xml:lang.
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.#ctor">
            <summary>
            <para>
            ComponentMapType describes how a component (that is, dimension, attribute, or reported concept) in a referenced metadata structure definition or key family maps to a component in a referenced  "target" metadata structure definition or key family. The MapConceptRef contains the id of the concept in the metadata structure definition or key family referenced in the KeyFamilyRef or MetadataStructureRef element of the containing ComponentMap element. The MapTargetConceptRef contains the id of the concept in the metadata structure definition or key family referenced in the TargetKeyFamilyRef or TargetMetadataStructureRef element of the containing ComponentMap element. The RepresentationMapRef element contains a reference to the CodelistMap which describes how the coded representation of the referenced component maps to the coded representation of the target component. If the target component has an uncoded representation, then ToTextFormat is used to describe the un-coded representation to which the code of the referenced component should be transformed. The ToValueType element tells you whether the value, name, or description of the source value should be used in the resulting text field. The componentAlias attribute assigns a new ID to the relationship between these components. Note that of three components from different key families and/or metadata structure definitions are all equivalent, the two component maps can share a single alias. Note also that for metadata concepts which are represented not by codelists but rather by other types of item schemes (OrganisationSchemes or CategorySchemes), these can also be referenced using the RepresentationMapRef element. The preferredLanguage attribute specifies the language to use when translating coded values into their names or descriptions, if available, in the same form as xml:lang.
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.MapConceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.MapTargetConceptRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.RepresentationMapRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.ToTextFormat">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.ToValueType">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (MapConceptRef, MapTargetConceptRef, (RepresentationMapRef | (ToTextFormat, ToValueType)))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.componentAlias">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ComponentMapType.preferredLanguage">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ToValueTypeType">
            <summary>
            <para>
            ToValueTypeType provides an enumeration of available text-equivalents for translation of coded values into textual formats. 
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationMapRefType">
            <summary>
            <para>
            RepresentationMapRefType describes the structure of a reference to a codelist, category scheme, or organisation scheme map. RepresentationMapAgencyID takes the id value of the maintenance agency of the codelist, category scheme, or organisation scheme map; RepresentationMapID takes the id attribute value of the codelist, category scheme, or organisation scheme map.
            </para>
            <para>
            Regular expression: (RepresentationMapAgencyID, RepresentationMapID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationMapRefType.#ctor">
            <summary>
            <para>
            RepresentationMapRefType describes the structure of a reference to a codelist, category scheme, or organisation scheme map. RepresentationMapAgencyID takes the id value of the maintenance agency of the codelist, category scheme, or organisation scheme map; RepresentationMapID takes the id attribute value of the codelist, category scheme, or organisation scheme map.
            </para>
            <para>
            Regular expression: (RepresentationMapAgencyID, RepresentationMapID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationMapRefType.RepresentationMapAgencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (RepresentationMapAgencyID, RepresentationMapID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationMapRefType.RepresentationMapID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (RepresentationMapAgencyID, RepresentationMapID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationMapRefType.representationType">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.RepresentationTypeType">
            <summary>
            <para>
            RepresentationTypeType provides an enumeration of representation scheme types useful for the mapping of reference metadata concepts to one another.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType">
            <summary>
            <para>
            CategorySchemeMap provides for the mapping of categories in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for CategorySchemeMaps within the StructureSet. CategorySchemeRef identifies the source CategoryScheme; TargetCategorySchemeRef identifies the target CategoryScheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.#ctor">
            <summary>
            <para>
            CategorySchemeMap provides for the mapping of categories in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for CategorySchemeMaps within the StructureSet. CategorySchemeRef identifies the source CategoryScheme; TargetCategorySchemeRef identifies the target CategoryScheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.CategorySchemeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.TargetCategorySchemeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.CategoryMap">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, CategorySchemeRef, TargetCategorySchemeRef, CategoryMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategorySchemeMapType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryMapType">
            <summary>
            <para>
            CategoryMap allows for the mapping of a category in one scheme against a category in another, target scheme. The categoryAlias attribute allows for an alias to be assigned to the mapping for searching across the set of mapped categories. Note that the Category IDs are recursive, and can therefore describe a path through a category scheme.
            </para>
            <para>
            Regular expression: (CategoryID, TargetCategoryID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryMapType.#ctor">
            <summary>
            <para>
            CategoryMap allows for the mapping of a category in one scheme against a category in another, target scheme. The categoryAlias attribute allows for an alias to be assigned to the mapping for searching across the set of mapped categories. Note that the Category IDs are recursive, and can therefore describe a path through a category scheme.
            </para>
            <para>
            Regular expression: (CategoryID, TargetCategoryID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryMapType.CategoryID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (CategoryID, TargetCategoryID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryMapType.TargetCategoryID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (CategoryID, TargetCategoryID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.CategoryMapType.categoryAlias">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType">
            <summary>
            <para>
            ConceptSchemeMap provides for the mapping of concepts in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for ConceptSchemeMaps within the StructureSet. ConceptSchemeRef identifies the source ConceptScheme; TargetConceptSchemeRef identifies the target ConceptScheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.#ctor">
            <summary>
            <para>
            ConceptSchemeMap provides for the mapping of concepts in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for ConceptSchemeMaps within the StructureSet. ConceptSchemeRef identifies the source ConceptScheme; TargetConceptSchemeRef identifies the target ConceptScheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.ConceptSchemeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.TargetConceptSchemeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.ConceptMap">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, ConceptSchemeRef, TargetConceptSchemeRef, ConceptMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptSchemeMapType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptMapType">
            <summary>
            <para>
            ConceptMap allows for the mapping of a concept in one scheme against a concept in another, target scheme. The conceptAlias attribute allows for an alias to be assigned to the mapping for searching across the set of mapped concepts.
            </para>
            <para>
            Regular expression: (ConceptID, TargetConceptID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptMapType.#ctor">
            <summary>
            <para>
            ConceptMap allows for the mapping of a concept in one scheme against a concept in another, target scheme. The conceptAlias attribute allows for an alias to be assigned to the mapping for searching across the set of mapped concepts.
            </para>
            <para>
            Regular expression: (ConceptID, TargetConceptID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptMapType.ConceptID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ConceptID, TargetConceptID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptMapType.TargetConceptID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ConceptID, TargetConceptID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ConceptMapType.conceptAlias">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType">
            <summary>
            <para>
            OrganisationSchemeMap provides for the mapping of Organisations in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for OrganisationSchemeMaps within the StructureSet. OrganisationSchemeRef identifies the source OrganisationScheme; TargetOrganisationSchemeRef identifies the target OrganisationScheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.#ctor">
            <summary>
            <para>
            OrganisationSchemeMap provides for the mapping of Organisations in one scheme against those in another. It requires a human-readable Name, and can have a longer human-readable Description, both of which can be supplied in multiple, parallel-language form. It may be annotated using Annotations. The id attribute carries a unique ID for OrganisationSchemeMaps within the StructureSet. OrganisationSchemeRef identifies the source OrganisationScheme; TargetOrganisationSchemeRef identifies the target OrganisationScheme.
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.OrganisationSchemeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.TargetOrganisationSchemeRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.OrganisationMap">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, OrganisationSchemeRef, TargetOrganisationSchemeRef, OrganisationMap+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationSchemeMapType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationMapType">
            <summary>
            <para>
            OrganisationMap allows for the mapping of an organisation in one scheme against an organisation in another, target scheme. The organisationAlias attribute allows for an alias to be assigned to the mapping for searching across the set of mapped organisations.
            </para>
            <para>
            Regular expression: (OrganisationID, TargetOrganisationID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationMapType.#ctor">
            <summary>
            <para>
            OrganisationMap allows for the mapping of an organisation in one scheme against an organisation in another, target scheme. The organisationAlias attribute allows for an alias to be assigned to the mapping for searching across the set of mapped organisations.
            </para>
            <para>
            Regular expression: (OrganisationID, TargetOrganisationID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationMapType.OrganisationID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (OrganisationID, TargetOrganisationID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationMapType.TargetOrganisationID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (OrganisationID, TargetOrganisationID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.OrganisationMapType.organisationAlias">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomiesType">
            <summary>
            <para>
            ReportingTaxonomiesType holds on or more ReportingTaxonomy elements.
            </para>
            <para>
            Regular expression: (ReportingTaxonomy+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomiesType.#ctor">
            <summary>
            <para>
            ReportingTaxonomiesType holds on or more ReportingTaxonomy elements.
            </para>
            <para>
            Regular expression: (ReportingTaxonomy+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomiesType.ReportingTaxonomy">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ReportingTaxonomy+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType">
            <summary>
            <para>
            ReportingTaxonomyType groups data flows and/or metadata flows for the purposes of assembling "reports" made up of data from disparate sources. It is a maintainable object, and thus has a mandatory human-readable Name and optional Description containing a longer human-readable description. Annotations may be included. All of these fields may be provided in multiple, parallel languages. The id attribute assignes a unique ID to the Reporting Taxonomy, version provides a version number, uri contains a URL where the SDMX-ML expression of the Reporting taxonomy can be found, and must be included if the isExternalReference attribute has a value of true. The urn attribute holds the value of a valid SDMX Registry URN as per the SDMX Registry specification. The isExternalReference attribute, if set to true, indicates that the uri attribute points to an external location for the ReportingTaxonomy, with only the id, Name element, and version supplied in addition. The agencyID attribute holds the ID of the Reporting Taxonomies' maintenance agency. Also, if the Reporting Taxonomy is final, the isFinal attribute must`have a value of true - otherwise, it will be assumed to be non-final. (All production versions must be made final - that is, unchangeable without versioning.) The sub-element Category may be used to group dataflows and metadataflows into useful sub-packages. DataflowRef and MetadataFlowRef are references to the flows which make up the reporting taxonomy at the top level. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyType groups data flows and/or metadata flows for the purposes of assembling "reports" made up of data from disparate sources. It is a maintainable object, and thus has a mandatory human-readable Name and optional Description containing a longer human-readable description. Annotations may be included. All of these fields may be provided in multiple, parallel languages. The id attribute assignes a unique ID to the Reporting Taxonomy, version provides a version number, uri contains a URL where the SDMX-ML expression of the Reporting taxonomy can be found, and must be included if the isExternalReference attribute has a value of true. The urn attribute holds the value of a valid SDMX Registry URN as per the SDMX Registry specification. The isExternalReference attribute, if set to true, indicates that the uri attribute points to an external location for the ReportingTaxonomy, with only the id, Name element, and version supplied in addition. The agencyID attribute holds the ID of the Reporting Taxonomies' maintenance agency. Also, if the Reporting Taxonomy is final, the isFinal attribute must`have a value of true - otherwise, it will be assumed to be non-final. (All production versions must be made final - that is, unchangeable without versioning.) The sub-element Category may be used to group dataflows and metadataflows into useful sub-packages. DataflowRef and MetadataFlowRef are references to the flows which make up the reporting taxonomy at the top level. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.DataflowRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, DataflowRef*, MetadataflowRef*, Category*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ReportingTaxonomyType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowRefType">
            <summary>
            <para>
            The MetadataflowRef type structures a reference to a metadataflow definition. This requires that ID are provided for a pre-existing Agency and Metadataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. When used in a response document of any type, the URN must always be provided. At a minimum, either the URN element or AgencyID, MetadataflowID, and (optionally) version must be supplied. Datasource may be used to specify a datasource. Constraint can be used to provide constraints associated with the metadataflow.  Note that this is similar, but not identical to the MetadataflowRefType found in the SDMX-ML registry namespace package - it lacks references to the datasource and the constraints.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowRefType.#ctor">
            <summary>
            <para>
            The MetadataflowRef type structures a reference to a metadataflow definition. This requires that ID are provided for a pre-existing Agency and Metadataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. When used in a response document of any type, the URN must always be provided. At a minimum, either the URN element or AgencyID, MetadataflowID, and (optionally) version must be supplied. Datasource may be used to specify a datasource. Constraint can be used to provide constraints associated with the metadataflow.  Note that this is similar, but not identical to the MetadataflowRefType found in the SDMX-ML registry namespace package - it lacks references to the datasource and the constraints.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowRefType.MetadataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.MetadataflowRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowRefType">
            <summary>
            <para>
            The DataflowRef type structures a reference to a dataflow definition. This requires that ID are provided for a pre-existing Agency and Dataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. At a minimum, either the URN element or AgencyID, DataflowID, and (optionally) version must be supplied. When used in a response document of any type, the URN must always be provided. Datasource may be used to specify a datasource. Constraints can be used to specify constraints associated with the dataflow. Note that this is similar, but not identical to the DataflowRefType found in the SDMX-ML registry namespace package - it lacks references to the datasource and the constraints.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowRefType.#ctor">
            <summary>
            <para>
            The DataflowRef type structures a reference to a dataflow definition. This requires that ID are provided for a pre-existing Agency and Dataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. At a minimum, either the URN element or AgencyID, DataflowID, and (optionally) version must be supplied. When used in a response document of any type, the URN must always be provided. Datasource may be used to specify a datasource. Constraints can be used to specify constraints associated with the dataflow. Note that this is similar, but not identical to the DataflowRefType found in the SDMX-ML registry namespace package - it lacks references to the datasource and the constraints.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowRefType.DataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.DataflowRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessesType">
            <summary>
            <para>
            ProcessesType describes a list of Processes.
            </para>
            <para>
            Regular expression: (Process+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessesType.#ctor">
            <summary>
            <para>
            ProcessesType describes a list of Processes.
            </para>
            <para>
            Regular expression: (Process+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessesType.Process">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Process+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType">
            <summary>
            <para>
            ProcessType generically describes a statistical process. In this version of the SDMX Technical Specifications, it is not meant to support process automation, but serves as a description of how processes occur. The primary use for this structural mechanism is the attachment of reference metadata regarding statistical processing. A process has a human-readable Name, which may be provided in multiple, parallel-language versions. It also has an optional human-readable Description, which also may be provided with multiple, parallel-language versions. The Annotations element allows for it to be annotated. The id attribute takes a unique id within the set of processes maintained by the agency identified in the agencyID attribute. The version attribute indicated the version of teh process description. The uri value is a URL where a complete description of the Process may be found; the urn attribute takes the valid registry URN of the Process, as described in the SDMX Registry Specification. If isFinal is set to true, the process description cannot be changed without versioning. If isExternalReference is true, then only the id, agency, Name, and uri (or URN) need be supplied - all other fields are assumed to be found in a valid SDMX Structure message found at the uri attribute location. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.#ctor">
            <summary>
            <para>
            ProcessType generically describes a statistical process. In this version of the SDMX Technical Specifications, it is not meant to support process automation, but serves as a description of how processes occur. The primary use for this structural mechanism is the attachment of reference metadata regarding statistical processing. A process has a human-readable Name, which may be provided in multiple, parallel-language versions. It also has an optional human-readable Description, which also may be provided with multiple, parallel-language versions. The Annotations element allows for it to be annotated. The id attribute takes a unique id within the set of processes maintained by the agency identified in the agencyID attribute. The version attribute indicated the version of teh process description. The uri value is a URL where a complete description of the Process may be found; the urn attribute takes the valid registry URN of the Process, as described in the SDMX Registry Specification. If isFinal is set to true, the process description cannot be changed without versioning. If isExternalReference is true, then only the id, agency, Name, and uri (or URN) need be supplied - all other fields are assumed to be found in a valid SDMX Structure message found at the uri attribute location. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name+, Description*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.ProcessStep">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.isExternalReference">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.agencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType">
            <summary>
            <para>
            ProcessStepType describes a single step in a statistical process. ProcessSteps may be recursive. The Input element specifies the type of object(s) which serve as inputs to the process; the Output element specifies the type of objects which are the result of the process. Computation elements describe the computations involved in the process, in any form desired by the user (these are informational rather than machine-actionable), and so may be supplied in multiple, parallel-language versions. Transitions describe the process steps to which a process is connected - that is, which processes happen next. The process step maust be given a Name, and may be given a Description. These are human-readable, and may be supplied in multiple, parallel-language versions. Annotations may be supplied. The id attribute takes the unique identifier of the process step within the parent process.
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.#ctor">
            <summary>
            <para>
            ProcessStepType describes a single step in a statistical process. ProcessSteps may be recursive. The Input element specifies the type of object(s) which serve as inputs to the process; the Output element specifies the type of objects which are the result of the process. Computation elements describe the computations involved in the process, in any form desired by the user (these are informational rather than machine-actionable), and so may be supplied in multiple, parallel-language versions. Transitions describe the process steps to which a process is connected - that is, which processes happen next. The process step maust be given a Name, and may be given a Description. These are human-readable, and may be supplied in multiple, parallel-language versions. Annotations may be supplied. The id attribute takes the unique identifier of the process step within the parent process.
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Name">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Input">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Output">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Computation">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Transition">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.ProcessStep">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name+, Description*, Input*, Output*, Computation*, Transition*, ProcessStep*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ProcessStepType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TransitionType">
            <summary>
            <para>
            TransitionType describes the Condition and next step in a transition. The Condition text is informational, and may be supplied in multiple, parallel-language form. The TargetStep holds the id of the next step in the process if the condition is met.
            </para>
            <para>
            Regular expression: (TargetStep?, Condition?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TransitionType.#ctor">
            <summary>
            <para>
            TransitionType describes the Condition and next step in a transition. The Condition text is informational, and may be supplied in multiple, parallel-language form. The TargetStep holds the id of the next step in the process if the condition is met.
            </para>
            <para>
            Regular expression: (TargetStep?, Condition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TransitionType.TargetStep">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TargetStep?, Condition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TransitionType.Condition">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (TargetStep?, Condition?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AssignmentStatusTypeConstants">
            <summary>
                The assignment status type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AssignmentStatusTypeConstants.Conditional">
            <summary>
                The conditional.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AssignmentStatusTypeConstants.Mandatory">
            <summary>
                The mandatory.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentLevelTypeConstants">
            <summary>
                The attachment level type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentLevelTypeConstants.DataSet">
            <summary>
                The data set.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentLevelTypeConstants.Group">
            <summary>
                The group.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentLevelTypeConstants.Observation">
            <summary>
                The observation.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.AttachmentLevelTypeConstants.Series">
            <summary>
                The series.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants">
            <summary>
                The object id type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Agency">
            <summary>
                The agency.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.AttachmentConstraint">
            <summary>
                The attachment constraint.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Attribute">
            <summary>
                The attribute.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.AttributeDescriptor">
            <summary>
                The attribute descriptor.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Category">
            <summary>
                The category.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.CategoryMap">
            <summary>
                The category map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.CategoryScheme">
            <summary>
                The category scheme.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.CategorySchemeMap">
            <summary>
                The category scheme map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Code">
            <summary>
                The code.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Codelist">
            <summary>
                The codelist.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.CodelistMap">
            <summary>
                The codelist map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.CodeMap">
            <summary>
                The code map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Component">
            <summary>
                The component.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ComponentMap">
            <summary>
                The component map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Concept">
            <summary>
                The concept.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ConceptMap">
            <summary>
                The concept map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ConceptScheme">
            <summary>
                The concept scheme.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ConceptSchemeMap">
            <summary>
                The concept scheme map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ContentConstraint">
            <summary>
                The content constraint.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.DataFlow">
            <summary>
                The data flow.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.DataProvider">
            <summary>
                The data provider.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.DataSet">
            <summary>
                The data set.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Dimension">
            <summary>
                The dimension.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.FullTargetIdentifier">
            <summary>
                The full target identifier.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.GroupKeyDescriptor">
            <summary>
                The group key descriptor.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.HierarchicalCodelist">
            <summary>
                The hierarchical codelist.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Hierarchy">
            <summary>
                The hierarchy.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.KeyDescriptor">
            <summary>
                The key descriptor.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.KeyFamily">
            <summary>
                The key family.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Measure">
            <summary>
                The measure.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.MeasureDescriptor">
            <summary>
                The measure descriptor.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.MetadataAttribute">
            <summary>
                The metadata attribute.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.MetadataFlow">
            <summary>
                The metadata flow.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.MetadataSet">
            <summary>
                The metadata set.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.MetadataStructure">
            <summary>
                The metadata structure.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.OrganisationRoleMap">
            <summary>
                The organisation role map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.OrganisationScheme">
            <summary>
                The organisation scheme.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.OrganisationSchemeMap">
            <summary>
                The organisation scheme map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.PartialTargetIdentifier">
            <summary>
                The partial target identifier.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.Process">
            <summary>
                The process.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ProcessStep">
            <summary>
                The process step.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ProvisionAgreement">
            <summary>
                The provision agreement.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.ReportingTaxonomy">
            <summary>
                The reporting taxonomy.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.StructureMap">
            <summary>
                The structure map.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.StructureSet">
            <summary>
                The structure set.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.TimeDimension">
            <summary>
                The dimension.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ObjectIDTypeConstants.XSDataSet">
            <summary>
                The XS data set.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants">
            <summary>
                Provides constants for <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeType" /> because the auto-generated class does not provided them
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.BigInteger">
            <summary>
                The big integer.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Boolean">
            <summary>
                The boolean.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Count">
            <summary>
                The count.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Date">
            <summary>
                The date.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.DateTime">
            <summary>
                The date time.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Day">
            <summary>
                The day.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Decimal">
            <summary>
                The decimal.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Double">
            <summary>
                The double.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Duration">
            <summary>
                The duration.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.ExclusiveValueRange">
            <summary>
                The exclusive value range.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Float">
            <summary>
                The float.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.InclusiveValueRange">
            <summary>
                The inclusive value range.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Incremental">
            <summary>
                The incremental.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Integer">
            <summary>
                The integer.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Long">
            <summary>
                The long.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Month">
            <summary>
                The month.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.MonthDay">
            <summary>
                The month day.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.ObservationalTimePeriod">
            <summary>
                The observational time period.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Short">
            <summary>
                The short.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.String">
            <summary>
                The string.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Time">
            <summary>
                The time.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Timespan">
            <summary>
                The timespan.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.URI">
            <summary>
                The uri.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.Year">
            <summary>
                The year.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.TextTypeTypeConstants.YearMonth">
            <summary>
                The year month.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ToValueTypeTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ToValueTypeType" /> constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ToValueTypeTypeConstants.Description">
            <summary>
                The description.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ToValueTypeTypeConstants.Name">
            <summary>
                The name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Structure.ToValueTypeTypeConstants.Value">
            <summary>
                The value.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessage">
            <summary>
                The query message.
            </summary>
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessage.Load(System.Xml.XmlReader)">
            <summary>
                Load error message to a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessage" /> object
            </summary>
            <param name="xmlFile">
                The input file
            </param>
            <returns>
                a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure" /> object
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessage.#ctor">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessage.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessageType)">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessage.Query">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface">
            <summary>
                The registry interface class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.Load(System.Xml.XmlReader)">
            <summary>
                Load error message to a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface" /> object
            </summary>
            <param name="xmlFile">The input file</param>
            <returns>a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface" /> object</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.#ctor">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType)">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitSubscriptionRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitSubscriptionResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.NotifyRegistryEvent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitRegistrationRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitRegistrationResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.QueryRegistrationRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.QueryRegistrationResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitStructureRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitStructureResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.QueryStructureRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.QueryStructureResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitProvisioningRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.SubmitProvisioningResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.QueryProvisioningRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterface.QueryProvisioningResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure">
            <summary>
                The structure class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.Load(System.Xml.XmlReader)">
            <summary>
                Load error message to a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure" /> object
            </summary>
            <param name="xmlFile">The input file</param>
            <returns>a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure" /> object</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.#ctor">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType)">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.OrganisationSchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.Dataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.Metadataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.CategorySchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.HierarchicalCodelists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.MetadataStructureDefinitions">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.StructureSets">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.ReportingTaxonomies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Structure.Processes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageType">
            <summary>
            <para>
            The Message is an abstract type which is used by all of the messages, to allow inheritance of common features. It also provides uniqueness constraints for the header fields.
            </para>
            <para>
            Regular expression: (Header)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageType.#ctor">
            <summary>
            <para>
            The Message is an abstract type which is used by all of the messages, to allow inheritance of common features. It also provides uniqueness constraints for the header fields.
            </para>
            <para>
            Regular expression: (Header)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageType.Header">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.#ctor">
            <summary>
            <para>
            StructureType defines the contents of a structure message.
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.OrganisationSchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.Dataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.Metadataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.CategorySchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.HierarchicalCodelists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.MetadataStructureDefinitions">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.StructureSets">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.ReportingTaxonomies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.StructureType.Processes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericDataType">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericDataType.#ctor">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityDataType">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityDataType.#ctor">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactDataType">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactDataType.#ctor">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalDataType">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalDataType.#ctor">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalDataType.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadataType">
            <summary>
            <para>
            GenericMetadataType defines the contents of a Generic Metadata message.
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadataType.#ctor">
            <summary>
            <para>
            GenericMetadataType defines the contents of a Generic Metadata message.
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadataType.MetadataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReportType">
            <summary>
            <para>
            MetadataReportType defines the contents of a metadata structure definition-specific Metadata Report message.
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReportType.#ctor">
            <summary>
            <para>
            MetadataReportType defines the contents of a metadata structure definition-specific Metadata Report message.
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReportType.MetadataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessageType">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessageType.#ctor">
            <summary>
            <para>
            QueryMessageType defines the contents of a QueryMessage.
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.QueryMessageType.Query">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, Query)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.#ctor">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitSubscriptionRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitSubscriptionResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.NotifyRegistryEvent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitRegistrationRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitRegistrationResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.QueryRegistrationRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.QueryRegistrationResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitStructureRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitStructureResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.QueryStructureRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.QueryStructureResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitProvisioningRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.SubmitProvisioningResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.QueryProvisioningRequest">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.RegistryInterfaceType.QueryProvisioningResponse">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (SubmitSubscriptionRequest | SubmitSubscriptionResponse | NotifyRegistryEvent | SubmitRegistrationRequest | SubmitRegistrationResponse | QueryRegistrationRequest | QueryRegistrationResponse | SubmitStructureRequest | SubmitStructureResponse | QueryStructureRequest | QueryStructureResponse | SubmitProvisioningRequest | SubmitProvisioningResponse | QueryProvisioningRequest | QueryProvisioningResponse))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.#ctor">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.DataSet">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.DataSet1">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.DataSet2">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.DataSet3">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.MetadataSet">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.MetadataSet1">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.#ctor">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Test">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Truncated">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Prepared">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Sender">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Receiver">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.KeyFamilyAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.DataSetAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.DataSetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.DataSetAction">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Extracted">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.ReportingBegin">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.ReportingEnd">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType.Source">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.PartyType">
            <summary>
            <para>
            PartyType defines the information which is sent about various parties such as senders and receivers of messages. The Name is the ID of the party, and Contact provides contact details.
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.PartyType.#ctor">
            <summary>
            <para>
            PartyType defines the information which is sent about various parties such as senders and receivers of messages. The Name is the ID of the party, and Contact provides contact details.
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.PartyType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.PartyType.Contact">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.PartyType.id">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.#ctor">
            <summary>
            <para>
            ContactType provides defines the contact information about a party. The Name provides a human-readable name.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.Department">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.Role">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.Telephone">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.Fax">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.X400">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.URI">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.ContactType.Email">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderTimeType">
            <summary>
            <para>
            Provides a union type of xs:date and xs:dateTime for the header fields in the message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericData">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericData.#ctor">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericDataType)">
            <summary>
            <para>
            GenericDataType defines the contents of a GenericData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityData">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityData.#ctor">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityDataType)">
            <summary>
            <para>
            UtilityDataType defines the contents of a UtilityData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.UtilityData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactData">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactData.#ctor">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactDataType)">
            <summary>
            <para>
            CompactDataType defines the contents of a CompactData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CompactData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalData">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalData.#ctor">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalDataType)">
            <summary>
            <para>
            CrossSectionalDataType defines the contents of a CrossSectionalData message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.CrossSectionalData.DataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, DataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadata">
            <summary>
            <para>
            GenericMetadataType defines the contents of a Generic Metadata message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadata.#ctor">
            <summary>
            <para>
            GenericMetadataType defines the contents of a Generic Metadata message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadata.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadataType)">
            <summary>
            <para>
            GenericMetadataType defines the contents of a Generic Metadata message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.GenericMetadata.MetadataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReport">
            <summary>
            <para>
            MetadataReportType defines the contents of a metadata structure definition-specific Metadata Report message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReport.#ctor">
            <summary>
            <para>
            MetadataReportType defines the contents of a metadata structure definition-specific Metadata Report message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReport.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReportType)">
            <summary>
            <para>
            MetadataReportType defines the contents of a metadata structure definition-specific Metadata Report message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MetadataReport.MetadataSet">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, MetadataSet)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.#ctor">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroupType)">
            <summary>
            <para>
            MessageGroupType defines the contents of a MessageGroup message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.DataSet">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.DataSet1">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.DataSet2">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.DataSet3">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.MetadataSet">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.MetadataSet1">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Header, (DataSet+ | DataSet1+ | DataSet2+ | DataSet3+ | MetadataSet+ | MetadataSet1+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.MessageGroup.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.#ctor">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.HeaderType)">
            <summary>
            <para>
            HeaderType defines the header fields used for all messages. ID identifies a data flow definition, which, when combined with time, uniquely identifies the data set. Test indicates whather the message is for test purposes or not. Truncated is used in data messages which are responding to Query messages, and is set to true only if the response has been truncated to meet size limits suggested by the defaultLimit attribute in the Query mesage.  Name provides a name for the transmission. Prepared is the date prepared. Sender is information about the sender, and Receiver is information about the receiver. Agency provides the code identifier/abbreviation for the maintenance agency of a data set. Data set id provides an identifier for a contained data set. Action code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message). KeyFamilyRef is used to reference a key family for a contained data set, using its id. (This information is required at the DataSet level for some messages, but is provided here as a convenience for those messages which do not require it.) KeyFamilyAgency specifies the agency of the key family using its coded id.  Fields which refer to a contained data set need not be used if the message contains a query or structural information - these messages provide specific fields for holding this information. The ones here are not to be used as defaults. Extracted is a time-stamp from the system rendering the data; ReportingBegin and ReportingEnd provide the time period covered by the message (in the case of data). Source provides human-readable information about the source of the data.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Test">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Truncated">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Prepared">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Sender">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Receiver">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.KeyFamilyAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.DataSetAgency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.DataSetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.DataSetAction">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Extracted">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.ReportingBegin">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.ReportingEnd">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Message.Header.Source">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Truncated?, Name*, Prepared, Sender+, Receiver*, KeyFamilyRef?, KeyFamilyAgency?, DataSetAgency?, DataSetID?, DataSetAction?, Extracted?, ReportingBegin?, ReportingEnd?, Source*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.MessageFactory">
            <summary>
                Load SDMX Messages into memory objects
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.MessageFactory.Load``2(System.Xml.XmlReader)">
            <summary>
                Load SDMX-ML v2.0 from <paramref name="reader" /> and return it in <typeparamref name="TW" />
            </summary>
            <typeparam name="TW">
                The element CLR type
            </typeparam>
            <typeparam name="T">
                The element XSD type CLR type
            </typeparam>
            <param name="reader">
                The input <see cref="T:System.Xml.XmlReader" />
            </param>
            <returns>
                The SDMX-ML v2.1 from <paramref name="reader" /> as <typeparamref name="TW" />
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusType" /> constants. The auto-generated code doesn't provide them.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusTypeConstants.Failure">
            <summary>
                The failure.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusTypeConstants.Success">
            <summary>
                The success.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusTypeConstants.Warning">
            <summary>
                The warning.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionRequestType">
            <summary>
            <para>
            The SubmitSubscriptionRequest element is submitted to the registry to subscribe to registration and change events for specific registry resources.
            </para>
            <para>
            Regular expression: (Subscription+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionRequestType.#ctor">
            <summary>
            <para>
            The SubmitSubscriptionRequest element is submitted to the registry to subscribe to registration and change events for specific registry resources.
            </para>
            <para>
            Regular expression: (Subscription+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionRequestType.Subscription">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Subscription+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionResponseType">
            <summary>
            <para>
            The SubmitSubscriptionResponse element contains information which describes the success or failure of a Subscription, providing any error messages in the event of failure. It also returns the registry URN of the subscription, and the subscriber-assigned ID.
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, SubscriptionStatus)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionResponseType.#ctor">
            <summary>
            <para>
            The SubmitSubscriptionResponse element contains information which describes the success or failure of a Subscription, providing any error messages in the event of failure. It also returns the registry URN of the subscription, and the subscriber-assigned ID.
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, SubscriptionStatus)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionResponseType.SubscriptionURN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, SubscriptionStatus)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionResponseType.SubscriberAssignedID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, SubscriptionStatus)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitSubscriptionResponseType.SubscriptionStatus">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, SubscriptionStatus)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType">
            <summary>
            <para>
            The NotifyRegistryEvent element is sent by the registry services to subscribers, to notify them of specific registration and change events. EventTime specifies the time of the triggering event. ObjectURN provides the URN of the object on which the event occurred. SubscriptionURN provides the registry/repository URN of the subscription. EventAction indicates the nature of the event - whether the action was an addition, a modification, or a deletion.
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.#ctor">
            <summary>
            <para>
            The NotifyRegistryEvent element is sent by the registry services to subscribers, to notify them of specific registration and change events. EventTime specifies the time of the triggering event. ObjectURN provides the URN of the object on which the event occurred. SubscriptionURN provides the registry/repository URN of the subscription. EventAction indicates the nature of the event - whether the action was an addition, a modification, or a deletion.
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.EventTime">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.ObjectURN">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.SubscriptionURN">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.EventAction">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.StructuralEvent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.ProvisioningEvent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.NotifyRegistryEventType.RegistrationEvent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, ObjectURN, SubscriptionURN, EventAction, (StructuralEvent | ProvisioningEvent | RegistrationEvent))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitRegistrationRequestType">
            <summary>
            <para>
            SubmitRegistrationRequest is sent to the registry by an agency or data/metadata provider to request registration for a data set or metadata set. The resource to be registered must be accessible to the registry services at an indicated URL, so that it can be processed by those services. This is the datasource, which may also have been specified for the data provider or provision agreement, in which case it need not appear here. Constraints describing the content and release calendar of the registered dataset (and, for metadata sets, the release calendar) may also be included.
            </para>
            <para>
            Regular expression: (Registration+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitRegistrationRequestType.#ctor">
            <summary>
            <para>
            SubmitRegistrationRequest is sent to the registry by an agency or data/metadata provider to request registration for a data set or metadata set. The resource to be registered must be accessible to the registry services at an indicated URL, so that it can be processed by those services. This is the datasource, which may also have been specified for the data provider or provision agreement, in which case it need not appear here. Constraints describing the content and release calendar of the registered dataset (and, for metadata sets, the release calendar) may also be included.
            </para>
            <para>
            Regular expression: (Registration+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitRegistrationRequestType.Registration">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Registration+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitRegistrationResponseType">
            <summary>
            <para>
            This document is sent to the agency or data/metadata provider in response to a registration request. It indicates the success or failure of the registration request, and contains any error messages generated by the registration service.
            </para>
            <para>
            Regular expression: (RegistrationStatus+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitRegistrationResponseType.#ctor">
            <summary>
            <para>
            This document is sent to the agency or data/metadata provider in response to a registration request. It indicates the success or failure of the registration request, and contains any error messages generated by the registration service.
            </para>
            <para>
            Regular expression: (RegistrationStatus+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitRegistrationResponseType.RegistrationStatus">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (RegistrationStatus+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType">
            <summary>
            <para>
            The QueryRegistrationRequest is used to query the contents of a registry for data sets and metadata sets. The QueryRegistrationRequest specifies whether the result set should include metadata sets, data sets, or both with the QueryType element. The constraints which characterize the search - including reference period, are contained in teh Constraints within the child object references.
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType.#ctor">
            <summary>
            <para>
            The QueryRegistrationRequest is used to query the contents of a registry for data sets and metadata sets. The QueryRegistrationRequest specifies whether the result set should include metadata sets, data sets, or both with the QueryType element. The constraints which characterize the search - including reference period, are contained in teh Constraints within the child object references.
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType.QueryType">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationRequestType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationResponseType">
            <summary>
            <para>
            The QueryRegistrationResponse is sent as a response document to anyone querying the contents of a registry. The results set contains a set of links to data and/or metadata If the result set is null, or there is some other problem with the query, then appropriate error messages and statuses will be returned.
            </para>
            <para>
            Regular expression: (QueryResult+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationResponseType.#ctor">
            <summary>
            <para>
            The QueryRegistrationResponse is sent as a response document to anyone querying the contents of a registry. The results set contains a set of links to data and/or metadata If the result set is null, or there is some other problem with the query, then appropriate error messages and statuses will be returned.
            </para>
            <para>
            Regular expression: (QueryResult+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryRegistrationResponseType.QueryResult">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (QueryResult+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureRequestType">
            <summary>
            <para>
            SubmitStructureRequest is used to submit structure definitions - key families, metadata structures - to the repository. The structure resources (key families, agencies, concepts and concept schemes, codelists,etc.) to be submitted must be available as valid SDMX-ML Structure messages external to the registry, so that they can be retrieved by the repository submission service. A SubmitStructureResponse will be sent in response, and will indicate status and contain anyt relevant error information. StructureLocation holds the URL of the valid Structure Message. Alternately, the Structure element can contain the structural descriptions. The SubmittedStructureType contains a reference to one of the structural maintainable artefacts detailed in the Structure Message, which is to be submitted to the repository. It does not need to be used when the structures being submitted are included in the request message, or when all objects in the referenced SDMX-ML Structure message are to submitted.
            </para>
            <para>
            Regular expression: ((StructureLocation | Structure), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureRequestType.#ctor">
            <summary>
            <para>
            SubmitStructureRequest is used to submit structure definitions - key families, metadata structures - to the repository. The structure resources (key families, agencies, concepts and concept schemes, codelists,etc.) to be submitted must be available as valid SDMX-ML Structure messages external to the registry, so that they can be retrieved by the repository submission service. A SubmitStructureResponse will be sent in response, and will indicate status and contain anyt relevant error information. StructureLocation holds the URL of the valid Structure Message. Alternately, the Structure element can contain the structural descriptions. The SubmittedStructureType contains a reference to one of the structural maintainable artefacts detailed in the Structure Message, which is to be submitted to the repository. It does not need to be used when the structures being submitted are included in the request message, or when all objects in the referenced SDMX-ML Structure message are to submitted.
            </para>
            <para>
            Regular expression: ((StructureLocation | Structure), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureRequestType.StructureLocation">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StructureLocation | Structure), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureRequestType.Structure">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StructureLocation | Structure), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureRequestType.SubmittedStructure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: ((StructureLocation | Structure), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureResponseType">
            <summary>
            <para>
            SubmitStructureResponse is returned by the registry when a SubmitStructure is received. It indicates the status of the submission, and carries any error messages which are generated, if relevant. For each submitted structure, a SubmissionResult will be returned.
            </para>
            <para>
            Regular expression: (SubmissionResult+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureResponseType.#ctor">
            <summary>
            <para>
            SubmitStructureResponse is returned by the registry when a SubmitStructure is received. It indicates the status of the submission, and carries any error messages which are generated, if relevant. For each submitted structure, a SubmissionResult will be returned.
            </para>
            <para>
            Regular expression: (SubmissionResult+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitStructureResponseType.SubmissionResult">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (SubmissionResult+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType">
            <summary>
            <para>
            QueryStructureRequest is used to query the registry for any maintainable object within the repository. The response is a Structure message. In the reference elements to the queryable registry objects, a valid registry URN or a complete set of other child elements may be used to identify the objects desired in the result set. Any part of an element-based (that is, non-URN) identification of an object which is not provided will be understood as a wild-card value, referring to "all" possible values. The resolveReferences attribute is set to true if all dependent objects should also be returned as part of the result set. (For example, if you query for a key family and want to also have all codelists, concepts, and agencies, returned as well, resolveReferences should be set to true.)
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.#ctor">
            <summary>
            <para>
            QueryStructureRequest is used to query the registry for any maintainable object within the repository. The response is a Structure message. In the reference elements to the queryable registry objects, a valid registry URN or a complete set of other child elements may be used to identify the objects desired in the result set. Any part of an element-based (that is, non-URN) identification of an object which is not provided will be understood as a wild-card value, referring to "all" possible values. The resolveReferences attribute is set to true if all dependent objects should also be returned as part of the result set. (For example, if you query for a key family and want to also have all codelists, concepts, and agencies, returned as well, resolveReferences should be set to true.)
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.AgencyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.CodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.CategorySchemeRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.ConceptSchemeRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.OrganisationSchemeRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.HierarchicalCodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.StructureSetRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.ProcessRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.ReportingTaxonomyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyRef | DataProviderRef | DataflowRef | MetadataflowRef | CodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | HierarchicalCodelistRef | StructureSetRef | ProcessRef | ReportingTaxonomyRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureRequestType.resolveReferences">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType">
            <summary>
            <para>
            QueryStructureResponse is sent in response to a QueryStructureRequest. It carries the status of the response, with any relevant error messages, and then also carries all information found in the rersult set.
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.#ctor">
            <summary>
            <para>
            QueryStructureResponse is sent in response to a QueryStructureRequest. It carries the status of the response, with any relevant error messages, and then also carries all information found in the rersult set.
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.StatusMessage">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.OrganisationSchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.Dataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.Metadataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.CategorySchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.HierarchicalCodelists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.MetadataStructureDefinitions">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.StructureSets">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.ReportingTaxonomies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryStructureResponseType.Processes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, ReportingTaxonomies?, Processes?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningRequestType">
            <summary>
            <para>
            This document is sent to the registry services to submit provisioning information. A provision agreement is typically sent, wghich has internal references to existing data rpvodiers and dataflows/metadataflows. These elements are also included as possible separate submissions, because it may be necessary to provide datasource and constraint information independent of the establishment of a provision agreement. 
            </para>
            <para>
            Regular expression: (ProvisionAgreement | DataProviderRef | DataflowRef | MetadatataflowRef)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningRequestType.#ctor">
            <summary>
            <para>
            This document is sent to the registry services to submit provisioning information. A provision agreement is typically sent, wghich has internal references to existing data rpvodiers and dataflows/metadataflows. These elements are also included as possible separate submissions, because it may be necessary to provide datasource and constraint information independent of the establishment of a provision agreement. 
            </para>
            <para>
            Regular expression: (ProvisionAgreement | DataProviderRef | DataflowRef | MetadatataflowRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningRequestType.ProvisionAgreement">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ProvisionAgreement | DataProviderRef | DataflowRef | MetadatataflowRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningRequestType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ProvisionAgreement | DataProviderRef | DataflowRef | MetadatataflowRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningRequestType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ProvisionAgreement | DataProviderRef | DataflowRef | MetadatataflowRef)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningRequestType.MetadatataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ProvisionAgreement | DataProviderRef | DataflowRef | MetadatataflowRef)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningResponseType">
            <summary>
            <para>
            The ProvisioningResponse element is returned by the registry services in response to a provisioning request. It contains information about the status of the submitted provisioning information, and any relevant error messages in case of failure.
            </para>
            <para>
            Regular expression: (ProvisioningStatus+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningResponseType.#ctor">
            <summary>
            <para>
            The ProvisioningResponse element is returned by the registry services in response to a provisioning request. It contains information about the status of the submitted provisioning information, and any relevant error messages in case of failure.
            </para>
            <para>
            Regular expression: (ProvisioningStatus+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmitProvisioningResponseType.ProvisioningStatus">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ProvisioningStatus+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningRequestType">
            <summary>
            <para>
            QueryProvisioningRequest is used to query the repository for provisioning metadata. The response is a QueryProvisioningResponse document, carrying either the result set of the query or relevant error messages. Note that whatever information is presented here, regarding provision agreements, data flow, metadataflow, or data providers, is taken to be the search criteria - the query is for all provision agreements which match the supplied criteria. If any of provision agreement, metadataflow, dataflow, or data provider are omitted, the search will apply to all values for those objects in the repository.
            </para>
            <para>
            Regular expression: (ProvisionAgreementRef?, DataflowRef?, MetadataflowRef?, DataProviderRef?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningRequestType.#ctor">
            <summary>
            <para>
            QueryProvisioningRequest is used to query the repository for provisioning metadata. The response is a QueryProvisioningResponse document, carrying either the result set of the query or relevant error messages. Note that whatever information is presented here, regarding provision agreements, data flow, metadataflow, or data providers, is taken to be the search criteria - the query is for all provision agreements which match the supplied criteria. If any of provision agreement, metadataflow, dataflow, or data provider are omitted, the search will apply to all values for those objects in the repository.
            </para>
            <para>
            Regular expression: (ProvisionAgreementRef?, DataflowRef?, MetadataflowRef?, DataProviderRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningRequestType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ProvisionAgreementRef?, DataflowRef?, MetadataflowRef?, DataProviderRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningRequestType.DataflowRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ProvisionAgreementRef?, DataflowRef?, MetadataflowRef?, DataProviderRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningRequestType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ProvisionAgreementRef?, DataflowRef?, MetadataflowRef?, DataProviderRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningRequestType.DataProviderRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ProvisionAgreementRef?, DataflowRef?, MetadataflowRef?, DataProviderRef?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType">
            <summary>
            <para>
            The QueryProvisioningResponse element is returned in response to queries regarding provisioning information. It carries either the provisioning information making up the result set, or relevant status messages containing errors or warnings, or both. The references to Dataflow, Metadataflow, and Data Provider are included in those cases where the  result set has these objects, but not associated with any Provisioning Agreement.
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType.#ctor">
            <summary>
            <para>
            The QueryProvisioningResponse element is returned in response to queries regarding provisioning information. It carries either the provisioning information making up the result set, or relevant status messages containing errors or warnings, or both. The references to Dataflow, Metadataflow, and Data Provider are included in those cases where the  result set has these objects, but not associated with any Provisioning Agreement.
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType.ProvisionAgreement">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType.DataflowRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType.DataProviderRef">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryProvisioningResponseType.StatusMessage">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ProvisionAgreement*, DataflowRef*, MetadataflowRef*, DataProviderRef*, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType">
            <summary>
            <para>
            Subscriptions submit a subscription for a registry or repository object.Action indicates what action is being taken by sending the request. RegistryURN is used to identify the subscription in the case of deletion or modification. NotificationMAilTo holds an e-mail address (the "mailto:" protocol); NotificationHTTP holds an http address to which notifications can be addressed as POSTs. SubscriberAssignedID allows the subscriber to specify an ID which will be returned as part of the notification for the subscribed events. Validity period sets a start and end date for the subscription, EventSelector indicates an event or events for the subscription.
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.#ctor">
            <summary>
            <para>
            Subscriptions submit a subscription for a registry or repository object.Action indicates what action is being taken by sending the request. RegistryURN is used to identify the subscription in the case of deletion or modification. NotificationMAilTo holds an e-mail address (the "mailto:" protocol); NotificationHTTP holds an http address to which notifications can be addressed as POSTs. SubscriberAssignedID allows the subscriber to specify an ID which will be returned as part of the notification for the subscribed events. Validity period sets a start and end date for the subscription, EventSelector indicates an event or events for the subscription.
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.Action">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.RegistryURN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.NotificationMailTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.NotificationHTTP">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.SubscriberAssignedID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.ValidityPeriod">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubscriptionType.EventSelector">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Action, RegistryURN?, NotificationMailTo?, NotificationHTTP?, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ValidityPeriodType">
            <summary>
            <para>
            Specifies inclusive start and end-dates for the subscription period.
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ValidityPeriodType.#ctor">
            <summary>
            <para>
            Specifies inclusive start and end-dates for the subscription period.
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ValidityPeriodType.StartDate">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ValidityPeriodType.EndDate">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.EventSelectorType">
            <summary>
            <para>
            Allows subscribers to specify registry and repository events for which they wish to receive notifications.
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents?, ProvisioningRepositoryEvents?, DataRegistrationEvents?, MetadataRegistrationEvents?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.EventSelectorType.#ctor">
            <summary>
            <para>
            Allows subscribers to specify registry and repository events for which they wish to receive notifications.
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents?, ProvisioningRepositoryEvents?, DataRegistrationEvents?, MetadataRegistrationEvents?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.EventSelectorType.StructuralRepositoryEvents">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents?, ProvisioningRepositoryEvents?, DataRegistrationEvents?, MetadataRegistrationEvents?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.EventSelectorType.ProvisioningRepositoryEvents">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents?, ProvisioningRepositoryEvents?, DataRegistrationEvents?, MetadataRegistrationEvents?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.EventSelectorType.DataRegistrationEvents">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents?, ProvisioningRepositoryEvents?, DataRegistrationEvents?, MetadataRegistrationEvents?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.EventSelectorType.MetadataRegistrationEvents">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents?, ProvisioningRepositoryEvents?, DataRegistrationEvents?, MetadataRegistrationEvents?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType">
            <summary>
            <para>
            Contains details of the subscribed structural repository events. AgencyID specifies an agency for the object or objects indicated in the other ID fields. Note that the ID fields (including AgencyID) may hold a complete ID or Repository URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.#ctor">
            <summary>
            <para>
            Contains details of the subscribed structural repository events. AgencyID specifies an agency for the object or objects indicated in the other ID fields. Note that the ID fields (including AgencyID) may hold a complete ID or Repository URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.AgencyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.AllEventsID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.KeyFamilyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.ConceptSchemeID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.CodeListID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.MetadataStructureID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.CategorySchemeID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.DataflowID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.MetadataflowID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.HierarchicalCodelistID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.StructureSetID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.ReportingTaxonomyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralRepositoryEventsType.ProcessID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AgencyID*, AllEventsID*, KeyFamilyID*, ConceptSchemeID*, CodeListID*, MetadataStructureID*, CategorySchemeID*, DataflowID*, MetadataflowID*, OrganisationSchemeID*, HierarchicalCodelistID*, StructureSetID*, ReportingTaxonomyID*, ProcessID*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType">
            <summary>
            <para>
            Contains details of the subscribed provisioning repository events. Note that the ID fields may hold a complete ID or Repository URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType.#ctor">
            <summary>
            <para>
            Contains details of the subscribed provisioning repository events. Note that the ID fields may hold a complete ID or Repository URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType.ProvisionAgreementID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType.DataProviderID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType.DataflowID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType.MetadataflowID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningRepositoryEventsType.AllEventsID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreementID*, DataProviderID*, DataflowID*, MetadataflowID*, AllEventsID*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType">
            <summary>
            <para>
            Contains details of the subscribed data registry events. Note that the ID fields may hold a complete ID or Registry URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.#ctor">
            <summary>
            <para>
            Contains details of the subscribed data registry events. Note that the ID fields may hold a complete ID or Registry URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.AllEventsID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.DataProviderID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.ProvisionAgreementID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.DataflowID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.KeyFamilyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.CategoryID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.CategorySchemeID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataRegistrationEventsType.CategorySchemeAgencyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, DataflowID*, KeyFamilyID*, CategoryID*, CategorySchemeID*, CategorySchemeAgencyID*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType">
            <summary>
            <para>
            Contains details of the subscribed metadadata registry events. Note that the ID fields may hold a complete ID or Registry URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.#ctor">
            <summary>
            <para>
            Contains details of the subscribed metadadata registry events. Note that the ID fields may hold a complete ID or Registry URN, but may also insert the "%" wildcard character, which represents 0 or more characters, in the ID string. If left empty, all objects will be matched within the other constraints (agency, object type) provided.
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.AllEventsID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.DataProviderID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.ProvisionAgreementID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.MetadataflowID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.MetadatastructureID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataRegistrationEventsType.CategoryID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AllEventsID*, DataProviderID*, ProvisionAgreementID*, MetadataflowID*, MetadatastructureID*, CategoryID*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType">
            <summary>
            <para>
            This provides the details of a structural repository event for the purposes of notification.
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.#ctor">
            <summary>
            <para>
            This provides the details of a structural repository event for the purposes of notification.
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.OrganisationSchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.Dataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.Metadataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.CategorySchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.HierarchicalCodelists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.MetadataStructureDefinitions">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.StructureSets">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.Processes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructuralEventType.ReportingTaxonomies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningEventType">
            <summary>
            <para>
            This provides the details of a provisioning event for the purposes of notification.
            </para>
            <para>
            Regular expression: (DataProviderRef?, DataflowRef?, MetadataflowRef?, ProvisionAgreement?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningEventType.#ctor">
            <summary>
            <para>
            This provides the details of a provisioning event for the purposes of notification.
            </para>
            <para>
            Regular expression: (DataProviderRef?, DataflowRef?, MetadataflowRef?, ProvisionAgreement?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningEventType.DataProviderRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataProviderRef?, DataflowRef?, MetadataflowRef?, ProvisionAgreement?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningEventType.DataflowRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataProviderRef?, DataflowRef?, MetadataflowRef?, ProvisionAgreement?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningEventType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataProviderRef?, DataflowRef?, MetadataflowRef?, ProvisionAgreement?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningEventType.ProvisionAgreement">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataProviderRef?, DataflowRef?, MetadataflowRef?, ProvisionAgreement?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationEventType">
            <summary>
            <para>
            This provides the details of a data or metadata registration event for the purposes of notification.
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationEventType.#ctor">
            <summary>
            <para>
            This provides the details of a data or metadata registration event for the purposes of notification.
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationEventType.Registration">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType">
            <summary>
            <para>
            Provision agreements contain a reference to a pre-existing data flow or metadata flow definition and a pre-existing data (or metadata) provider in the registry. They also must have the action attribute set, indicating whether this is an addition, a modification, or a deletion of a provision agreement. They may also supply boolean values which describe how the registry must behave: if indexTimeSeries is true, then the registry must index all time series when a data set is registered against this provision agreement; if indexDataSet is true, then the registry must index the range of actual (present) values for each dimension of the Dataset (as indicated in the dataset's key family); if indexReportingPeriod is true, then the registry must index the time period ranges for which data are present in the dataset(s) registered against the provision agreement. Note that the values for these attributes are not needed when a Delete action is indicated. As for all identifiable objects, provision agreements have Name and Description elements, which are repeatable to provide language-specific forms. These may be ommitted if the provision agreement already exists (as is the case for modification and deletion); descriptions are always optional. The id attribute holds the unique id of the provision agreement as derived (according to teh logical registry specifcation.) If specified, the uri attribute points to a location (typically a URL) where the provision agreement is described in a valid QueryProvisioningResponse message. The urn attribute holds the reserved registry URN assigned to the provision agreement - this must be included when the ProvisionAgreement structure is used in a response document of any type. The action  attribute must be specified when the provisionAgreement is used in a request document of any type.. Datasource is used to describe the data source associated with the provider agreement. Annotations may be provided in the Annotations element. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.#ctor">
            <summary>
            <para>
            Provision agreements contain a reference to a pre-existing data flow or metadata flow definition and a pre-existing data (or metadata) provider in the registry. They also must have the action attribute set, indicating whether this is an addition, a modification, or a deletion of a provision agreement. They may also supply boolean values which describe how the registry must behave: if indexTimeSeries is true, then the registry must index all time series when a data set is registered against this provision agreement; if indexDataSet is true, then the registry must index the range of actual (present) values for each dimension of the Dataset (as indicated in the dataset's key family); if indexReportingPeriod is true, then the registry must index the time period ranges for which data are present in the dataset(s) registered against the provision agreement. Note that the values for these attributes are not needed when a Delete action is indicated. As for all identifiable objects, provision agreements have Name and Description elements, which are repeatable to provide language-specific forms. These may be ommitted if the provision agreement already exists (as is the case for modification and deletion); descriptions are always optional. The id attribute holds the unique id of the provision agreement as derived (according to teh logical registry specifcation.) If specified, the uri attribute points to a location (typically a URL) where the provision agreement is described in a valid QueryProvisioningResponse message. The urn attribute holds the reserved registry URN assigned to the provision agreement - this must be included when the ProvisionAgreement structure is used in a response document of any type. The action  attribute must be specified when the provisionAgreement is used in a request document of any type.. Datasource is used to describe the data source associated with the provider agreement. Annotations may be provided in the Annotations element. The validFrom and validTo attributes provide inclusive dates for providing supplemental validity information about the version.
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.Description">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.uri">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.urn">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.indexTimeSeries">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.indexDataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.indexReportingPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.validFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementType.validTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DatasourceType">
            <summary>
            <para>
            Datasource specifies the properties of a data or metadata source. A SimpleDatasource requires only the URL of the data. A QueryableDatasource must be able to accept an SDMX-ML Query Message, and respond appropriately. Either or both may be specified.
            </para>
            <para>
            Regular expression: (SimpleDatasource?, QueryableDatasource?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DatasourceType.#ctor">
            <summary>
            <para>
            Datasource specifies the properties of a data or metadata source. A SimpleDatasource requires only the URL of the data. A QueryableDatasource must be able to accept an SDMX-ML Query Message, and respond appropriately. Either or both may be specified.
            </para>
            <para>
            Regular expression: (SimpleDatasource?, QueryableDatasource?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DatasourceType.SimpleDatasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SimpleDatasource?, QueryableDatasource?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DatasourceType.QueryableDatasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SimpleDatasource?, QueryableDatasource?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryableDatasourceType">
            <summary>
            <para>
            If the data provider uses a single, queryable data source for all provision agreements contained in the ProvisionRequest element, then this element should be used to describe the queryable datasource. DataUrl contains the URL of the datasource, with WSDLUrl optionally providing the location of a WSDL instance on the internet which deascribes the queryable datasource. The attributes isRESTDatasource and isWebServiceDatasource indicate, if true, that the queryable datasource is accessible via the REST protocol and/or Web Services protocols, respectively.
            </para>
            <para>
            Regular expression: (DataUrl, WSDLUrl?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryableDatasourceType.#ctor">
            <summary>
            <para>
            If the data provider uses a single, queryable data source for all provision agreements contained in the ProvisionRequest element, then this element should be used to describe the queryable datasource. DataUrl contains the URL of the datasource, with WSDLUrl optionally providing the location of a WSDL instance on the internet which deascribes the queryable datasource. The attributes isRESTDatasource and isWebServiceDatasource indicate, if true, that the queryable datasource is accessible via the REST protocol and/or Web Services protocols, respectively.
            </para>
            <para>
            Regular expression: (DataUrl, WSDLUrl?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryableDatasourceType.DataUrl">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DataUrl, WSDLUrl?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryableDatasourceType.WSDLUrl">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataUrl, WSDLUrl?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryableDatasourceType.isRESTDatasource">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryableDatasourceType.isWebServiceDatasource">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType">
            <summary>
            <para>
            For each provision agreement, dataflow reference, metadataflow reference, or data provider reference submitted in a provisioning request, a provisioning status will be returned, providing a status and any warnings or errors.
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType.#ctor">
            <summary>
            <para>
            For each provision agreement, dataflow reference, metadataflow reference, or data provider reference submitted in a provisioning request, a provisioning status will be returned, providing a status and any warnings or errors.
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisioningStatusType.StatusMessage">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: ((ProvisionAgreementRef | DataProviderRef | DataflowRef | MetadataflowRef), StatusMessage)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType">
            <summary>
            <para>
            Registration provides the information needed for data and reference metadata set registration. LastUpdated can provide a time stamp; ValidFrom and ValidTo allow for effectivity, so that data visibility from the registry can be controlled by the registrant. A Datasource must be supplied here if not already provided in the provision agreement. The data set or metadata set must be associated with a provision agreement,  a metadataflow, or a dataflow definition. If possible, the provision agreement should be specified. Only in cases where this is not possible should the dataflow or metadataflow be used.
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.#ctor">
            <summary>
            <para>
            Registration provides the information needed for data and reference metadata set registration. LastUpdated can provide a time stamp; ValidFrom and ValidTo allow for effectivity, so that data visibility from the registry can be controlled by the registrant. A Datasource must be supplied here if not already provided in the provision agreement. The data set or metadata set must be associated with a provision agreement,  a metadataflow, or a dataflow definition. If possible, the provision agreement should be specified. Only in cases where this is not possible should the dataflow or metadataflow be used.
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.LastUpdated">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.ValidFrom">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.ValidTo">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.Action">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (LastUpdated?, ValidFrom?, ValidTo?, Action, Datasource?, (DataflowRef | MetadataflowRef | ProvisionAgreementRef))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType">
            <summary>
            <para>
            Each RegistrationStatus reports the status of a submitted data set or metadata set registration, and carries any error messages. If successful, the Datasource which has been registered is returned, and a reference to the provision agreement, dataflow, metadataflow, or data provider is returned.
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.#ctor">
            <summary>
            <para>
            Each RegistrationStatus reports the status of a submitted data set or metadata set registration, and carries any error messages. If successful, the Datasource which has been registered is returned, and a reference to the provision agreement, dataflow, metadataflow, or data provider is returned.
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.StatusMessage">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.DataProviderRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.DataflowRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.MetadaflowRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.RegistrationStatusType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (StatusMessage, Datasource?, DataProviderRef?, DataflowRef?, MetadaflowRef?, ProvisionAgreementRef?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryResultType">
            <summary>
            <para>
            QueryResult contains the results of a specific registry query for a single datasource. If a successful result is a registered dataset, the DataResult element is used. If a successful result is a registered metadataset, the MetadataResult is used. If the query failed, then StatusMessage is included. The timeSeriesMatch attribute is true when the result is an exact match with the key found in the registry - that is, when the registered datasource provides a matching key. It is set to false when the datasource is registered with cube-region constraints, or in any other circumstance when it cannot be established that the sought-for keys have been exactly matched. This is always true when the resulting datasource is the source of a metadata set.
            </para>
            <para>
            Regular expression: (DataResult | MetadataResult | StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryResultType.#ctor">
            <summary>
            <para>
            QueryResult contains the results of a specific registry query for a single datasource. If a successful result is a registered dataset, the DataResult element is used. If a successful result is a registered metadataset, the MetadataResult is used. If the query failed, then StatusMessage is included. The timeSeriesMatch attribute is true when the result is an exact match with the key found in the registry - that is, when the registered datasource provides a matching key. It is set to false when the datasource is registered with cube-region constraints, or in any other circumstance when it cannot be established that the sought-for keys have been exactly matched. This is always true when the resulting datasource is the source of a metadata set.
            </para>
            <para>
            Regular expression: (DataResult | MetadataResult | StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryResultType.DataResult">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataResult | MetadataResult | StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryResultType.MetadataResult">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataResult | MetadataResult | StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryResultType.StatusMessage">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataResult | MetadataResult | StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryResultType.timeSeriesMatch">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType">
            <summary>
            <para>
            Result contains the information about either a data or metadata source, being returned as part of a QueryResult element. If the 
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType.#ctor">
            <summary>
            <para>
            Result contains the information about either a data or metadata source, being returned as part of a QueryResult element. If the 
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType.ProvisionAgreementRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ResultType.DataProviderRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Datasource?, (ProvisionAgreementRef | DataflowRef | MetadataflowRef | DataProviderRef))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType">
            <summary>
            <para>
            Holds the structure information for submission to the structural repository.
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.#ctor">
            <summary>
            <para>
            Holds the structure information for submission to the structural repository.
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.OrganisationSchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.Dataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.Metadataflows">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.CategorySchemes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.CodeLists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.HierarchicalCodelists">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.Concepts">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.MetadataStructureDefinitions">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.KeyFamilies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.StructureSets">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.Processes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureType.ReportingTaxonomies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, CodeLists?, HierarchicalCodelists?, Concepts?, MetadataStructureDefinitions?, KeyFamilies?, StructureSets?, Processes?, ReportingTaxonomies?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType">
            <summary>
            <para>
            SubmittedStructure holds a reference to a structural object to be stored in the repository. The externalDependencies attribute should be set to true if the repository is expected to use URLs in the structure Message to retrieve objects on which the stored object has dependencies. (Thus, if a key family is being submitted to the repository, and the structure message has URLKs which point to the locations of the codelists it uses, then the externalDependencies attribute should be set to true.) the action attribute specifies whether the Structure being submitted is intended to be added or deleted from the repository. The "modify" action is not applicable to final structures in the repository, and will produce an error condition, as these can be versioned but not modified.To submit a later version of a structure, the structure message should include the incremented version number. The externalDependencies and action attributes need not be specified in a response document. The isFinal attribute indicates whether the structure being submitted to the repository is final or not - this can also be specified on the structures themselves.
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.#ctor">
            <summary>
            <para>
            SubmittedStructure holds a reference to a structural object to be stored in the repository. The externalDependencies attribute should be set to true if the repository is expected to use URLs in the structure Message to retrieve objects on which the stored object has dependencies. (Thus, if a key family is being submitted to the repository, and the structure message has URLKs which point to the locations of the codelists it uses, then the externalDependencies attribute should be set to true.) the action attribute specifies whether the Structure being submitted is intended to be added or deleted from the repository. The "modify" action is not applicable to final structures in the repository, and will produce an error condition, as these can be versioned but not modified.To submit a later version of a structure, the structure message should include the incremented version number. The externalDependencies and action attributes need not be specified in a response document. The isFinal attribute indicates whether the structure being submitted to the repository is final or not - this can also be specified on the structures themselves.
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.DataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.MetadataflowRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.CodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.HierarchicalCodelistRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.CategorySchemeRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.ConceptSchemeRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.OrganisationSchemeRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.ProcessRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.StructureSetRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.ReportingTaxonomyRef">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataflowRef | MetadataflowRef | CodelistRef | HierarchicalCodelistRef | CategorySchemeRef | ConceptSchemeRef | OrganisationSchemeRef | KeyFamilyRef | MetadataStructureRef | ProcessRef | StructureSetRef | ReportingTaxonomyRef)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.externalDependencies">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmittedStructureType.isFinal">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmissionResultType">
            <summary>
            <para>
            For each Structure object submitted to the repository in a SubmitStructure, a SubmissionResult will be returned. It will identify the object submitted, report back the action requested, and convey the status and any error messages which are relevant to the submission.
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmissionResultType.#ctor">
            <summary>
            <para>
            For each Structure object submitted to the repository in a SubmitStructure, a SubmissionResult will be returned. It will identify the object submitted, report back the action requested, and convey the status and any error messages which are relevant to the submission.
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmissionResultType.SubmittedStructure">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.SubmissionResultType.StatusMessage">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType">
            <summary>
            <para>
            ProvisionAgreementRef allows for the identification of a provision agreement. At a minimum, either the URN element - holding a valid registry URN - or the set of OragnisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, DataflowAgencyID, and DataflowID must be specified. When used in a response document of any type, the URN must always be provided. Datasource can be used to specify a datasource for the provision agreement. Constraint can be used to express constraints associated with the provision agreement.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.#ctor">
            <summary>
            <para>
            ProvisionAgreementRef allows for the identification of a provision agreement. At a minimum, either the URN element - holding a valid registry URN - or the set of OragnisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, DataflowAgencyID, and DataflowID must be specified. When used in a response document of any type, the URN must always be provided. Datasource can be used to specify a datasource for the provision agreement. Constraint can be used to express constraints associated with the provision agreement.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.OrganisationSchemeAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.DataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.DataProviderVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.DataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.DataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.DataflowVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProvisionAgreementRefType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType">
            <summary>
            <para>
            The MetadataflowRef type structures a reference to a metadataflow definition. This requires that ID are provided for a pre-existing Agency and Metadataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. When used in a response document of any type, the URN must always be provided. At a minimum, either the URN element or AgencyID, MetadataflowID, and (optionally) version must be supplied. Datasource may be used to specify a datasource. Constraint can be used to provide constraints associated with the metadataflow.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.#ctor">
            <summary>
            <para>
            The MetadataflowRef type structures a reference to a metadataflow definition. This requires that ID are provided for a pre-existing Agency and Metadataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. When used in a response document of any type, the URN must always be provided. At a minimum, either the URN element or AgencyID, MetadataflowID, and (optionally) version must be supplied. Datasource may be used to specify a datasource. Constraint can be used to provide constraints associated with the metadataflow.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.MetadataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataflowRefType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType">
            <summary>
            <para>
            The DataflowRef type structures a reference to a dataflow definition. This requires that ID are provided for a pre-existing Agency and Dataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. At a minimum, either the URN element or AgencyID, DataflowID, and (optionally) version must be supplied. When used in a response document of any type, the URN must always be provided. Datasource may be used to specify a datasource. Constraints can be used to specify constraints associated with the dataflow.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.#ctor">
            <summary>
            <para>
            The DataflowRef type structures a reference to a dataflow definition. This requires that ID are provided for a pre-existing Agency and Dataflow Definition in the registry. The Version element may be used to specify the version of the indicated dataflow. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific URN as an alternate means of identification. At a minimum, either the URN element or AgencyID, DataflowID, and (optionally) version must be supplied. When used in a response document of any type, the URN must always be provided. Datasource may be used to specify a datasource. Constraints can be used to specify constraints associated with the dataflow.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.DataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataflowRefType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType">
            <summary>
            <para>
            The DataProviderRef type structures a reference to a data provider. This requires that IDs be provided for an organisation scheme, its maintenance agency, and the data prov ider as identified in the referenced organisation scheme. The Version element may be used to specify the version of the indicated data provider. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific urn as an alternate means of identification. At a minimum, either the URN element or OrgansisationSchemeID, OrganisationSchemeAgencyID, DataProviderID, and (optionally) Version must be supplied. When used in a response document of any type, the URN must always be provided. Datasource may be used to specify a datasource. Constraints can be used to specify constraints associated with the data provider.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.#ctor">
            <summary>
            <para>
            The DataProviderRef type structures a reference to a data provider. This requires that IDs be provided for an organisation scheme, its maintenance agency, and the data prov ider as identified in the referenced organisation scheme. The Version element may be used to specify the version of the indicated data provider. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific urn as an alternate means of identification. At a minimum, either the URN element or OrgansisationSchemeID, OrganisationSchemeAgencyID, DataProviderID, and (optionally) Version must be supplied. When used in a response document of any type, the URN must always be provided. Datasource may be used to specify a datasource. Constraints can be used to specify constraints associated with the data provider.
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.OrganisationSchemeAgencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.DataProviderID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.Datasource">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.DataProviderRefType.Constraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType">
            <summary>
            <para>
            The AgencyRef type structures a reference to an Agency. This requires that IDs be provided for an organisation scheme, its maintenance agency, and the agency as identified in the referenced organisation scheme. The Version element may be used to specify the version of the indicated agency. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific urn as an alternate means of identification. At a minimum, either the URN element or OrgansisationSchemeID, OrganisationSchemeAgencyID, AgencyID, and (optionally) Version must be supplied. When used in a response document of any type, the URN must always be provided. 
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType.#ctor">
            <summary>
            <para>
            The AgencyRef type structures a reference to an Agency. This requires that IDs be provided for an organisation scheme, its maintenance agency, and the agency as identified in the referenced organisation scheme. The Version element may be used to specify the version of the indicated agency. If absent, the most recent version is assumed. The URN element is used to provide the registry-specific urn as an alternate means of identification. At a minimum, either the URN element or OrgansisationSchemeID, OrganisationSchemeAgencyID, AgencyID, and (optionally) Version must be supplied. When used in a response document of any type, the URN must always be provided. 
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType.OrganisationSchemeAgencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType.AgencyID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.AgencyRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, AgencyID, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CodelistRefType">
            <summary>
            <para>
            KeyFamilyRef allows for references to specific codelists. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CodelistRefType.#ctor">
            <summary>
            <para>
            KeyFamilyRef allows for references to specific codelists. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CodelistRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CodelistRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CodelistRefType.CodelistID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CodelistRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CategorySchemeRefType">
            <summary>
            <para>
            CategorySchemeRef allows for references to specific category schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CategorySchemeRefType.#ctor">
            <summary>
            <para>
            CategorySchemeRef allows for references to specific category schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CategorySchemeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CategorySchemeRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CategorySchemeRefType.CategorySchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.CategorySchemeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, CategorySchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConceptSchemeRefType">
            <summary>
            <para>
            ConceptSchemeRef allows for references to specific concept schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConceptSchemeRefType.#ctor">
            <summary>
            <para>
            ConceptSchemeRef allows for references to specific concept schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConceptSchemeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConceptSchemeRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConceptSchemeRefType.ConceptSchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConceptSchemeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ConceptSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.OrganisationSchemeRefType">
            <summary>
            <para>
            OrganisationSchemeRef allows for references to specific organisation schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.OrganisationSchemeRefType.#ctor">
            <summary>
            <para>
            OrganisationSchemeRef allows for references to specific organisation schemes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.OrganisationSchemeRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.OrganisationSchemeRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.OrganisationSchemeRefType.OrganisationSchemeID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.OrganisationSchemeRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, OrganisationSchemeID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.KeyFamilyRefType">
            <summary>
            <para>
            KeyFamilyRef allows for references to specific key families (data structure definitions). At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, KeyFamilyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.KeyFamilyRefType.#ctor">
            <summary>
            <para>
            KeyFamilyRef allows for references to specific key families (data structure definitions). At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, KeyFamilyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.KeyFamilyRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, KeyFamilyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.KeyFamilyRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, KeyFamilyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.KeyFamilyRefType.KeyFamilyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, KeyFamilyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.KeyFamilyRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, KeyFamilyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataStructureRefType">
            <summary>
            <para>
            MetadataStructureRef allows for references to specific metadata structure definitions. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataStructureID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataStructureRefType.#ctor">
            <summary>
            <para>
            MetadataStructureRef allows for references to specific metadata structure definitions. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataStructureID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataStructureRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataStructureID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataStructureRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataStructureID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataStructureRefType.MetadataStructureID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataStructureID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.MetadataStructureRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, MetadataStructureID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.HierarchicalCodelistRefType">
            <summary>
            <para>
            HierarchicalCodelistRef allows for references to specific hierarchical codelists. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.HierarchicalCodelistRefType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistRef allows for references to specific hierarchical codelists. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.HierarchicalCodelistRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.HierarchicalCodelistRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.HierarchicalCodelistRefType.HierarchicalCodelistID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.HierarchicalCodelistRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, HierarchicalCodelistID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureSetRefType">
            <summary>
            <para>
            StructureSetRef allows for references to specific structure sets. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, StructureSetID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureSetRefType.#ctor">
            <summary>
            <para>
            StructureSetRef allows for references to specific structure sets. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, StructureSetID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureSetRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, StructureSetID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureSetRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, StructureSetID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureSetRefType.StructureSetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, StructureSetID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StructureSetRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, StructureSetID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProcessRefType">
            <summary>
            <para>
            ProcessRef allows for references to specific processes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ProcessID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProcessRefType.#ctor">
            <summary>
            <para>
            ProcessRef allows for references to specific processes. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ProcessID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProcessRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ProcessID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProcessRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ProcessID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProcessRefType.ProcessID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ProcessID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ProcessRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ProcessID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ReportingTaxonomyRefType">
            <summary>
            <para>
            ReportingTaxonomyRef allows for references to specific reporting taxonomies. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ReportingTaxonomyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ReportingTaxonomyRefType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyRef allows for references to specific reporting taxonomies. At a minimum, either the URN - which contains a valid Registry/Repository URN - or the rest of the child elements must be supplied. When used in a response document of any type, the URN must always be provided.
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ReportingTaxonomyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ReportingTaxonomyRefType.URN">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ReportingTaxonomyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ReportingTaxonomyRefType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ReportingTaxonomyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ReportingTaxonomyRefType.ReportingTaxonomyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ReportingTaxonomyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ReportingTaxonomyRefType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, ReportingTaxonomyID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusMessageType">
            <summary>
            <para>
            This carries the text of error messages and/or warnings in response to queries or requests. The Status attribute carries the staus of the query or request.
            </para>
            <para>
            Regular expression: (MessageText*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusMessageType.#ctor">
            <summary>
            <para>
            This carries the text of error messages and/or warnings in response to queries or requests. The Status attribute carries the staus of the query or request.
            </para>
            <para>
            Regular expression: (MessageText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusMessageType.MessageText">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MessageText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusMessageType.status">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.ConstraintTypeType">
            <summary>
            <para>
            ConstraintType provides an enumeration of values of the types of constraints.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.StatusType">
            <summary>
            <para>
            StatusType provides an enumeration of values that detail the status of queries or requests.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.Registry.QueryTypeType">
            <summary>
            <para>
            QueryType provides an enumeration of values which specify the objects in the result-set for a registry query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.GroupType">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.GroupType.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.SeriesType">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.ObsType">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.ObsType.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSetType)">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.DataSet.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Group">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Group.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.GroupType)">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Series">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Series.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Series.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.SeriesType)">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Obs">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Obs.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.Obs.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.compact.ObsType)">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.GroupType">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. 
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.GroupType.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. 
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.SectionType">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.SectionType.#ctor">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.ObsType">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.ObsType.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSetType)">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.DataSet.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Group">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. 
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Group.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. 
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.GroupType)">
            <summary>
            <para>
            GroupType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. 
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Section">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Section.#ctor">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Section.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.SectionType)">
            <summary>
            <para>
            SectionType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Obs">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Obs.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.Obs.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.cross.ObsType)">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element. It is capable of expressing the value and attributes of any single available cross-sectional measure (when extended).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.Group">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.Series">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType">
            <summary>
            <para>
            The key values at the group level may be stated explicitly, and all which are not wildcarded listed in GroupKey - they must also all be given a value at the series level. It is not necessary to specify the group key, however, as this may be inferred from the values repeated at the series level. If only documentation (group-level attributes) are being transmitted, however, the GroupKey cannot be omitted. The type attribute contains the name of the declared group in the key family. If any group-level attributes are specified in a delete message, then any valid value supplied for the attribute indicates that the current attribute value should be deleted for the specified attribute.
            
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType.#ctor">
            <summary>
            <para>
            The key values at the group level may be stated explicitly, and all which are not wildcarded listed in GroupKey - they must also all be given a value at the series level. It is not necessary to specify the group key, however, as this may be inferred from the values repeated at the series level. If only documentation (group-level attributes) are being transmitted, however, the GroupKey cannot be omitted. The type attribute contains the name of the declared group in the key family. If any group-level attributes are specified in a delete message, then any valid value supplied for the attribute indicates that the current attribute value should be deleted for the specified attribute.
            
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType.GroupKey">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType.Series">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (GroupKey?, Attributes?, Series*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.GroupType.type">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesType">
            <summary>
            <para>
            SeriesType specifies the structure of a series. This includes all of the key values, values for all the attributes, and the set of observations making up the series content. Messages may transmit only attributes, only data, or both. Regardless, the series key is always required. Key values appear at the Series level in an ordered sequence which corresponds to the key sequence in the key family. A series in a delete message need not supply more than the key, indicating that the entire series identified by that key should be deleted. If series attributes are sent in a delete message, any valid value specified for an attribute indicates that the attribute should be deleted.
            
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType specifies the structure of a series. This includes all of the key values, values for all the attributes, and the set of observations making up the series content. Messages may transmit only attributes, only data, or both. Regardless, the series key is always required. Key values appear at the Series level in an ordered sequence which corresponds to the key sequence in the key family. A series in a delete message need not supply more than the key, indicating that the entire series identified by that key should be deleted. If series attributes are sent in a delete message, any valid value specified for an attribute indicates that the attribute should be deleted.
            
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesType.SeriesKey">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesType.Obs">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SeriesKey, Attributes?, Obs*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesKeyType">
            <summary>
            <para>
            SeriesKeyType defines the contents of a series key. Each non-time dimension must have a value supplied for it, in the order in which the dimensions are specified in the key family. 
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesKeyType.#ctor">
            <summary>
            <para>
            SeriesKeyType defines the contents of a series key. Each non-time dimension must have a value supplied for it, in the order in which the dimensions are specified in the key family. 
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.SeriesKeyType.Value">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsType">
            <summary>
            <para>
            ObsType defines the structure of an observation. This includes a time and observation value, as well as values for each of the attributes assigned at the observation level by the key family. In a delete message, only the time need be given, indicating that the observation identified by the key and time should be deleted. For an update message, both time and observation value are required. If any attributes appear in a delete message, any valid value supplied for an attribute indicates that the current value should be deleted.		
            
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsType.#ctor">
            <summary>
            <para>
            ObsType defines the structure of an observation. This includes a time and observation value, as well as values for each of the attributes assigned at the observation level by the key family. In a delete message, only the time need be given, indicating that the observation identified by the key and time should be deleted. For an update message, both time and observation value are required. If any attributes appear in a delete message, any valid value supplied for an attribute indicates that the current value should be deleted.		
            
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsType.Time">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsType.ObsValue">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsType.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Time, ObsValue?, Attributes?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValuesType">
            <summary>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValuesType.#ctor">
            <summary>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValuesType.Value">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValueType">
            <summary>
            <para>
            ValueType is used to assign a single value to a concept, as for attribute values and key values. It has no element content. The startTime attribute is only used if the textFormat of the attribute is of the Timespan type in the key family (in which case the value field takes a duration).	
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValueType.#ctor">
            <summary>
            <para>
            ValueType is used to assign a single value to a concept, as for attribute values and key values. It has no element content. The startTime attribute is only used if the textFormat of the attribute is of the Timespan type in the key family (in which case the value field takes a duration).	
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValueType.concept">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValueType.value">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ValueType.startTime">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsValueType">
            <summary>
            <para>
            ObsValueType describes the information set for an observation value. This is associated with the primary measure concept declared in the key family. The startTime attribute is only used if the textFormat of the observation is of the Timespan type in the key family (in which case the value field takes a duration).	
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsValueType.#ctor">
            <summary>
            <para>
            ObsValueType describes the information set for an observation value. This is associated with the primary measure concept declared in the key family. The startTime attribute is only used if the textFormat of the observation is of the Timespan type in the key family (in which case the value field takes a duration).	
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsValueType.value">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.ObsValueType.startTime">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.#ctor">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSetType)">
            <summary>
            <para>
            DataSetType defines the structure of a data set. This consists of a key family reference which contains the ID of the key family, and the attribute values attached at the data set level. A DataSet may be used to transmit documentation (that is, only attribute values), data, or a combination of both. If providing only documentation, you need not send the complete set of attributes. If transmitting only data, the Group may be omitted if desired. Uniqueness constraints are defined for the attributes of the data set. If dataset-level attributes are sent in a delete message, then any valid attribute value will indicate that the current attribute value should be deleted. The keyFamilyURI attribute is provided to allow a URI (typically a URL) to be provided, pointing to an SDMX-ML Structure message describing the key family. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.KeyFamilyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.Attributes">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.Group">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.Series">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (KeyFamilyRef, Attributes?, (Group* | Series*)*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.generic.DataSet.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType">
            <summary>
            <para>
            The Metadata Set is a set of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. Child elements include identification of the relevant metadata structure definition using the MetadataStructureRef and MetadataStructureAgencyRef elements. The ReportRef element includes the ID of the report structure as described in the metadata structure definition. AttributeValueSet is a repeatable child element which allows target identifier keys and their associated metadata attribute values to be reported (this functions like a series element does for data sets). An optional name and annotations may also be supplied. The metadataStructureURI allows for a URI to be provided, pointing to the SDMX-ML Structure Message representation of the referenced metadata structure definition. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.#ctor">
            <summary>
            <para>
            The Metadata Set is a set of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. Child elements include identification of the relevant metadata structure definition using the MetadataStructureRef and MetadataStructureAgencyRef elements. The ReportRef element includes the ID of the report structure as described in the metadata structure definition. AttributeValueSet is a repeatable child element which allows target identifier keys and their associated metadata attribute values to be reported (this functions like a series element does for data sets). An optional name and annotations may also be supplied. The metadataStructureURI allows for a URI to be provided, pointing to the SDMX-ML Structure Message representation of the referenced metadata structure definition. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.MetadataStructureAgencyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.ReportRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.AttributeValueSet">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.metadataStructureURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.AttributeValueSetType">
            <summary>
            <para>
            The attribute value set provides the values for a set of metadata attributes reported against a target identifier key. The TargetRef element contains the value of the metadata attribute's target attribute in the metadata structure definition (that is, the ID of the full or partial target identifier which is the target of the metadata report). TargetValues is an element substructure which provides the specific full or partial target identifier component values, and the ReportedAttribute sub-element allows for values to be reported against the metadata attributes as described in the referenced metadata structure definition for the referenced full or partial targets.
            </para>
            <para>
            Regular expression: (TargetRef, TargetValues, ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.AttributeValueSetType.#ctor">
            <summary>
            <para>
            The attribute value set provides the values for a set of metadata attributes reported against a target identifier key. The TargetRef element contains the value of the metadata attribute's target attribute in the metadata structure definition (that is, the ID of the full or partial target identifier which is the target of the metadata report). TargetValues is an element substructure which provides the specific full or partial target identifier component values, and the ReportedAttribute sub-element allows for values to be reported against the metadata attributes as described in the referenced metadata structure definition for the referenced full or partial targets.
            </para>
            <para>
            Regular expression: (TargetRef, TargetValues, ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.AttributeValueSetType.TargetRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (TargetRef, TargetValues, ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.AttributeValueSetType.TargetValues">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (TargetRef, TargetValues, ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.AttributeValueSetType.ReportedAttribute">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (TargetRef, TargetValues, ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.TargetValuesType">
            <summary>
            <para>
            Target values contains the specific values for each concept in the full or partial target identifier as described in a metadata structure definition. These values typically come from codelists or other item schemes. Each such value should be presented in the order given in the metadata structure definition, and must use a valid representation for that concept. Concepts are those referenced by the identifier components of the target identifiers.
            </para>
            <para>
            Regular expression: (ComponentValue+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.TargetValuesType.#ctor">
            <summary>
            <para>
            Target values contains the specific values for each concept in the full or partial target identifier as described in a metadata structure definition. These values typically come from codelists or other item schemes. Each such value should be presented in the order given in the metadata structure definition, and must use a valid representation for that concept. Concepts are those referenced by the identifier components of the target identifiers.
            </para>
            <para>
            Regular expression: (ComponentValue+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.TargetValuesType.ComponentValue">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ComponentValue+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ComponentValueType">
            <summary>
            <para>
            Component values have an object attribute with an object type value as provided in the metadata structure definition, a component attribute which takes the ID of the identifier component in the metadata structure definition's full target identifier, and a value, which must be a valid value for that concept's representation as described in the metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ComponentValueType.#ctor">
            <summary>
            <para>
            Component values have an object attribute with an object type value as provided in the metadata structure definition, a component attribute which takes the ID of the identifier component in the metadata structure definition's full target identifier, and a value, which must be a valid value for that concept's representation as described in the metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ComponentValueType.object">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ComponentValueType.component">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType">
            <summary>
            <para>
            Reported attributes hold the values which are to be reported against the target specified in the metadata structure definition, and according to the metadata attributes specified for the target referenced in the TargetRef element. Each reported attribute may have Value sub-elements (one per language) if it takes a text or numeric value. The StartTime element is only used if the attribute being represented is of the Timespan type (as described in the corresponding TextFormat element in the metadata structure definition). In this case, the Value takes a duration. Only one such value is allowed in the ReportedAttribute in this case. The types of these values must conform to the limitations described in the metadata structure definition. Also - if permitted by the metadata structure definition - there may be one or more child ReportedAttribute elements. These must be arranged in the nesting hierarchy given in the metadat structure definition. The conceptID attribute provides the id of the concept given in the metadata structure definition to which the reported attribute corresponds.
            </para>
            <para>
            Regular expression: (Value*, StartTime?, ReportedAttribute*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType.#ctor">
            <summary>
            <para>
            Reported attributes hold the values which are to be reported against the target specified in the metadata structure definition, and according to the metadata attributes specified for the target referenced in the TargetRef element. Each reported attribute may have Value sub-elements (one per language) if it takes a text or numeric value. The StartTime element is only used if the attribute being represented is of the Timespan type (as described in the corresponding TextFormat element in the metadata structure definition). In this case, the Value takes a duration. Only one such value is allowed in the ReportedAttribute in this case. The types of these values must conform to the limitations described in the metadata structure definition. Also - if permitted by the metadata structure definition - there may be one or more child ReportedAttribute elements. These must be arranged in the nesting hierarchy given in the metadat structure definition. The conceptID attribute provides the id of the concept given in the metadata structure definition to which the reported attribute corresponds.
            </para>
            <para>
            Regular expression: (Value*, StartTime?, ReportedAttribute*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType.Value">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Value*, StartTime?, ReportedAttribute*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType.StartTime">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Value*, StartTime?, ReportedAttribute*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType.ReportedAttribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Value*, StartTime?, ReportedAttribute*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Value*, StartTime?, ReportedAttribute*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ReportedAttributeType.conceptID">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.ObjectIDType">
            <summary>
            <para>
            The Object ID is used to reference a particular Object within the SDMX Information Model's formalization of statistical exchanges.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet">
            <summary>
            <para>
            The Metadata Set is a set of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. Child elements include identification of the relevant metadata structure definition using the MetadataStructureRef and MetadataStructureAgencyRef elements. The ReportRef element includes the ID of the report structure as described in the metadata structure definition. AttributeValueSet is a repeatable child element which allows target identifier keys and their associated metadata attribute values to be reported (this functions like a series element does for data sets). An optional name and annotations may also be supplied. The metadataStructureURI allows for a URI to be provided, pointing to the SDMX-ML Structure Message representation of the referenced metadata structure definition. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.#ctor">
            <summary>
            <para>
            The Metadata Set is a set of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. Child elements include identification of the relevant metadata structure definition using the MetadataStructureRef and MetadataStructureAgencyRef elements. The ReportRef element includes the ID of the report structure as described in the metadata structure definition. AttributeValueSet is a repeatable child element which allows target identifier keys and their associated metadata attribute values to be reported (this functions like a series element does for data sets). An optional name and annotations may also be supplied. The metadataStructureURI allows for a URI to be provided, pointing to the SDMX-ML Structure Message representation of the referenced metadata structure definition. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSetType)">
            <summary>
            <para>
            The Metadata Set is a set of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. Child elements include identification of the relevant metadata structure definition using the MetadataStructureRef and MetadataStructureAgencyRef elements. The ReportRef element includes the ID of the report structure as described in the metadata structure definition. AttributeValueSet is a repeatable child element which allows target identifier keys and their associated metadata attribute values to be reported (this functions like a series element does for data sets). An optional name and annotations may also be supplied. The metadataStructureURI allows for a URI to be provided, pointing to the SDMX-ML Structure Message representation of the referenced metadata structure definition. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.MetadataStructureAgencyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.ReportRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.AttributeValueSet">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, MetadataStructureRef, MetadataStructureAgencyRef, ReportRef, AttributeValueSet+, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.metadataStructureURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.genericmetadata.MetadataSet.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.GroupType">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.GroupType.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.SeriesType">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.KeyType">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.KeyType.#ctor">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.ObsType">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.ObsType.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.#ctor">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSetType)">
            <summary>
            <para>
            DataSetType acts as a structural base, which is extended through the addition of attributes and elements to reflect the particular needs of a specific key family using the xs:extends element. Attributes are provided for describing the contents of a data or metadata set, which are particularly important for interactions with the SDMX Registry: datasetID, dataProviderSchemeAgencyID, dataProviderSchemeID, dataflowAgencyID, and dataflowID all take the IDs specified by the attribute names. The action attribute indicates whether the file is appending, replacing, or deleting. Attributes reportingBeginDate, reportingEndDate, validFromDate, and validToDate are inclusive. publicationYear holds the ISO 8601 four-digit year, and publicationPeriod specifies the period of publication of the data in terms of whatever provisioning agreements might be in force (ie, "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.keyFamilyURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.DataSet.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Group">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Group.#ctor">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.GroupType)">
            <summary>
            <para>
            GroupType acts as a structural base, which is renamed and extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Series">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Series.#ctor">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Series.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.SeriesType)">
            <summary>
            <para>
            SeriesType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Key">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Key.#ctor">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Key.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.KeyType)">
            <summary>
            <para>
            KeyType describes the abstract type which defines the Key element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Obs">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Obs.#ctor">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.Obs.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.utility.ObsType)">
            <summary>
            <para>
            ObsType acts as a structural base, which is extended through the addition of attributes to reflect the particular needs of a specific key family using the xs:extends element.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.#ctor">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.DataWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.MetadataWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.KeyFamilyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.MetadataStructureWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.CodelistWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.ConceptWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.AgencyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.DataProviderWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.HierarchicalCodelistWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.ReportingTaxonomyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.DataflowWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.MetadataflowWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.StructureSetWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.ProcessWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.OrganisationSchemeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.ConceptSchemeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.CategorySchemeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType.defaultLimit">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType">
            <summary>
            <para>
            The DataWhere element representes a query for data. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.#ctor">
            <summary>
            <para>
            The DataWhere element representes a query for data. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.DataSet">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Time">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Category">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.DataProvider">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Dataflow">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Version">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataSet | KeyFamily | Dimension | Attribute | Codelist | Time | Category | Concept | DataProvider | Dataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType">
            <summary>
            <para>
            The MetadataWhere element representes a query for metadata. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.#ctor">
            <summary>
            <para>
            The MetadataWhere element representes a query for metadata. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.MetadataSet">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.MetadataStructure">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.StructureComponent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Time">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Category">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.DataProvider">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Metadataflow">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Version">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (MetadataSet | MetadataStructure | StructureComponent | Attribute | Codelist | Time | Category | Concept | DataProvider | Metadataflow | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType">
            <summary>
            <para>
             For the And element, each of its immediate child elements represent clauses all of which represent conditions which must be satisfied. If children are A, B, and C, then any legitimate response will meet conditions A, B, and C.  Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.#ctor">
            <summary>
            <para>
             For the And element, each of its immediate child elements represent clauses all of which represent conditions which must be satisfied. If children are A, B, and C, then any legitimate response will meet conditions A, B, and C.  Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.DataSet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.MetadataSet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.MetadataStructure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Dimension">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.StructureComponent">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Attribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Time">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.AgencyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.DataProvider">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Dataflow">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Metadataflow">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Version">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AndType.And">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType">
            <summary>
            <para>
            The Or element's immediate children represent clauses in the query any one of which is sufficient to satisfy the query. If these children are A,  B, and C, then any result which meets condition A, or condition B, or condition C is a match for that query. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.#ctor">
            <summary>
            <para>
            The Or element's immediate children represent clauses in the query any one of which is sufficient to satisfy the query. If these children are A,  B, and C, then any result which meets condition A, or condition B, or condition C is a match for that query. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.DataSet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.MetadataSet">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.MetadataStructure">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Dimension">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.StructureComponent">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Attribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Time">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.AgencyID">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.DataProvider">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Dataflow">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Metadataflow">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Version">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrType.And">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSet*, MetadataSet*, KeyFamily*, MetadataStructure*, Dimension*, StructureComponent*, Attribute*, Codelist*, Time*, Category*, Concept*, AgencyID*, DataProvider*, Dataflow*, Metadataflow*, Version*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DimensionType">
            <summary>
            <para>
            Dimension elements contain the  (single) value being searched on within the key of the data set. The id attribute holds the ID of the dimension. If the content is empty, then the query is for any dimension with the given name. If the name attribute is not supplied, then the query is for the given key value within any dimension.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DimensionType.#ctor">
            <summary>
            <para>
            Dimension elements contain the  (single) value being searched on within the key of the data set. The id attribute holds the ID of the dimension. If the content is empty, then the query is for any dimension with the given name. If the name attribute is not supplied, then the query is for the given key value within any dimension.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DimensionType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureComponentType">
            <summary>
            <para>
            StructureComponent elements contain the  (single) value being searched on within the key of data set, but this value can be either a code value or the alias assigned to a set of equivalent code values. The id attribute holds the ID of the dimension, attribute, or alias assigned to a component in a structure set. If the content is empty, then the query is for any component with the given name or alias. If the name attribute is not supplied, then the query is for the given code value or alias within any component or component alias.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureComponentType.#ctor">
            <summary>
            <para>
            StructureComponent elements contain the  (single) value being searched on within the key of data set, but this value can be either a code value or the alias assigned to a set of equivalent code values. The id attribute holds the ID of the dimension, attribute, or alias assigned to a component in a structure set. If the content is empty, then the query is for any component with the given name or alias. If the name attribute is not supplied, then the query is for the given code value or alias within any component or component alias.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureComponentType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AttributeType">
            <summary>
            <para>
            Attribute elements contain the (single) value of an attribute being queried for. The id attribute contains the id of the attribute. The attachmentLevel attribute specifies the attachment level of the attribute. If the content of Attribute is empty, then the search is for the specified attribute (and attachment level). If the name attribute is not specified, then the search is on any attribute. If the attachmentLevel attribute is not specified, then the query is for an attribute at any attachment level, as the value defaults to "Any".
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AttributeType.#ctor">
            <summary>
            <para>
            Attribute elements contain the (single) value of an attribute being queried for. The id attribute contains the id of the attribute. The attachmentLevel attribute specifies the attachment level of the attribute. If the content of Attribute is empty, then the search is for the specified attribute (and attachment level). If the name attribute is not specified, then the search is on any attribute. If the attachmentLevel attribute is not specified, then the query is for an attribute at any attachment level, as the value defaults to "Any".
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AttributeType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AttributeType.attachmentLevel">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AttachmentLevelType">
            <summary>
            <para>
            This type supplies an enumeration of attachment levels corresponding to those in the SDMX Information Model, plus a value of "Any" where the search is wildcarded.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistType">
            <summary>
            <para>
            The Codelist element allows queries to specify a (single) value found within a codelist as the element content, and the agency-qualified name of the codelist being queried for in the name attribute. If no content is supplied, then the query is for the named codelist. If the id attribute is left empty, then the value is searched for in any codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistType.#ctor">
            <summary>
            <para>
            The Codelist element allows queries to specify a (single) value found within a codelist as the element content, and the agency-qualified name of the codelist being queried for in the name attribute. If no content is supplied, then the query is for the named codelist. If the id attribute is left empty, then the value is searched for in any codelist.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistType.id">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategoryType">
            <summary>
            <para>
            The Category element allows for a search to be made on the values within a specific category, which is specified (in agency-qualified form) with the name attribute. If there is no element content, then the search is for the named Category; if the name is not supplied, then the category value supplied as content should be sought-for in all available categories.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategoryType.#ctor">
            <summary>
            <para>
            The Category element allows for a search to be made on the values within a specific category, which is specified (in agency-qualified form) with the name attribute. If there is no element content, then the search is for the named Category; if the name is not supplied, then the category value supplied as content should be sought-for in all available categories.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategoryType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategoryType.agencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategoryType.CategoryScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategoryType.version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType">
            <summary>
            <para>
            The KeyFamilyWhere element representes a query for a key family or key families. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.#ctor">
            <summary>
            <para>
            The KeyFamilyWhere element representes a query for a key family or key families. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Category">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Version">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.KeyFamilyWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | Dimension | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType">
            <summary>
            <para>
            The MetadataStructureWhere element representes a query for a metadata structure or structures. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.#ctor">
            <summary>
            <para>
            The MetadataStructureWhere element representes a query for a metadata structure or structures. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.MetadataStructure">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.StructureSet">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.StructureComponent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Category">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Version">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataStructureWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (KeyFamily | MetadataStructure | StructureSet | Dimension | StructureComponent | Attribute | Codelist | Category | Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType">
            <summary>
            <para>
            The CodelistWhere element representes a query for a codelist or codelists. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType.#ctor">
            <summary>
            <para>
            The CodelistWhere element representes a query for a codelist or codelists. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType.Codelist">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType.Version">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CodelistWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Codelist | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType">
            <summary>
            <para>
            The ConceptWhere element representes a query for a concept or concepts. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType.#ctor">
            <summary>
            <para>
            The ConceptWhere element representes a query for a concept or concepts. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType.Concept">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType.Version">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType.Or">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptWhereType.And">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Concept | AgencyID | Version | Or | And)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType">
            <summary>
            <para>
            The AgencyWhere element representes a query for details for an Agency. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.#ctor">
            <summary>
            <para>
            The AgencyWhere element representes a query for details for an Agency. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.MetadataStructure">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.StructureSet">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.AgencyWhereType.And">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType">
            <summary>
            <para>
            The DataProviderWhere element representes a query for details for a provider of data or metadata sets. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.#ctor">
            <summary>
            <para>
            The DataProviderWhere element representes a query for details for a provider of data or metadata sets. It contains all of the clauses in that query, represented by its child elements. Values are the IDs of the referenced object.
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.DataSet">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.MetadataSet">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.KeyFamily">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.MetadataStructure">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.StructureSet">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.Codelist">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.Category">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.Concept">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.Or">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataProviderWhereType.And">
            <summary>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Regular expression: (DataSet* | MetadataSet* | KeyFamily* | MetadataStructure* | StructureSet* | Codelist* | Category* | Concept* | AgencyID* | Or* | And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.TimeType">
            <summary>
            <para>
            TimeType contains the time point or period for which results should be supplied. When StartTime and EndTime are used, these must be understood as inclusive.
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.TimeType.#ctor">
            <summary>
            <para>
            TimeType contains the time point or period for which results should be supplied. When StartTime and EndTime are used, these must be understood as inclusive.
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.TimeType.StartTime">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.TimeType.EndTime">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.TimeType.Time">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: ((StartTime, EndTime?)|Time)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureSetWhereType">
            <summary>
            <para>
            The StructureSetWhere element represents a query for a structure set or structure sets. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureSetWhereType.#ctor">
            <summary>
            <para>
            The StructureSetWhere element represents a query for a structure set or structure sets. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureSetWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureSetWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.StructureSetWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.HierarchicalCodelistWhereType">
            <summary>
            <para>
            The HierarchicalCodelistWhere element represents a query for a hierarchical codelist or codelists. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.HierarchicalCodelistWhereType.#ctor">
            <summary>
            <para>
            The HierarchicalCodelistWhere element represents a query for a hierarchical codelist or codelists. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.HierarchicalCodelistWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.HierarchicalCodelistWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.HierarchicalCodelistWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ReportingTaxonomyWhereType">
            <summary>
            <para>
            The ReportingTaxonomyWhere element represents a query for a reporting taxonomy or taxonomies. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ReportingTaxonomyWhereType.#ctor">
            <summary>
            <para>
            The ReportingTaxonomyWhere element represents a query for a reporting taxonomy or taxonomies. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ReportingTaxonomyWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ReportingTaxonomyWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ReportingTaxonomyWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataflowWhereType">
            <summary>
            <para>
            The DataflowWhereType element represents a query for a dataflow or dataflows. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataflowWhereType.#ctor">
            <summary>
            <para>
            The DataflowWhereType element represents a query for a dataflow or dataflows. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataflowWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataflowWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.DataflowWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataflowWhereType">
            <summary>
            <para>
            The MetadataflowWhereType element represents a query for a metadataflow or metadataflows. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataflowWhereType.#ctor">
            <summary>
            <para>
            The MetadataflowWhereType element represents a query for a metadataflow or metadataflows. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataflowWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataflowWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.MetadataflowWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ProcessWhereType">
            <summary>
            <para>
            The ProcessWhere element represents a query for a process or processes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ProcessWhereType.#ctor">
            <summary>
            <para>
            The ProcessWhere element represents a query for a process or processes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ProcessWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ProcessWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ProcessWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrganisationSchemeWhereType">
            <summary>
            <para>
            The OrganisationSchemeWhere element represents a query for an organisation scheme or schemes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrganisationSchemeWhereType.#ctor">
            <summary>
            <para>
            The OrganisationSchemeWhere element represents a query for an organisation scheme or schemes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrganisationSchemeWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrganisationSchemeWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.OrganisationSchemeWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptSchemeWhereType">
            <summary>
            <para>
            The ConceptSchemeWhere element represents a query for a concept scheme or schemes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptSchemeWhereType.#ctor">
            <summary>
            <para>
            The ConceptSchemeWhere element represents a query for a concept scheme or schemes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptSchemeWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptSchemeWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.ConceptSchemeWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategorySchemeWhereType">
            <summary>
            <para>
            The CategorySchemeWhere element represents a query for a category scheme or schemes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategorySchemeWhereType.#ctor">
            <summary>
            <para>
            The CategorySchemeWhere element represents a query for a category scheme or schemes. Like other maintainable objects, it must be queried for using information about its agency, ID, and/or version. Any field not supplied will be taken as matching all of that type.
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategorySchemeWhereType.AgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategorySchemeWhereType.ID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.CategorySchemeWhereType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AgencyID?, ID?, Version?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.#ctor">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.QueryType)">
            <summary>
            <para>
            The Query element is a top-level element for this namespace, which is referenced by the SDMX message envelope, or could be put inside another envelope, such as SOAP. It contains a query. The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.DataWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.MetadataWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.KeyFamilyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.MetadataStructureWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.CodelistWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.ConceptWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.AgencyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.DataProviderWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.HierarchicalCodelistWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.ReportingTaxonomyWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.DataflowWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.MetadataflowWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.StructureSetWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.ProcessWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.OrganisationSchemeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.ConceptSchemeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.CategorySchemeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataWhere*, MetadataWhere*, KeyFamilyWhere*, MetadataStructureWhere*, CodelistWhere*, ConceptWhere*, AgencyWhere*, DataProviderWhere*, HierarchicalCodelistWhere*, ReportingTaxonomyWhere*, DataflowWhere*, MetadataflowWhere*, StructureSetWhere*, ProcessWhere*, OrganisationSchemeWhere*, ConceptSchemeWhere*, CategorySchemeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.query.Query.defaultLimit">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType">
            <summary>
            <para>
            MetadataReportType defines the structure of a metadata structure definition-specific Metadata Report. This consists of a MetadataStructureRef which holds the ID fo the metadata structure, and MetadataStructureAgencyRef, which holds the ID of the maintraenance agency of the metadata structure, and Version, which provides the version number of the referenced metadata structure definition. If not provided, version is assumed to be "1.0". This type is designed to be extended to hold the metadata-structure-sepcific fields needed to validate a specific metadata report.
            
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.#ctor">
            <summary>
            <para>
            MetadataReportType defines the structure of a metadata structure definition-specific Metadata Report. This consists of a MetadataStructureRef which holds the ID fo the metadata structure, and MetadataStructureAgencyRef, which holds the ID of the maintraenance agency of the metadata structure, and Version, which provides the version number of the referenced metadata structure definition. If not provided, version is assumed to be "1.0". This type is designed to be extended to hold the metadata-structure-sepcific fields needed to validate a specific metadata report.
            
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.MetadataStructureAgencyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.MetadataStructureURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet">
            <summary>
            <para>
            MetadataReportType defines the structure of a metadata structure definition-specific Metadata Report. This consists of a MetadataStructureRef which holds the ID fo the metadata structure, and MetadataStructureAgencyRef, which holds the ID of the maintraenance agency of the metadata structure, and Version, which provides the version number of the referenced metadata structure definition. If not provided, version is assumed to be "1.0". This type is designed to be extended to hold the metadata-structure-sepcific fields needed to validate a specific metadata report.
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.#ctor">
            <summary>
            <para>
            MetadataReportType defines the structure of a metadata structure definition-specific Metadata Report. This consists of a MetadataStructureRef which holds the ID fo the metadata structure, and MetadataStructureAgencyRef, which holds the ID of the maintraenance agency of the metadata structure, and Version, which provides the version number of the referenced metadata structure definition. If not provided, version is assumed to be "1.0". This type is designed to be extended to hold the metadata-structure-sepcific fields needed to validate a specific metadata report.
            
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSetType)">
            <summary>
            <para>
            MetadataReportType defines the structure of a metadata structure definition-specific Metadata Report. This consists of a MetadataStructureRef which holds the ID fo the metadata structure, and MetadataStructureAgencyRef, which holds the ID of the maintraenance agency of the metadata structure, and Version, which provides the version number of the referenced metadata structure definition. If not provided, version is assumed to be "1.0". This type is designed to be extended to hold the metadata-structure-sepcific fields needed to validate a specific metadata report.
            
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.MetadataStructureRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.MetadataStructureAgencyRef">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.Version">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (MetadataStructureRef, MetadataStructureAgencyRef, Version?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.MetadataStructureURI">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.datasetID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.dataProviderSchemeAgencyId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.dataProviderSchemeId">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.dataProviderID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.dataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.dataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.action">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.reportingBeginDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.reportingEndDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.validFromDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.validToDate">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.publicationYear">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.metadatareport.MetadataSet.publicationPeriod">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.common.KeySetType">
            <summary>
            <para>
            Regular expression: (Key, Key1*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.common.KeySetType.#ctor">
            <summary>
            <para>
            Regular expression: (Key, Key1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.common.KeySetType.Key1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Key, Key1*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementType">
            <summary>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementType.#ctor">
            <summary>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementType.Constraint1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Description*, (DataflowRef | MetadataflowRef), DataProviderRef, Datasource?, Constraint?, Annotations?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementRefType">
            <summary>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?, MetadataflowAgencyID?, MetadataflowID?, MetadataflowVersion?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementRefType.#ctor">
            <summary>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?, MetadataflowAgencyID?, MetadataflowID?, MetadataflowVersion?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementRefType.MetadataflowAgencyID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?, MetadataflowAgencyID?, MetadataflowID?, MetadataflowVersion?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementRefType.MetadataflowID">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?, MetadataflowAgencyID?, MetadataflowID?, MetadataflowVersion?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementRefType.MetadataflowVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?, MetadataflowAgencyID?, MetadataflowID?, MetadataflowVersion?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.ProvisionAgreementRefType.Constraint1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID?, OrganisationSchemeID?, DataProviderID?, DataProviderVersion?, DataflowAgencyID?, DataflowID?, DataflowVersion?, Datasource?, Constraint?, MetadataflowAgencyID?, MetadataflowID?, MetadataflowVersion?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.DataflowRefType">
            <summary>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.DataflowRefType.#ctor">
            <summary>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.DataflowRefType.Constraint1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (URN?, AgencyID?, DataflowID?, Version?, Datasource?, Constraint?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.DataProviderRefType">
            <summary>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.DataProviderRefType.#ctor">
            <summary>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.registry.DataProviderRefType.Constraint1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (URN?, OrganisationSchemeAgencyID, OrganisationSchemeID, DataProviderID, Version?, Datasource?, Constraint?, Constraint1*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.PrimaryMeasureType">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.PrimaryMeasureType.#ctor">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.PrimaryMeasureType.conceptSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.MetadataAttributeType">
            <summary>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.MetadataAttributeType.#ctor">
            <summary>
            <para>
            Regular expression: (MetadataAttribute*, TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.MetadataAttributeType.conceptSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.MetadataAttributeType.representationSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.DimensionType">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.DimensionType.#ctor">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.DimensionType.conceptSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.TimeDimensionType">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.TimeDimensionType.#ctor">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.TimeDimensionType.conceptSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.AttributeType">
            <summary>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.AttributeType.#ctor">
            <summary>
            <para>
            Regular expression: (TextFormat?, AttachmentGroup*, AttachmentMeasure*, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.AttributeType.conceptSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.CrossSectionalMeasureType">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.CrossSectionalMeasureType.#ctor">
            <summary>
            <para>
            Regular expression: (TextFormat?, Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V20.extension.structure.CrossSectionalMeasureType.conceptSchemeVersion">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
    </members>
</doc>
