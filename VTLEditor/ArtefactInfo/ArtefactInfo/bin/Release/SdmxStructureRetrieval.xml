<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SdmxStructureRetrieval</name>
    </assembly>
    <members>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine">
            <summary>
                The purpose of the ICrossReferenceResolverEngine is to resolve cross references for beans, either
                MaintainableBeans,
                beans within a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects" /> container, ProvisionBeans, and RegistrationBeans.
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.GetMissingAgencies(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                For the included <paramref name="sdmxObjects" />, returns a map of agency URN to maintainable Bean that references
                the agency
            </summary>
            <param name="sdmxObjects">
                The included <c>SDMX</c> objects
            </param>
            <param name="identifiableRetrievalManager">
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager" />
            </param>
            <returns>
                The included <paramref name="sdmxObjects" />, returns a map of agency URN to maintainable Bean that references the
                agency
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.GetMissingCrossReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Gets a Dictionary of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject" /> alongside any cross references they declare that could not
                be found in the set of
                <paramref name="beans" />
                provided, and the <paramref name="identifiableRetrievalManager" /> (if given).
                <p />
                <b>NOTE :</b>An empty Map is returned if all cross references are present.
            </summary>
            <param name="beans">
                - the objects to return the Map of missing references for
            </param>
            <param name="numberLevelsDeep">
                references, an argument of 0 (zero) implies there is no limit, and the resolver engine will continue re-cursing
                until it has found every directly and indirectly referenced
            </param>
            <param name="identifiableRetrievalManager">
                - Used to resolve the structure references. Can be null, if supplied this is used to resolve any references that do
                not exist in the supplied beans
            </param>
            <returns>
                Map of IIdentifiableObject with a Set of CrossReferences that could not be resolved for the IIdentifiableObject -
                an empty Map is returned if all cross references are present
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.ResolveCrossReference(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Resolves a reference from <paramref name="crossReference" />
            </summary>
            <param name="crossReference">
                The cross reference instance
            </param>
            <param name="identifiableRetrievalManager">
                The identifiable Retrieval Manager.
            </param>
            <returns>
                a reference from <paramref name="crossReference" />
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Resolves all references and returns a Map containing all the input beans and the objects that are cross referenced,
                the Map's key set contains the Identifiable that is the referencing object and the Map's value collection contains
                the referenced artifacts.
            </summary>
            <param name="beans">
                - the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects" /> container, containing all the beans to check references for
            </param>
            <param name="resolveAgencies">
                - if true the resolver engine will also attempt to resolve referenced agencies
            </param>
            <param name="numberLevelsDeep">
                references, an argument of 0 (zero) implies there is no limit, and the resolver engine will continue re-cursing
                until it has found every directly and indirectly referenced artifact. Note that there is no risk of infinite
                recursion in calling this.
            </param>
            <param name="identifiableRetrievalManager">
                - Used to resolve the structure references. Can be null, if supplied this is used to resolve any references that do
                not exist in the supplied beans
            </param>
            <returns>
                Map of referencing versus  references
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                - if any of the references could not be resolved
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject,System.Boolean,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Returns a set of IdentifiableBeans that the IMaintainableObject cross references
            </summary>
            <param name="bean">
                The bean.
            </param>
            <param name="resolveAgencies">
                - if true will also resolve the agencies
            </param>
            <param name="numberLevelsDeep">
                references, an argument of 0 (zero) implies there is no limit, and the resolver engine will continue re-cursing
                until it has found every directly and indirectly referenced artifact. Note that there is no risk of infinite
                recursion in calling this.
            </param>
            <param name="identifiableRetrievalManager">
                - Used to resolve the structure references. Can be null, if supplied this is used to resolve any references that do
                not exist in the supplied beans
            </param>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                - if any of the references could not be resolved
            </exception>
            <returns>
                a set of IdentifiableBeans that the IMaintainableObject cross references
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IRegistrationObject,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IProvisionRetrievalManager)">
            <summary>
                Returns a set of IdentifiableBeans that are directly referenced from this registration
            </summary>
            <param name="registration">
                - the registration to resolve the references for
            </param>
            <param name="provRetrievalManager">
                - Used to resolve the provision references. Can be null if registration is not linked to a provision
            </param>
            <returns>
                a set of IdentifiableBeans that are directly referenced from this registration
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IProvisionAgreementObject,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Returns a set of structures that are directly referenced from this provision
            </summary>
            <param name="provision">
                - the provision to resolve the references for
            </param>
            <param name="identifiableRetrievalManager">
                - must not be null as this will be used to resolve the references
            </param>
            <returns>
                a set of structures that are directly referenced from this provision
            </returns>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore">
            <summary>
                The <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.ICrossReferenceResolverEngine" /> implementation
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore._allIdentifiables">
            <summary>
                The map that contains all identifiable objet, with URN used a key.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore._maintainableCrossReferenceRetrieverEngine">
            <summary>
                The maintainable retrieval engine.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore._agencies">
            <summary>
                The agencies.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore._crossReferences">
            <summary>
                The cross references.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore._resolveAgencies">
            <summary>
                The resolve agencies.
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore" /> class.
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.#ctor(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore" /> class.
            </summary>
            <param name="sdmxObjects"> The sdmx objects. </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.#ctor(Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.IMaintainableCrossReferenceRetrieverEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore" /> class.
            </summary>
            <param name="maintainableCrossReferenceRetrieverEngine">The maintainable cross reference retriever engine.</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.GetMissingAgencies(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
            For the included <paramref name="sdmxObjects" />, returns a map of agency URN to maintainable Bean that references
            the agency
            </summary>
            <param name="sdmxObjects">The included <c>SDMX</c> objects</param>
            <param name="identifiableRetrievalManager"> The <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager" /> </param>
            <returns>
            The included <paramref name="sdmxObjects" /> , returns a map of agency URN to maintainable Bean that
            references the agency
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="sdmxObjects"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.GetMissingCrossReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Gets a Dictionary of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject" /> alongside any cross references they declare that could not
                be found in the set of
                <paramref name="beans" />
                provided, and the <paramref name="retrievalManager" /> (if given).
                <p />
                <b>NOTE :</b>An empty Map is returned if all cross references are present.
            </summary>
            <param name="beans"> - the objects to return the Map of missing references for </param>
            <param name="numberLevelsDeep">
                references, an argument of 0 (zero) implies there is no limit, and the resolver engine
                will continue re-cursing until it has found every directly and indirectly referenced
            </param>
            <param name="retrievalManager">
                - Used to resolve the structure references. Can be null, if supplied this is used to
                resolve any references that do not exist in the supplied sdmxObjects
            </param>
            <returns>
                Map of IIdentifiableObject with a Set of CrossReferences that could not be resolved for the
                IIdentifiableObject - an empty Map is returned if all cross references are present
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveCrossReference(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Resolves a reference from <paramref name="crossReference" />
            </summary>
            <param name="crossReference"> The cross reference instance </param>
            <param name="structRetrievalManager"> The structure Retrieval Manager. </param>
            <returns> a reference from <paramref name="crossReference" /> </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxReferenceException">
                <see cref="P:Org.Sdmxsource.Sdmx.Api.Constants.ExceptionCode.ReferenceErrorUnresolvable" />
            </exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="crossReference"/> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">Cannot resolve artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IProvisionAgreementObject,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Returns a set of structures that are directly referenced from this provision
            </summary>
            <param name="provision"> - the provision to resolve the references for </param>
            <param name="structRetrievalManager"> - must not be null as this will be used to resolve the references </param>
            <returns> a set of structures that are directly referenced from this provision </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="provision"/> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">Cannot resolve artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IRegistrationObject,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IProvisionRetrievalManager)">
            <summary>
            Returns a set of IdentifiableBeans that are directly referenced from this registration
            </summary>
            <param name="registration">- the registration to resolve the references for</param>
            <param name="provRetrievalManager">- Used to resolve the provision references. Can be null if registration is not
            linked to a provision</param>
            <returns>a set of IdentifiableBeans that are directly referenced from this registration</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="registration"/>   is null.</exception><exception cref="T:System.ArgumentException">ProvisionRetrievalManager can not be null</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">Could not find a provision agreement.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="registration" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">ProvisionRetrievalManager can not be null</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Resolves all references and returns a Map containing all the input sdmxObjects and the objects that are cross
                referenced,
                the Map's key set contains the Identifiable that is the referencing object and the Map's value collection contains
                the referenced artifacts.
            </summary>
            <param name="beans">
                - the <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects" /> container, containing all the sdmxObjects to check references
                for
            </param>
            <param name="resolveAgencies"> - if true the resolver engine will also attempt to resolve referenced agencies </param>
            <param name="numberLevelsDeep">
                references, an argument of 0 (zero) implies there is no limit, and the resolver engine
                will continue re-cursing until it has found every directly and indirectly referenced artifact. Note that there is
                no risk of infinite recursion in calling this.
            </param>
            <param name="retrievalManager">
                - Used to resolve the structure references. Can be null, if supplied this is used to
                resolve any references that do not exist in the supplied sdmxObjects
            </param>
            <returns> Map of referencing versus references </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject,System.Boolean,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
                Returns a set of IdentifiableBeans that the IMaintainableObject cross references
            </summary>
            <param name="bean"> The bean. </param>
            <param name="resolveAgencies"> - if true will also resolve the agencies </param>
            <param name="numberLevelsDeep">
                references, an argument of 0 (zero) implies there is no limit, and the resolver engine
                will continue re-cursing until it has found every directly and indirectly referenced artifact. Note that there is
                no risk of infinite recursion in calling this.
            </param>
            <param name="retrievalManager">
                - Used to resolve the structure references. Can be null, if supplied this is used to
                resolve any references that do not exist in the supplied sdmxObjects
            </param>
            <returns> a set of IdentifiableBeans that the IMaintainableObject cross references </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.AgencyRef(System.String)">
            <summary>
            The agency ref.
            </summary>
            <param name="agencyId">The agency id</param>
            <returns>The IStructureReference</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.CountValues(System.Collections.Generic.IDictionary{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject}})">
            <summary>
                The count values.
            </summary>
            <param name="map"> The map. </param>
            <returns> The <see cref="T:System.Int32" /> . </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.HandleMissingReference(Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException,System.Collections.Generic.IDictionary{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference}})">
            <summary>
                Handles a missing reference either by throwing an exception, if the populateMissingMap, or by populating the map,
                if both the map is not null and the reference exception has reference to the
                cross referenced artefact.
            </summary>
            <param name="e"> The e. </param>
            <param name="populateMissingMap"> The populate Missing Map. </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.AddMaintainableToMap(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
                Add <paramref name="maintainable" /> to map.
            </summary>
            <param name="maintainable">
                The maintainable.
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.AddObjectsToMap(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
                Add the specified <paramref name="sdmxObjects" /> to map.
            </summary>
            <param name="sdmxObjects">
                The SDMX objects.
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResetMaps">
            <summary>
                The reset maps.
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveAgency(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
            The resolve agency.
            </summary>
            <param name="maintainable">The maintainable.</param>
            <param name="sdmxObjectRetrievalManager">The SDMX object retrieval manager.</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveAgency(System.String,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager)">
            <summary>
            Resolves the agency.
            </summary>
            <param name="agencyId">The agency identifier.</param>
            <param name="identifiableRetrievalManager">The identifiable retrieval manager.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAgency" /> .</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxReferenceException">The <see cref="P:Org.Sdmxsource.Sdmx.Api.Constants.ExceptionCode.ReferenceErrorUnresolvable" /></exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveMaintainableFromLocalMaps(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference)">
            <summary>
                The resolve maintainable from local maps.
            </summary>
            <param name="queryObject"> The query object. </param>
            <returns> The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> . </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                Missing parameters - Invalid
                <see cref="P:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject.MaintainableId" />
                at
                <paramref name="queryObject" />
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean,System.Int32,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager,System.Collections.Generic.IDictionary{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference}})">
            <summary>
                The resolve references.
            </summary>
            <param name="beans"> The sdmxObjects. </param>
            <param name="resolveAgencies"> The resolve agencies 0. </param>
            <param name="numberLevelsDeep"> The number levels deep. </param>
            <param name="retrievalManager"> The retrieval manager. </param>
            <param name="populateMap"> The populate map. </param>
            <returns> The <see cref="T:System.Collections.Generic.IDictionary`2" /> . </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.ResolveReferencesInternal(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IIdentifiableRetrievalManager,System.Collections.Generic.IDictionary{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference}})">
            <summary>
                The resolve references internal.
            </summary>
            <param name="sdmxObjects"> The sdmxObjects. </param>
            <param name="retrievalManager"> The retrieval manager. </param>
            <param name="populateMissingMap"> The populate missing map. </param>
            <returns> The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject" /> dictionary. </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">Reference error</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.CrossReferenceResolverEngineCore.StoreRef(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.ISdmxObject,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject)">
            <summary>
                The store ref.
            </summary>
            <param name="referencedFrom"> The referenced from. </param>
            <param name="reference"> The reference. </param>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.IMaintainableCrossReferenceRetrieverEngine">
            <summary>
            The interface Maintainable Cross Reference Retriever Engine
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.IMaintainableCrossReferenceRetrieverEngine.GetCrossReferences(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
                Returns the set of cross referenced structures from this maintainable.
            </summary>
            <param name="retrievalManager">
                The retrieval manager
            </param>
            <param name="maintainable">
                The maintainable object
            </param>
            <returns>
                The cross references set.
            </returns>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine">
            <summary>
            Class Maintainable Cross Reference Retriever Engine.
            </summary>
            <seealso cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.IMaintainableCrossReferenceRetrieverEngine" />
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine._beanRetrievalManager">
            <summary>
                The sdmx objects retrieval manager.
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.BeanRetrievalManager">
            <summary>
            Gets or sets the sdmx objects retrieval manager.
            </summary>
            <value>
            The bean retrieval manager.
            </value>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.GetCrossReferences(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
                Returns the set of cross referenced structures from this maintainable.
            </summary>
            <param name="retrievalManager">
                The retrieval manager
            </param>
            <param name="maintainable">
                The maintainable object
            </param>
            <returns>
                The cross references set.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="maintainable"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.AddCodeReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference},Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference,System.Collections.Generic.ICollection{System.String})">
            <summary>
                Adds code references.
            </summary>
            <param name="constraintBean">
                The constraint object.
            </param>
            <param name="returnReferences">
                The returned references.
            </param>
            <param name="codelistRef">
                The code list reference object.
            </param>
            <param name="codeIds">
                The code ids.
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.AddComponenents(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference,System.Collections.Generic.IDictionary{System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent})">
            <summary>
                Adds components to the component map.
            </summary>
            <param name="retrievalManager">
                The retrieval manager
            </param>
            <param name="crossRef">
                The cross reference object
            </param>
            <param name="componentMap">
                The components map
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.AddCrossReferencesForConstraintKey(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference},System.Collections.Generic.IDictionary{System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent},Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IConstraintDataKeySet)">
            <summary>
                Adds cross references for a constraint key to components map.
            </summary>
            <param name="constraintBean">
                The constraint object
            </param>
            <param name="returnReferences">
                The returned references
            </param>
            <param name="componentMap">
                The components map
            </param>
            <param name="constraintDataKey">
                The constraint data key
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.AddCrossReferencesForCubeRegion(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference},System.Collections.Generic.IDictionary{System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent},Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.ICubeRegion)">
            <summary>
                Adds cross references for a cube region to components map.
            </summary>
            <param name="constraintBean">
                The constraint object
            </param>
            <param name="returnReferences">
                The returned references
            </param>
            <param name="componentMap">
                The components map
            </param>
            <param name="cubeRegionBean">
                The cube region object
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.AddCrossReferencesForCubeRegion(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject,System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference},System.Collections.Generic.IDictionary{System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent},System.Collections.Generic.IList{Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IKeyValues})">
            <summary>
                Adds cross references for a cube region to components map.
            </summary>
            <param name="constraintBean">
                The constraint object
            </param>
            <param name="returnReferences">
                The returned references
            </param>
            <param name="componentMap">
                The components map
            </param>
            <param name="keyValues">
                The key values
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.GetCodelistReferenceForComponent(Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject,System.String,System.Collections.Generic.IDictionary{System.String,Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IComponent})">
            <summary>
                Gets the codes list reference for a component.
            </summary>
            <param name="constraintBean">
                The constraint object.
            </param>
            <param name="componentId">
                The component id.
            </param>
            <param name="componentMap">
                The components map.
            </param>
            <returns>
                The cross reference object.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Engine.MaintainableCrossReferenceRetrieverEngine.GetCrossReferences(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager,Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject)">
            <summary>
                Returns the set of cross referenced structures.
            </summary>
            <param name="retrievalManager">
                The retrieval manager
            </param>
            <param name="constraintBean">
                The constraint object
            </param>
            <returns>
                The cross references set.
            </returns>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.AbstractRetrievalManager">
            <summary>
                The abstract retrieval manager.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.AbstractRetrievalManager._sdmxObjectRetrievalManager">
            <summary>
                The _sdmx object retrieval manager.
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.AbstractRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.AbstractRetrievalManager" /> class.
            </summary>
            <param name="sdmxObjectRetrievalManager">
                The sdmx object retrieval manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="sdmxObjectRetrievalManager" /> is null
            </exception>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.AbstractRetrievalManager.SdmxObjectRetrievalManager">
            <summary>
                Gets the sdmx object retrieval manager.
            </summary>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager">
            <summary>
                The base SDMX object retrieval manager.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._crossReferenceRetrievalManager">
            <summary>
                The cross referenced retrieval manager
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._crossReferencingRetrievalManager">
            <summary>
                The cross referencing retrieval manager
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._externalReferenceRetrievalManager">
            <summary>
                The external service retrieval manager
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._headerRetrievalManager">
            <summary>
                The header retrieval manager
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._proxy">
            <summary>
                The  retrieval manager
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager._serviceRetrievalManager">
            <summary>
                The service retrieval manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager" /> class.
                Default constructor
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager" /> class.
            </summary>
            <param name="retrievalManager">
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager" /> retrieval manager.
            </param>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.CrossReferenceRetrievalManager">
            <summary>
                Gets or sets the cross referenced retrieval manager
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.CrossReferencingRetrievalManager">
            <summary>
                Gets or sets the cross referencing retrieval manager
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ExternalReferenceRetrievalManager">
            <summary>
                Gets or sets the external service retrieval manager
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.HeaderRetrievalManager">
            <summary>
                Gets or sets the header retrieval manager
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.Proxy">
            <summary>
                Gets or sets the retrieval manager
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ServiceRetrievalManager">
            <summary>
                Gets or sets the service retrieval manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetAgencySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns AgencySchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all AgencySchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetAttachmentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns AttachmentConstraintBeans that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetCategorisationObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns CategorisationObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetCategorySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns CategorySchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CategorySchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetCodelistObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns CodelistObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetConceptSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ConceptSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ConceptSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetContentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ContentConstraintObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetDataConsumerSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns DataConsumerSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataConsumerSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetDataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns DataflowObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataflowObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetDataProviderSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns DataProviderSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataProviderSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetDataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns DataStructureObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataStructureObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetHierarchicCodeListObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns HierarchicalCodelistObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all HierarchicalCodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported, proxy is null.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObject``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets a maintainable that is of the given type, determined by T, and matches the reference parameters in the
            IMaintainableRefObject.
            <p />
            Expects only ONE maintainable to be returned from this query
            </summary>
            <typeparam name="T">
            The maintainable type.
            </typeparam>
            <param name="maintainableReference">
            The reference object that must match on the returned structure. If version information is missing, then latest
                version is assumed
            </param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.InvalidCastException">An artefact cannot be cast to type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
                Gets a maintainable defined by the StructureQueryObject parameter.
                <p />
                Expects only ONE maintainable to be returned from this query
            </summary>
            <param name="structureReference">
                The reference object defining the search parameters, this is expected to uniquely identify one MaintainableObject
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.ArgumentException">GetMaintainableObject was passed a null StructureReferenceBean this is not allowed</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefacts.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,System.Boolean,System.Boolean)">
            <summary>
            Gets a maintainable defined by the StructureQueryObject parameter.
            <p />
            Expects only ONE maintainable to be returned from this query
            </summary>
            <param name="structureReference">The reference object defining the search parameters, this is expected to uniquely identify one MaintainableObject</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <param name="returnLatest">if set to <c>true</c> [return latest].</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .</returns>
            <exception cref="T:System.ArgumentException">GetMaintainableObject was passed a null StructureReferenceBean this is not allowed</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefacts.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObject``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets a maintainable that is of the given type, determined by T, and matches the reference parameters in the
            IMaintainableRefObject.
            <p />
            Expects only ONE maintainable to be returned from this query
            </summary>
            <typeparam name="T">The type of the maintainable
            </typeparam>
            <param name="maintainableReference">
            The reference object that must match on the returned structure. If version information is missing, then latest
                version is assumed
            </param>
            <param name="returnStub">
            If true then a stub object will be returned
            </param>
            <param name="returnLatest">
            If true then the latest version is returned, regardless of whether version information is supplied
            </param>
            <returns>
            The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject"/> .
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="maintainableReference"/> is <see langword="null"/>.
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.InvalidCastException">An artefact cannot be cast to type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObjects``1(System.Type,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                Gets a set of all MaintainableObjects of type T that match the reference parameters in the IMaintainableRefObject
                argument.
                An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The type of the maintainable. It is constraint  </typeparam>
            <param name="maintainableInterface">The maintainable interface.</param>
            <param name="maintainableReference">
                Contains the identifiers of the structures to returns, can include wild-carded
                values (null indicates a wild-card).
            </param>
            <returns>
                The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .
            </returns>
            <remarks>
                This method exists only for compatibility reasons with Java implementation of this interface which uses raw
                types and unchecked generics.
            </remarks>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.InvalidCastException">An artefact cannot be cast to type .</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefacts.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObjects``1(System.Type,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Gets a set of all MaintainableObjects of type T that match the reference parameters in the IMaintainableRefObject
                argument.
                An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The type of the maintainable. It is constraint</typeparam>
            <param name="maintainableInterface">The maintainable interface.</param>
            <param name="maintainableReference">
                Contains the identifiers of the structures to returns, can include wild-carded
                values (null indicates a wild-card).
            </param>
            <param name="returnStub">if set to <c>true</c> [return stub].</param>
            <param name="returnLatest">if set to <c>true</c> [return latest].</param>
            <returns>
                The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .
            </returns>
            <remarks>
                This method exists only for compatibility reasons with Java implementation of this interface which uses raw types
                and unchecked generics.
            </remarks>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefacts.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObjects``1">
            <summary>
            Gets a set of all MaintainableObjects of type T
            <p />
            An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The generic type.</typeparam>
            <returns>The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.InvalidCastException">An artefact cannot be cast to type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObjects``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets a set of all MaintainableObjects of type T that match the reference parameters in the IMaintainableRefObject
            argument.
            An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The type of the maintainable.</typeparam>
            <param name="maintainableReference">Contains the identifiers of the structures to returns, can include wildcarded values (null indicates a wildcard).</param>
            <returns>The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.InvalidCastException">An artefact cannot be cast to type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainableObjects``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets a set of all MaintainableObjects of type T that match the reference parameters in the IMaintainableRefObject
            argument.
            An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The type of the maintainable.</typeparam>
            <param name="maintainableReference">Contains the identifiers of the structures to returns, can include wildcarded values (null indicates a wildcard).</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <param name="returnLatest">If true then the latest version is returned, regardless of whether version information is supplied</param>
            <returns>The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="maintainableReference" /> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.InvalidCastException">An artefact cannot be cast to type <typeparamref name="T"/>.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainables(Org.Sdmxsource.Sdmx.Api.Model.Query.IRestStructureQuery)">
            <summary>
                Get all the maintainable that match the <paramref name="restquery" />
            </summary>
            <param name="restquery">The REST structure query.</param>
            <returns>the maintainable that match the <paramref name="restquery" /></returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="restquery"/> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException">if the maintainable could not be resolved from the given endpoint</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Cannot return stubs since no ServiceRetrievalManager has been supplied!</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMetadataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Returns MetadataFlowObjects that match the parameters in the ref object.  If the ref object is null or
            has no attributes set, then this will be interpreted as a search for all MetadataFlowObjects
            </summary>
            <param name="xref">The reference object defining the search parameters, can be empty or null</param>
            <param name="returnLatest">If true then the latest versions of the structures that match the query will be returned.  If version information
            is supplied
            then it will be ignored</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <returns>Set of sdmxObjects that match the search criteria</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMetadataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns MetadataStructureObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all MetadataStructureObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetOrganisationUnitSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Returns OrganisationUnitSchemeObjects that match the parameters in the ref object.  If the ref object is null or
            has no attributes set, then this will be interpreted as a search for all OrganisationUnitSchemeObjects
            </summary>
            <param name="xref">The reference object defining the search parameters, can be empty or null</param>
            <param name="returnLatest">If true then the latest versions of the structures that match the query will be returned.  If version information
            is supplied
            then it will be ignored</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <returns>Set of sdmxObjects that match the search criteria</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetProcessObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Returns ProcessObjects that match the parameters in the ref object.  If the ref object is null or
            has no attributes set, then this will be interpreted as a search for all ProcessObjects
            </summary>
            <param name="xref">The reference object defining the search parameters, can be empty or null</param>
            <param name="returnLatest">If true then the latest versions of the structures that match the query will be returned.  If version information
            is supplied
            then it will be ignored</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <returns>Set of sdmxObjects that match the search criteria</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetProvisionAgreementObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ProvisionAgreementObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ProvisionAgreementObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetReportingTaxonomyObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ReportingTaxonomyObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ReportingTaxonomyObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetSdmxObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,Org.Sdmxsource.Sdmx.Api.Model.ResolveCrossReferences)">
            <summary>
                Gets the SDMX objects.
            </summary>
            <param name="structureReference">The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference" /> which must not be null.</param>
            <param name="resolveCrossReferences">
                either 'do not resolve', 'resolve all' or 'resolve all excluding agencies'. If not
                set to 'do not resolve' then all the structures that are referenced by the resulting structures are also returned
                (and also their children).  This will be equivalent to descendants for a <c>RESTful</c> query..
            </param>
            <returns>
                Returns a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects" /> container containing all the Maintainable Objects that match the query
                parameters as defined by the <paramref name="structureReference" />.
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">Unknown Maintainable Type</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="structureReference"/> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unknown condition encountered.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetStructureSetObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns StructureSetObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all StructureSetObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetSubscriptionObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets the subscription objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <param name="returnLatest">if set to <c>true</c> [return latest].</param>
            <param name="returnStub">if set to <c>true</c> [return stub].</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefact.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetAllMaintainables(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets all the maintainable objects in this container, returns an empty set if no maintainable objects exist in this
            container
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <param name="returnLatest">if set to <c>true</c> [return latest].</param>
            <param name="returnStubs">if set to <c>true</c> [return stubs].</param>
            <returns>set of all maintainable objects, minus any which match the optional exclude parameters</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefacts.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ExtractFromSet``1(System.Collections.Generic.ICollection{``0})">
            <summary>
                If the set is of size 1, then returns the element in the set.
                Returns null if the set is null or of size 0
            </summary>
            <typeparam name="T">
                The maintainable type
            </typeparam>
            <param name="set">
                set of elements
            </param>
            <returns>
                The first element of the set.
                Throws SdmxException if the set contains more then 1 element
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetMaintainablesOfType``1(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureEnumType,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets a set of all MaintainableObjects of type structureType that match the reference parameters in the
            IMaintainableRefObject argument.
            An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The maintainable type</typeparam>
            <param name="structureType">Contains sdmx structure type</param>
            <param name="maintainableReference">Contains the identifiers of the structures to returns, can include wildcarded values (null indicates a wildcard).</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <param name="returnLatest">If true then the latest version is returned, regardless of whether version information is supplied</param>
            <returns>The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Unsupported artefacts.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.GetQueryResultMaintainables(Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets the query result for maintainable.
            </summary>
            <param name="type">The type.</param>
            <param name="maintainableRef">The maintainable reference.</param>
            <param name="isLatest">if set to <c>true</c> [is latest].</param>
            <param name="retrieveStubs">if set to <c>true</c> [retrieve stubs].</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.HandleReturnDetail``1(System.Boolean,System.Collections.Generic.ISet{``0})">
            <summary>
            Handles the return detail.
            </summary>
            <typeparam name="T">The maintainable type</typeparam>
            <param name="returnStub">if set to <c>true</c> [return stub].</param>
            <param name="returnSet">The return set.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.HandleReturnDetails``1(System.Boolean,System.Collections.Generic.ISet{``0})">
            <summary>
            Handles the return details.
            </summary>
            <typeparam name="T">The maintainable type</typeparam>
            <param name="returnStub">if set to <c>true</c> return stub artefacts.</param>
            <param name="returnSet">The return set.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1"/>.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ResolveChildren(System.Collections.Generic.IEnumerable{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject},Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            The resolve children references.
            </summary>
            <param name="resolveFor">The set of references.</param>
            <param name="referencedBeans">The referenced objects.</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Cannot resolve children because CrossReferenceRetrievalManager is not set</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ResolveDescendants(System.Collections.Generic.ISet{Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject},Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            The resolve descendants references.
            </summary>
            <param name="resolveFor">The set of references.</param>
            <param name="referencedBeans">The referenced objects.</param>
            <param name="returnStub">If true then a stub object will be returned</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ResolveParents``1(System.Collections.Generic.IEnumerable{``0},Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
            The resolve parents references.
            </summary>
            <typeparam name="T">The maintainable type</typeparam>
            <param name="resolveFor">The set of references.</param>
            <param name="referencedBeans">The referenced objects.</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">Resolve parents not supported</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,System.Boolean)">
            <summary>
                The resolve references.
            </summary>
            <param name="beans0">
                The beans 0.
            </param>
            <param name="resolveAgencies">
                If true the agencies will be included
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager.ResolveSpecific``1(System.Collections.Generic.ISet{``0},Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType,System.Boolean)">
            <summary>
            The resolve specific references.
            </summary>
            <typeparam name="T">The maintainable type</typeparam>
            <param name="resolveFor">The set of references.</param>
            <param name="referencedBeans">The referenced objects.</param>
            <param name="specificType">The specific type.</param>
            <param name="returnStub">If true then a stub object will be returned</param>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.CrossReference.CrossReferencedRetrievalManager">
            <summary>
                The cross referenced retrieval manager.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.CrossReference.CrossReferencedRetrievalManager._sdmxObjectRetrievalManager">
            <summary>
                The _SDMX object retrieval manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.CrossReference.CrossReferencedRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.CrossReference.CrossReferencedRetrievalManager" /> class.
            </summary>
            <param name="sdmxObjectRetrievalManager">The SDMX object retrieval manager.</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.CrossReference.CrossReferencedRetrievalManager.GetCrossReferencedStructures(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,System.Boolean,Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType[])">
            <summary>
                Returns a set of MaintainableObjects that are cross referenced by the structure(s) that match the reference
                parameter
            </summary>
            <param name="structureReference">
                The structureReference  - What Do I Reference?
            </param>
            <param name="returnStub">
                returnStub if true, then will return the stubs that reference the structure
            </param>
            <param name="structures">
                structures an optional parameter to further filter the list by structure type
            </param>
            <returns>
                The MaintainableObjects
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.CrossReference.CrossReferencedRetrievalManager.GetCrossReferencedStructures(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject,System.Boolean,Org.Sdmxsource.Sdmx.Api.Constants.SdmxStructureType[])">
            <summary>
                Returns a set of MaintainableObject that are cross referenced by the given identifiable structure
            </summary>
            <param name="identifiable">
                The identifiable object to retrieve the references for - What Do I Reference?
            </param>
            <param name="returnStub">
                ReturnStub if true, then will return the stubs that reference the structure
            </param>
            <param name="structures">
                Structures an optional parameter to further filter the list by structure type
            </param>
            <returns>
                The MaintainableObjects
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="identifiable"/> is <see langword="null" />.</exception>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.HeaderRetrievalManager">
            <summary>
            Class Header Retrieval Manager.
            </summary>
            <seealso cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IHeaderRetrievalManager" />
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.HeaderRetrievalManager._senderId">
            <summary>
                The sender id.
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.HeaderRetrievalManager.Header">
            <summary>
                Gets the header object
            </summary>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.HeaderRetrievalManager.SenderId">
            <summary>
                Gets or sets the sender id.
            </summary>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore">
            <summary>
                The identifiable retrieval manager core.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore._externalReferenceRetrievalManager">
            <summary>
                The _external reference retrieval manager. Warning can be null.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore._retrievalManager">
            <summary>
                The _retrieval manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore"/> class.
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.#ctor(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IExternalReferenceRetrievalManager,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore" /> class.
            </summary>
            <param name="externalReferenceRetrievalManager">
                The external reference retrieval manager.
            </param>
            <param name="retrievalManager">
                The retrieval manager.
            </param>
            <exception cref="T:System.ArgumentNullException">
                <paramref name="retrievalManager" /> is null.
            </exception>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.RetrievalManager">
            <summary>
            Gets or sets the retrieval manager.
            </summary>
            <value>
            The retrieval manager.
            </value>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.GetAgency(System.String)">
            <summary>
                Gets the agency.
            </summary>
            <param name="id">
                The id.
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAgency" />.
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="id"/> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxReferenceException">
                If the object is not of expected type 
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException">if the maintainable could not be resolved from the given endpoint</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.GetIdentifiableObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference)">
            <summary>
                Resolves an identifiable reference
            </summary>
            <param name="crossReference">
                Cross-reference object
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject" /> .
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                if the ICrossReference could not resolve to an IIdentifiableObject
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException">if the maintainable could not be resolved from the given endpoint</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.GetIdentifiableObject``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.ICrossReference)">
            <summary>
                Resolves an reference to a Object of type T, this will return the Object of the given type, throwing an exception
                if either the
                Object can not be resolved or if it is not of type T
            </summary>
            <typeparam name="T">
                The identifiable type.
            </typeparam>
            <param name="crossReference">
                Cross-reference object
            </param>
            <returns>
                The <typeparamref name="T"/>
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                if the ICrossReference could not resolve to an IIdentifiableObject
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException">if the maintainable could not be resolved from the given endpoint</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.GetIdentifiableObject``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
                Resolves an reference to a Object of type T, this will return the Object of the given type, throwing an exception
                if e
                Object is not of type T
            </summary>
            <typeparam name="T">
                Generic type parameter.
            </typeparam>
            <param name="crossReference">
                Structure-reference object
            </param>
            <returns>
                The <typeparamref name="T" />
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxReferenceException">
                If the object is not of type <typeparamref name="T" />
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException">if the maintainable could not be resolved from the given endpoint</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.GetIdentifiableObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
                Resolves an reference to a Object of type T, this will return the Object of the given type, throwing an exception
                if e
                Object is not of type T
            </summary>
            <param name="crossReference">
                Structure-reference object
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IIdentifiableObject" /> .
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="crossReference"/> is <see langword="null" />.</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNoResultsException">if the maintainable could not be resolved from the given endpoint</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.IdentifiableRetrievalManagerCore.GetIdentifiableObjects``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
                Gets the identifiable objects.
            </summary>
            <typeparam name="T">
                The type of the identifiable objects to return.
            </typeparam>
            <param name="structureReference">
                The structure reference.
            </param>
            <returns>
                Returns a set of identifiable objects that match the structure reference, which may be a full or partial
                reference to a maintainable or identifiable
            </returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="structureReference"/> is <see langword="null" />.</exception>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager">
            <summary>
                The local retrieval manager provides interfaces to retrieve structures off an in memory storage of the
                ISdmxObjects.
                <p />
                This class is able to updated its cache as if it were a local storage with the interface methods provided by the
                StructurePersistenceManager.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._log">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._agencySchemeExtractor">
            <summary>
            The _agency scheme extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._attachmentConstraintExtractor">
            <summary>
            The _attachment constraint extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._categorisationExtractor">
            <summary>
            The _categorisation extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._categorySchemeExtractor">
            <summary>
            The _category scheme extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._codelistExtractor">
            <summary>
            The _codelist extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._conceptSchemeExtractor">
            <summary>
            The _concept scheme extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._contentConstraintExtractor">
            <summary>
            The _content constraint extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._dataConsumerSchemeExtractor">
            <summary>
            The _data consumer scheme extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._dataflowExtractor">
            <summary>
            The _dataflow extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._dataProviderSchemeExtractor">
            <summary>
            The _data provider scheme extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._dataStructureExtractor">
            <summary>
            The _data structure extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._hierarchicalCodelistExtractor">
            <summary>
            The _hierarchical codelist extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._metadataFlowExtractor">
            <summary>
            The _metadata flow extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._metadataStructureDefinitionExtractor">
            <summary>
            The _metadata structure definition extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._organisationUnitSchemeExtractor">
            <summary>
            The _organisation unit scheme extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._processBeanExtractor">
            <summary>
            The _process bean extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._provisionAgreementExtractor">
            <summary>
            The _provision agreement extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._reportingTaxonomyExtractor">
            <summary>
            The _reporting taxonomy extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._sdmxObjects">
            <summary>
                The beans.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._structureSetExtractor">
            <summary>
            The _structure set extractor
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager._subscriptionExtractor">
            <summary>
            The _subscription extractor
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager" /> class.
                Default constructor
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Util.IReadableDataLocation,Org.Sdmxsource.Sdmx.Api.Manager.Parse.IStructureParsingManager,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.CrossReference.ICrossReferencedRetrievalManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager" /> class.
                Create an in memory retrieval manager using a URI as a seed, the URI may reference a file (local or external on the
                web) or be a SDMX REST query
            </summary>
            <param name="seed">
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Util.IReadableDataLocation" /> which points to structural metadata.
            </param>
            <param name="structureParsingManager">
                The structure Parsing Manager.
            </param>
            <param name="crossReferenceRetrievalManager">
                The cross Reference Retrieval Manager.
            </param>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">
                - If the structure message is syntactically invalid
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                - If the structure document references structures that can not be resolved
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSemmanticException">
                - If the structure message is syntactically correct, but the content is illegal
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.CrossReference.ICrossReferencedRetrievalManager)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager" /> class.
            </summary>
            <param name="objects">
                The beans 0.
            </param>
            <param name="crossReferenceRetrievalManager">
                The cross Reference Retrieval Manager.
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager" /> class.
            </summary>
            <param name="objects">
                The beans 0.
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.DeleteStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
                Deletes the maintainable structures in the supplied objects
            </summary>
            <param name="maintainable">
                The maintainable.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="maintainable"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.DeleteStructures(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
                The delete structures.
            </summary>
            <param name="beans0">
                The beans 0.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="beans0"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAgencySchemeObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get agency scheme bean.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAgencyScheme" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAgencySchemeObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single agency scheme , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IAgencyScheme" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAgencySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get agency scheme beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAgencySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns AgencySchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all AgencySchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAttachmentConstraint(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get attachment constraint.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IAttachmentConstraintObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAttachmentConstraint(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single attachment constraint, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IAttachmentConstraintObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAttachmentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get attachment constraints.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetAttachmentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns AttachmentConstraintBeans that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategorisation(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get categorisation.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategorisation(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single Categorisation, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorisationObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategorisationObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get categorisation beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategorisationObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns CategorisationObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategoryScheme(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get category scheme.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorySchemeObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategoryScheme(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single CategoryScheme , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.ICategorySchemeObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategorySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get category scheme beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCategorySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns CategorySchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CategorySchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCodelist(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get codelist.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ICodelistObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCodelist(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single CodeList , this expects the reference object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.ICodelistObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCodelistObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get codelist beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetCodelistObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns CodelistObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetConceptScheme(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get concept scheme.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ConceptScheme.IConceptSchemeObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetConceptScheme(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single ConceptScheme , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ConceptScheme.IConceptSchemeObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetConceptSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get concept scheme beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetConceptSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ConceptSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ConceptSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetContentConstraint(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get content constraint.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetContentConstraint(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single content constraint, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IContentConstraintObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetContentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get content constraints.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetContentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ContentConstraintObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataConsumerSchemeObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get data consumer scheme bean.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataConsumerScheme" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataConsumerSchemeObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single data consumer scheme , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataConsumerScheme" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataConsumerSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get data consumer scheme beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataConsumerSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns DataConsumerSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataConsumerSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataflow(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get dataflow.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataflowObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataflow(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single Dataflow , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataflowObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get dataflow beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Returns DataflowObjects that match the parameters in the ref object.  If the ref object is null or
            has no attributes set, then this will be interpreted as a search for all DataflowObjects
            </summary>
            <param name="xref">The reference object defining the search parameters, can be empty or null</param>
            <param name="returnLatest">If true then the latest versions of the structures that match the query will be returned.  If version information
            is supplied
            then it will be ignored</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <returns>
            Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataProviderSchemeObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get data provider scheme bean.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataProviderScheme" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataProviderSchemeObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single data provider scheme , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IDataProviderScheme" /> .
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataProviderSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get data provider scheme beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataProviderSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns DataProviderSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataProviderSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get data structure.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single DataStructure.
                This expects the ref object to contain all the attributes required to uniquely identify the object.
                If version information is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.DataStructure.IDataStructureObject" /> .
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get data structure beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetDataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns DataStructureObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataStructureObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetHierarchicCodeList(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get hierarchic code list.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchicalCodelistObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetHierarchicCodeList(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single HierarchicCodeList , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Codelist.IHierarchicalCodelistObject" /> .
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetHierarchicCodeListObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get hierarchic code list beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetHierarchicCodeListObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns HierarchicalCodelistObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all HierarchicalCodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataflow(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get metadataflow.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.MetadataStructure.IMetadataFlow" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataflow(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single Metadataflow , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.MetadataStructure.IMetadataFlow" /> .
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get metadataflow beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns MetadataFlowObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all MetadataFlowObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get metadata structure.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.MetadataStructure.IMetadataStructureDefinitionObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single MetadataStructure , this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.MetadataStructure.IMetadataStructureDefinitionObject" /> .
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get metadata structure beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMetadataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns MetadataStructureObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all MetadataStructureObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetObjects">
            <summary>
                Returns a copy of the underlying beans for this retrieval Manager
            </summary>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetOrganisationUnitScheme(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get organisation unit scheme.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IOrganisationUnitSchemeObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetOrganisationUnitScheme(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a single organisation unit scheme, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IOrganisationUnitSchemeObject" /> .
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetOrganisationUnitSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get organisation unit scheme beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetOrganisationUnitSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns OrganisationUnitSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all OrganisationUnitSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProcessObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get process bean.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Process.IProcessObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProcessObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a process bean, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Process.IProcessObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProcessObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get process beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProcessObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ProcessObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ProcessObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProvisionAgreementObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get provision agreement bean.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IProvisionAgreementObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProvisionAgreementObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a provision agreement bean, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Registry.IProvisionAgreementObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProvisionAgreementObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get provision agreement beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetProvisionAgreementObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ProvisionAgreementObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ProvisionAgreementObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetReportingTaxonomy(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get reporting taxonomy.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.IReportingTaxonomyObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetReportingTaxonomy(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a reporting taxonomy bean, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.CategoryScheme.IReportingTaxonomyObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetReportingTaxonomyObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get reporting taxonomy beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetReportingTaxonomyObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ReportingTaxonomyObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ReportingTaxonomyObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetStructureSet(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get structure set.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Mapping.IStructureSetObject" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetStructureSet(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns a structure set bean, this expects the ref object to contain
                all the attributes required to uniquely identify the object.  If version information
                is missing then the latest version is assumed.
            </summary>
            <param name="xref">
                The reference object defining the search parameters, this is expected to uniquely identify one object
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Mapping.IStructureSetObject" /> .
            </returns>
            <exception cref="T:System.NotImplementedException">
                Not implemented.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetStructureSetObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                The get structure set beans.
            </summary>
            <param name="xref">
                The maintainable reference..
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetStructureSetObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns StructureSetObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all StructureSetObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetSubscriptionObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets the subscription objects.
            </summary>
            <param name="maintainableRef">The maintainable reference..</param>
            <param name="returnLatest">if set to <c>true</c> [return latest].</param>
            <param name="returnStub">if set to <c>true</c> [return stub].</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.SaveStructure(Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject)">
            <summary>
                Saves the maintainable
            </summary>
            <param name="maintainable">
                The maintainable.
            </param>
            <exception cref="T:System.ArgumentNullException"><paramref name="maintainable"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.SaveStructures(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
                The save structures.
            </summary>
            <param name="beans0">
                The beans 0.
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.SetServiceRetrievalManager(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.IServiceRetrievalManager)">
            <summary>
                If set then will be used to create stubs
            </summary>
            <param name="serviceRetrievalManager">
                The service retrieval manager
            </param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.GetMaintainables(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
                The get maintainables.
            </summary>
            <param name="query">
                The query.
            </param>
            <returns>
                The <see cref="T:System.Collections.Generic.ISet`1" />.
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxNotImplementedException">
                <paramref name="query" /> is not for a maintainable.
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResolveReferences(Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
                The resolve references.
            </summary>
            <param name="beans0">
                The beans 0.
            </param>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1">
            <summary>
            ResultExtractor class
            </summary>
            <typeparam name="T">The maintainable object</typeparam>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1._maintainableUtil">
            <summary>
            The _maintainable utility
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1._serviceRetrievalManager">
            <summary>
                The service retrieval manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1" /> class.
                Default constructor
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1.#ctor(Org.Sdmxsource.Sdmx.Util.Objects.MaintainableUtil{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1" /> class.
            </summary>
            <param name="maintainableUtil">The maintainable</param>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1.ServiceRetrieval">
            <summary>
                Gets or sets the service retrieval manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemoryRetrievalManager.ResultExtractor`1.FilterResults(System.Collections.Generic.ISet{`0},System.Boolean,System.Boolean)">
            <summary>
            Filter Results
            </summary>
            <param name="results">The results set</param>
            <param name="returnLatest">If true then the latest versions of the structures that match the query will be returned.  If version information
            is supplied
            then it will be ignored</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <returns>
            The set of maintainable objects
            </returns>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager">
            <summary>
            In Memory Sdmx Super Object Retrieval Manager.
            </summary>
            <seealso cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager" />
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager._superObjects">
            <summary>
            The _super objects
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.ISuperObjects)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager" /> class.
            </summary>
            <param name="superObjects">The super objects.</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Builder.ISuperObjectsBuilder,Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager" /> class.
            </summary>
            <param name="superObjectsBuilder">The super object builder.</param>
            <param name="sdmxObjects">The sdmx objects.</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetCategorySchemeSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the category scheme super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.CategoryScheme.ICategorySchemeSuperObject" /></returns>
            <exception cref="T:System.ArgumentException">Ref is null
            or
            Ref is missing AgencyId
            or
            Ref is missing Id</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetCategorySchemeSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the category scheme super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" /></returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetCodelistSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the codelist super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.Codelist.ICodelistSuperObject" /></returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetCodelistSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the codelist super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetConceptSchemeSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the concept scheme super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.ConceptScheme.IConceptSchemeSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetConceptSchemeSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the concept scheme super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetDataflowSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the dataflow super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.DataStructure.IDataflowSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetDataflowSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the dataflow super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetDataStructureSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the data structure super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.DataStructure.IDataStructureSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetDataStructureSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the data structure super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetHierarchicCodeListSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the hierarchic code list super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.Codelist.IHierarchicalCodelistSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetHierarchicCodeListSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the hierarchic code list super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetProvisionAgreementSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the provision agreement super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.Registry.IProvisionAgreementSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.InMemorySdmxSuperObjectRetrievalManager.GetProvisionAgreementSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the provision agreement super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager">
            <summary>
            Wraps a <see cref="T:Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Mutable.ISdmxMutableObjectRetrievalManager"/>
            </summary>
            <seealso cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager" />
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager._mutableObjectRetrievalManager">
            <summary>
                The _mutable object retrieval manager.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager._mutableStructureSearchManager">
            <summary>
            The mutable structure search manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Mutable.ISdmxMutableObjectRetrievalManager,Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.Mutable.IMutableStructureSearchManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager" /> class.
            </summary>
            <param name="mutableObjectRetrievalManager">The mutable object retrieval manager.</param>
            <param name="mutableStructureSearchManager">The mutable structure search manager (Optional). If set this will be used *only* for <see cref="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetMaintainables(Org.Sdmxsource.Sdmx.Api.Model.Query.IRestStructureQuery)"/> (REST Query)</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetAgencySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns AgencySchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all AgencySchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetAttachmentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns AttachmentConstraintBeans that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetCategorisationObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns CategorisationObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetCategorySchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns CategorySchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CategorySchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetCodelistObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns CodelistObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetConceptSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ConceptSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ConceptSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetContentConstraints(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ContentConstraintObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all CodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetDataConsumerSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns DataConsumerSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataConsumerSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetDataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns DataflowObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataflowObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetDataProviderSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean)">
            <summary>
                Returns DataProviderSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataProviderSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetDataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns DataStructureObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all DataStructureObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetHierarchicCodeListObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns HierarchicalCodelistObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all HierarchicalCodelistObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetMetadataflowObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns MetadataFlowObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all MetadataFlowObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetMetadataStructureObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns MetadataStructureObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all MetadataStructureObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetOrganisationUnitSchemeObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns OrganisationUnitSchemeObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all OrganisationUnitSchemeObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetProcessObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ProcessObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ProcessObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetProvisionAgreementObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ProvisionAgreementObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ProvisionAgreementObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetReportingTaxonomyObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns ReportingTaxonomyObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all ReportingTaxonomyObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetStructureSetObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
                Returns StructureSetObjects that match the parameters in the ref object.  If the ref object is null or
                has no attributes set, then this will be interpreted as a search for all StructureSetObjects
            </summary>
            <param name="xref">
                The reference object defining the search parameters, can be empty or null
            </param>
            <param name="returnLatest">
                If true then the latest versions of the structures that match the query will be returned.  If version information
                is supplied
                then it will be ignored
            </param>
            <param name="returnStub">
                If true then a stub object will be returned
            </param>
            <returns>
                Set of sdmxObjects that match the search criteria
            </returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.MutableWrapperSdmxObjectRetrievalManager.GetMaintainables(Org.Sdmxsource.Sdmx.Api.Model.Query.IRestStructureQuery)">
            <summary>
            Get all the maintainable that match the <paramref name="restquery" />
            </summary>
            <param name="restquery">The REST structure query.</param>
            <returns>
            the maintainable that match the <paramref name="restquery" />
            </returns>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager">
            <summary>
                The rest SDMX object retrieval manager.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager._restQueryBuilder">
            <summary>
                The structure query builder
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager._restUrl">
            <summary>
                The log.
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager._rdlFactory">
            <summary>
                The data location factory
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager._structureParsingManager">
            <summary>
                The structure parsing manager
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager.#ctor(System.String,Org.Sdmxsource.Sdmx.Api.Builder.IStructureQueryBuilder{System.String},Org.Sdmxsource.Sdmx.Api.Manager.Parse.IStructureParsingManager,Org.Sdmxsource.Sdmx.Api.Factory.IReadableDataLocationFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager" /> class.
            </summary>
            <param name="restUrl">The REST URL string.</param>
            <param name="restQueryBuilder">The rest query builder.</param>
            <param name="structureParsingManager">The structure parsing manager.</param>
            <param name="rdlFactory">The readable-data location factory.</param>
            <exception cref="T:System.ArgumentNullException">
                restQueryBuilder
                or
                <paramref name="structureParsingManager" />
            </exception>
        </member>
        <member name="P:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager.RestUrl">
            <summary>
            Gets the rest URL.
            </summary>
            <value>The rest URL.</value>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager.GetMaintainableObjects``1(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject,System.Boolean,System.Boolean)">
            <summary>
            Gets a set of all MaintainableObjects of type T that match the reference parameters in the IMaintainableRefObject
            argument.
            An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The maintainable type</typeparam>
            <param name="maintainableReference">Contains the identifiers of the structures to returns, can include wildcarded values (null indicates a wildcard).</param>
            <param name="returnStub">If true then a stub object will be returned</param>
            <param name="returnLatest">If true then the latest version is returned, regardless of whether version information is supplied</param>
            <returns>The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .</returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">- If the structure document references structures that can not be resolved</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSemmanticException">- If the structure message is syntactically correct, but the content is illegal</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">- If the structure message is syntactically invalid</exception>
            <exception cref="T:System.InvalidCastException">An element in the sequence cannot be cast to type .</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager.GetMaintainableObjects``1(System.Type,Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
                Gets a set of all MaintainableObjects of type T that match the reference parameters in the IMaintainableRefObject
                argument.
                An empty Set will be returned if there are no matches to the query
            </summary>
            <typeparam name="T">The type of the maintainable. It is constraint  </typeparam>
            <param name="maintainableInterface">The maintainable interface.</param>
            <param name="maintainableReference">
                Contains the identifiers of the structures to returns, can include wild-carded
                values (null indicates a wild-card).
            </param>
            <returns>
                The set of <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.Base.IMaintainableObject" /> .
            </returns>
            <remarks>
                This method exists only for compatibility reasons with Java implementation of this interface which uses raw
                types and unchecked generics.
            </remarks>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                - If the structure document references structures that can not be resolved
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSemmanticException">
                - If the structure message is syntactically correct, but the content is illegal
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">
                - If the structure message is syntactically invalid
            </exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager.GetMaintainables(Org.Sdmxsource.Sdmx.Api.Model.Query.IRestStructureQuery)">
            <summary>
            Get all the maintainable that match the <paramref name="restquery" />
            </summary>
            <param name="restquery">The REST structure query.</param>
            <returns>the maintainable that match the <paramref name="restquery" /></returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">- If the structure message is syntactically invalid</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">- If the structure document references structures that can not be resolved</exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSemmanticException">- If the structure message is syntactically correct, but the content is illegal</exception>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.RESTSdmxObjectRetrievalManager.GetSdmxObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference,Org.Sdmxsource.Sdmx.Api.Model.ResolveCrossReferences)">
            <summary>
            Gets the SDMX objects.
            </summary>
            <param name="structureReference">The structure reference.</param>
            <param name="resolveCrossReferences">either 'do not resolve', 'resolve all' or 'resolve all excluding agencies'. If not
            set to 'do not resolve' then all the structures that are referenced by the resulting structures are also returned
            (and also their children).  This will be equivalent to descendants for a <c>RESTful</c> query..</param>
            <returns>
            Returns a <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.Objects.ISdmxObjects" /> container containing all the Maintainable Objects that match the query
            parameters as defined by the <paramref name="structureReference" />.
            </returns>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSyntaxException">
                - If the structure message is syntactically invalid
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.CrossReferenceException">
                - If the structure document references structures that can not be resolved
            </exception>
            <exception cref="T:Org.Sdmxsource.Sdmx.Api.Exception.SdmxSemmanticException">
                - If the structure message is syntactically correct, but the content is illegal
            </exception>
        </member>
        <member name="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager">
            <summary>
            Sdmx Super Object Retrieval Manager
            </summary>
            <seealso cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.BaseSdmxObjectRetrievalManager" />
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager._sdmxObjectRetrievalManager">
            <summary>
            The sdmx object retrieval manager
            </summary>
        </member>
        <member name="F:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager._superObjectsBuilder">
            <summary>
            The super object builder
            </summary>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.#ctor(Org.Sdmxsource.Sdmx.Api.Manager.Retrieval.ISdmxObjectRetrievalManager,Org.Sdmxsource.Sdmx.Api.Builder.ISuperObjectsBuilder)">
            <summary>
            Initializes a new instance of the <see cref="T:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager" /> class.
            </summary>
            <param name="sdmxObjectRetrievalManager">The sdmx object retrieval manager.</param>
            <param name="superObjectsBuilder">The super object builder.</param>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetCategorySchemeSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the category scheme super object.
            </summary>
            <param name="maintainableRef">The maintainableRef.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.CategoryScheme.ICategorisationSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetCategorySchemeSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the category scheme super objects.
            </summary>
            <param name="x">The maintainable Reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetCodelistSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the codelist super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.Codelist.ICodelistSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetCodelistSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the codelist super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetConceptSchemeSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the concept scheme super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.ConceptScheme.IConceptSchemeSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetConceptSchemeSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the concept scheme super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetDataflowSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the dataflow super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.DataStructure.IDataflowSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetDataflowSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the dataflow super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetDataStructureSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the data structure super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.DataStructure.IDataStructureSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetDataStructureSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the data structure super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetHierarchicCodeListSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the hierarchic code list super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.Codelist.IHierarchicalCodelistSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetHierarchicCodeListSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the hierarchic code list super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetProvisionAgreementSuperObject(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the provision agreement super object.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.Registry.IProvisionAgreementSuperObject" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetProvisionAgreementSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IMaintainableRefObject)">
            <summary>
            Gets the provision agreement super objects.
            </summary>
            <param name="maintainableRef">The maintainable reference.</param>
            <returns>The <see cref="T:System.Collections.Generic.ISet`1" />.</returns>
        </member>
        <member name="M:Org.Sdmxsource.Sdmx.StructureRetrieval.Manager.SdmxSuperObjectRetrievalManager.GetSuperObjects(Org.Sdmxsource.Sdmx.Api.Model.Objects.Reference.IStructureReference)">
            <summary>
            Gets the super objects.
            </summary>
            <param name="structureReference">The s reference.</param>
            <returns>The <see cref="T:Org.Sdmxsource.Sdmx.Api.Model.SuperObjects.ISuperObjects" />.</returns>
            <exception cref="T:System.InvalidOperationException">SdmxObjectBuilder not set at the constructor</exception>
        </member>
    </members>
</doc>
