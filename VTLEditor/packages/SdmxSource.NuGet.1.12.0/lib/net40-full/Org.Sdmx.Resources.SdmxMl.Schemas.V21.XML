<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Org.Sdmx.Resources.SdmxMl.Schemas.V21</name>
    </assembly>
    <members>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ActionTypeConstants">
            <summary>
                The action type constants. This class contains ActionType constants to be used by other software since the
                auto-generated code doesn't.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ActionTypeConstants.Append">
            <summary>
                The append.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ActionTypeConstants.Delete">
            <summary>
                The delete.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ActionTypeConstants.Information">
            <summary>
                The information.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ActionTypeConstants.Replace">
            <summary>
                The replace.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintTypeCodeTypeConstants">
            <summary>
                The content constraint type code type constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintTypeCodeTypeConstants.Actual">
            <summary>
                The actual.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintTypeCodeTypeConstants.Allowed">
            <summary>
                The allowed.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataType" /> constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Alpha">
            <summary>
                The alpha.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.AlphaNumeric">
            <summary>
                The alpha numeric.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.AttachmentConstraintReference">
            <summary>
                The attachment constraint reference.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.BasicTimePeriod">
            <summary>
                The basic time period.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.BigInteger">
            <summary>
                The big integer.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Boolean">
            <summary>
                The boolean.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Count">
            <summary>
                The count.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.DataSetReference">
            <summary>
                The data set reference.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.DateTime">
            <summary>
                The date time.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Day">
            <summary>
                The day.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Decimal">
            <summary>
                The decimal.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Double">
            <summary>
                The double.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Duration">
            <summary>
                The duration.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ExclusiveValueRange">
            <summary>
                The exclusive value range.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Float">
            <summary>
                The float.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.GregorianDay">
            <summary>
                The gregorian day.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.GregorianTimePeriod">
            <summary>
                The gregorian time period.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.GregorianYear">
            <summary>
                The gregorian year.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.GregorianYearMonth">
            <summary>
                The gregorian year month.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.IdentifiableReference">
            <summary>
                The identifiable reference.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.InclusiveValueRange">
            <summary>
                The inclusive value range.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Incremental">
            <summary>
                The incremental.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Integer">
            <summary>
                The integer.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.KeyValues">
            <summary>
                The key values.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Long">
            <summary>
                The long.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Month">
            <summary>
                The month.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.MonthDay">
            <summary>
                The month day.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Numeric">
            <summary>
                The numeric.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ObservationalTimePeriod">
            <summary>
                The observational time period.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingDay">
            <summary>
                The reporting day.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingMonth">
            <summary>
                The reporting month.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingQuarter">
            <summary>
                The reporting quarter.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingSemester">
            <summary>
                The reporting semester.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingTimePeriod">
            <summary>
                The reporting time period.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingTrimester">
            <summary>
                The reporting trimester.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingWeek">
            <summary>
                The reporting week.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.ReportingYear">
            <summary>
                The reporting year.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Short">
            <summary>
                The short.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.StandardTimePeriod">
            <summary>
                The standard time period.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.String">
            <summary>
                The string.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.Time">
            <summary>
                The time.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.TimeRange">
            <summary>
                The time range.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.URI">
            <summary>
                The uri.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataTypeConstants.XHTML">
            <summary>
                The XHTML.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericMetadataStructureType">
            <summary>
                the generic metadata structure type
            </summary>
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureType" />
            <summary>
            <para>
            GenericMetadataStructureType defines the structural information for a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericMetadataStructureType.MetadataStructureReferenceType">
            <summary>
                Gets the type of the metadata structure reference.
            </summary>
            <value>
                The type of the metadata structure reference.
            </value>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericMetadataStructureType.#ctor">
            <summary>
            <para>
            GenericMetadataStructureType defines the structural information for a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTarget">
            <summary>
                TODO: Update summary.
            </summary>
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTarget.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistType" /> constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Base">
            <summary>
                The base.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Categoryscheme">
            <summary>
                The category scheme.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Codelist">
            <summary>
                The codelist.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Conceptscheme">
            <summary>
                The concept scheme.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Datastructure">
            <summary>
                The data structure.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Mapping">
            <summary>
                The mapping.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Metadatastructure">
            <summary>
                The metadata structure.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Process">
            <summary>
                The process.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistTypeConstants.Registry">
            <summary>
                The registry.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants">
            <summary>
                The object type code list type constants class
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Agency">
            <summary>
                The agency
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.AgencyScheme">
            <summary>
                The agency scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Any">
            <summary>
                Any type
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.AttachmentConstraint">
            <summary>
                The attachment constraint
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Attribute">
            <summary>
                The attribute
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.AttributeDescriptor">
            <summary>
                The attribute descriptor
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Categorisation">
            <summary>
                The categorisation
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Category">
            <summary>
                The category
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.CategoryScheme">
            <summary>
                The category scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.CategorySchemeMap">
            <summary>
                The category scheme map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Code">
            <summary>
                The code
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Codelist">
            <summary>
                The code list
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.CodelistMap">
            <summary>
                The codelist map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.CodeMap">
            <summary>
                The code map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ComponentMap">
            <summary>
                The component map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Concept">
            <summary>
                The concept
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ConceptMap">
            <summary>
                The concept map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ConceptScheme">
            <summary>
                The concept scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ConceptSchemeMap">
            <summary>
                The concept scheme map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Constraint">
            <summary>
                The constraint
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ConstraintTarget">
            <summary>
                The constraint target
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ContentConstraint">
            <summary>
                The content constraint
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DataConsumer">
            <summary>
                The data consumer
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DataConsumerScheme">
            <summary>
                The data consumer scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Dataflow">
            <summary>
                The data flow
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DataProvider">
            <summary>
                The data provider
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DataProviderScheme">
            <summary>
                The data provider scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DataSetTarget">
            <summary>
                The data set target
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DataStructure">
            <summary>
                The data structure
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Dimension">
            <summary>
                The dimension
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DimensionDescriptor">
            <summary>
                The dimension descriptor
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.DimensionDescriptorValuesTarget">
            <summary>
                The dimension descriptor values target
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.GroupDimensionDescriptor">
            <summary>
                The group dimension descriptor
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.HierarchicalCode">
            <summary>
                The hierarchical code
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.HierarchicalCodelist">
            <summary>
                The hierarchical codelist
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Hierarchy">
            <summary>
                The hierarchy
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.HybridCodelistMap">
            <summary>
                The hybrid codelist map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.HybridCodeMap">
            <summary>
                The hybrid code map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.IdentifiableObjectTarget">
            <summary>
                The identifiable object target
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Level">
            <summary>
                The level
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.MeasureDescriptor">
            <summary>
                The measure descriptor
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.MeasureDimension">
            <summary>
                The measure dimension
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.MetadataAttribute">
            <summary>
                The metadata attribute
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Metadataflow">
            <summary>
                The metadataflow
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.MetadataSet">
            <summary>
                The metadata set
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.MetadataStructure">
            <summary>
                The metadata structure
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.MetadataTarget">
            <summary>
                The metadata target
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Organisation">
            <summary>
                The organisation
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.OrganisationMap">
            <summary>
                The organisation map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.OrganisationScheme">
            <summary>
                The organisation scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.OrganisationSchemeMap">
            <summary>
                The organisation scheme map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.OrganisationUnit">
            <summary>
                The organisation unit
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.OrganisationUnitScheme">
            <summary>
                The organisation unit scheme
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.PrimaryMeasure">
            <summary>
                The primary measure
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Process">
            <summary>
                The process
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ProcessStep">
            <summary>
                The process step
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ProvisionAgreement">
            <summary>
                The provision agreement
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportingCategory">
            <summary>
                The reporting category
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportingCategoryMap">
            <summary>
                The reporting category map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportingTaxonomy">
            <summary>
                The reporting taxonomy
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportingTaxonomyMap">
            <summary>
                The reporting taxonomy map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportingYearStartDay">
            <summary>
                The reporting year start day
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportPeriodTarget">
            <summary>
                The report period target
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.ReportStructure">
            <summary>
                The report structure
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.StructureMap">
            <summary>
                The structure map
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.StructureSet">
            <summary>
                The structure set
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.TimeDimension">
            <summary>
                The time dimension
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistTypeConstants.Transition">
            <summary>
                The transition
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType">
            <summary>
                <para>
                    ReferenceType is an abstract base type. It is used as the basis for all references, to all for a top level
                    generic object reference that can be substituted with an explicit reference to any object. Any reference can
                    consist of a Ref (which contains all required reference fields separately) and/or a URN. These must result in
                    the identification of the same object. Note that the Ref and URN elements are local and unqualified in order to
                    allow for refinement of this structure outside of the namespace. This allows any reference to further refined
                    by a different namespace. For example, a metadata structure definition specific metadata set might wish to
                    restrict the URN to only allow for a value from an enumerated list. The general URN structure, for the purpose
                    of mapping the reference fields is as follows:
                    urn:sdmx:org.package-name.class-name=agency-id:(maintainable-parent-object-id[maintainable-parent-object-version].)?(container-object-id.)?object-id([object-version])?.
                </para>
                <para>
                    Regular expression: ((@Ref, URN?)|URN)
                </para>
            </summary>
            <summary>
            <para>
            ReferenceType is an abstract base type. It is used as the basis for all references, to all for a top level generic object reference that can be substituted with an explicit reference to any object. Any reference can consist of a Ref (which contains all required reference fields separately) and/or a URN. These must result in the identification of the same object. Note that the Ref and URN elements are local and unqualified in order to allow for refinement of this structure outside of the namespace. This allows any reference to further refined by a different namespace. For example, a metadata structure definition specific metadata set might wish to restrict the URN to only allow for a value from an enumerated list. The general URN structure, for the purpose of mapping the reference fields is as follows: urn:sdmx:org.package-name.class-name=agency-id:(maintainable-parent-object-id[maintainable-parent-object-version].)?(container-object-id.)?object-id([object-version])?.
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType._referenceName">
            <summary>
                The reference element name
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType.GetTypedRef``1">
            <summary>
                <para>
                    Gets the reference of type <typeparamref name="T" />. Ref is used to provide a complete set of reference
                    fields. Derived reference types will restrict the RefType so that the content of the Ref element requires
                    exactly what is needed for a complete reference.
                </para>
                <para>
                    Occurrence: required
                </para>
                <para>
                    Setter: Appends
                </para>
                <para>
                    Regular expression: ((@Ref, URN?)|URN)
                </para>
            </summary>
            <typeparam name="T">
                The type of <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType" /> to return
            </typeparam>
            <returns>
                The reference of type <typeparamref name="T" />
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType.SetTypedRef``1(``0)">
            <summary>
                <para>
                    Set the Reference. Ref is used to provide a complete set of reference fields. Derived reference types will
                    restrict the RefType so that the content of the Ref element requires exactly what is needed for a complete
                    reference.
                </para>
                <para>
                    Occurrence: required
                </para>
                <para>
                    Setter: Appends
                </para>
                <para>
                    Regular expression: ((@Ref, URN?)|URN)
                </para>
            </summary>
            <typeparam name="T">
                The type of <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType" />
            </typeparam>
            <param name="value">
                The value.
            </param>
            <returns>
                The <paramref name="value" />
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType.#ctor">
            <summary>
            <para>
            ReferenceType is an abstract base type. It is used as the basis for all references, to all for a top level generic object reference that can be substituted with an explicit reference to any object. Any reference can consist of a Ref (which contains all required reference fields separately) and/or a URN. These must result in the identification of the same object. Note that the Ref and URN elements are local and unqualified in order to allow for refinement of this structure outside of the namespace. This allows any reference to further refined by a different namespace. For example, a metadata structure definition specific metadata set might wish to restrict the URN to only allow for a value from an enumerated list. The general URN structure, for the purpose of mapping the reference fields is as follows: urn:sdmx:org.package-name.class-name=agency-id:(maintainable-parent-object-id[maintainable-parent-object-version].)?(container-object-id.)?object-id([object-version])?.
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType.Ref">
            <summary>
            <para>
            Ref is used to provide a complete set of reference fields. Derived reference types will restrict the RefType so that the content of the Ref element requires exactly what is needed for a complete reference.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferenceType.URN">
            <summary>
            <para>
            URN is used to hold the URN of the referenced object. This must be the same URN that would be constructed from the individual fields in the Ref element.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType">
            <summary>
                The region type class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            RegionType is an abstract type which defines a generic constraint region. This type can be refined to define regions for data or metadata sets. A region is defined by a collection of key values - each of which a collection of values for a component which disambiguates data or metadata (i.e. dimensions or the target objects of a metadata target). For each region, as collection of attribute values can be provided. Taken together, the key values and attributes serve to identify or describe a subset of a data or metadata set. Finally, the region can flagged as being included or excluded, although this flag only makes sense when the region is used in a particular context.
            </para>
            <para>
            Regular expression: (KeyValue*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType._attributName">
            <summary>
                <para>
                    Attributes contains a reference to an attribute component (data or metadata) and provides a collection of
                    values for the referenced attribute. This serves to state that for the key which defines the region, the
                    attributes that are specified here have or do not have (depending to the include attribute of the value set)
                    the values provided. It is possible to provide and attribute reference without specifying values, for the
                    purpose of stating the attribute is absent (include = false) or present with an unbounded set of values. As
                    opposed to key components, which are assumed to be wild carded if absent, no assumptions are made about the
                    absence of an attribute. Only attributes which are explicitly stated to be present or absent from the region
                    will be know. All unstated attributes for the set cannot be assumed to absent or present.
                </para>
                <para>
                    Occurrence: optional, repeating
                </para>
                <para>
                    Regular expression: (KeyValue*, Attribute*)
                </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType._keyValue">
            <summary>
                <para>
                    KeyValue contains a reference to a component which disambiguates the data or metadata (i.e. a dimension or
                    target object) and provides a collection of values for the component. The collection of values can be flagged
                    as being inclusive or exclusive to the region being defined. Any key component that is not included is assumed
                    to be wild carded, which is to say that the cube includes all possible values for the un-referenced key
                    components. Further, this assumption applies to the values of the components as well. The values for any given
                    component can only be subset in the region by explicit inclusion or exclusion. For example, a dimension X
                    which has the possible values of 1, 2, 3 is assumed to have all of these values if a key value is not defined.
                    If a key value is defined with an inclusion attribute of true and the values of 1 and 2, the only the values of
                    1 and 2 for dimension X are included in the definition of the region. If the key value is defined with an
                    inclusion attribute of false and the value of 1, then the values of 2 and 3 for dimension X are included in the
                    definition of the region. Note that any given key component must only be referenced once in the region.
                </para>
                <para>
                    Occurrence: optional, repeating
                </para>
                <para>
                    Regular expression: (KeyValue*, Attribute*)
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType.GetTypedAttribute``1">
            <summary>
                <para>
                    Attributes contains a reference to an attribute component (data or metadata) and provides a collection of
                    values for the referenced attribute. This serves to state that for the key which defines the region, the
                    attributes that are specified here have or do not have (depending to the include attribute of the value set)
                    the values provided. It is possible to provide and attribute reference without specifying values, for the
                    purpose of stating the attribute is absent (include = false) or present with an unbounded set of values. As
                    opposed to key components, which are assumed to be wild carded if absent, no assumptions are made about the
                    absence of an attribute. Only attributes which are explicitly stated to be present or absent from the region
                    will be know. All unstated attributes for the set cannot be assumed to absent or present.
                </para>
                <para>
                    Occurrence: optional, repeating
                </para>
                <para>
                    Regular expression: (KeyValue*, Attribute*)
                </para>
            </summary>
            <typeparam name="T">
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType" /> based class.
            </typeparam>
            <returns>
                The Attributes.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType.GetTypedKeyValue``1">
            <summary>
                <para>
                    KeyValue contains a reference to a component which disambiguates the data or metadata (i.e. a dimension or
                    target object) and provides a collection of values for the component. The collection of values can be flagged
                    as being inclusive or exclusive to the region being defined. Any key component that is not included is assumed
                    to be wild carded, which is to say that the cube includes all possible values for the un-referenced key
                    components. Further, this assumption applies to the values of the components as well. The values for any given
                    component can only be subset in the region by explicit inclusion or exclusion. For example, a dimension X
                    which has the possible values of 1, 2, 3 is assumed to have all of these values if a key value is not defined.
                    If a key value is defined with an inclusion attribute of true and the values of 1 and 2, the only the values of
                    1 and 2 for dimension X are included in the definition of the region. If the key value is defined with an
                    inclusion attribute of false and the value of 1, then the values of 2 and 3 for dimension X are included in the
                    definition of the region. Note that any given key component must only be referenced once in the region.
                </para>
                <para>
                    Occurrence: optional, repeating
                </para>
                <para>
                    Regular expression: (KeyValue*, Attribute*)
                </para>
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType" /> based class.</typeparam>
            <returns>
                The KeyValues
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType.#ctor">
            <summary>
            <para>
            RegionType is an abstract type which defines a generic constraint region. This type can be refined to define regions for data or metadata sets. A region is defined by a collection of key values - each of which a collection of values for a component which disambiguates data or metadata (i.e. dimensions or the target objects of a metadata target). For each region, as collection of attribute values can be provided. Taken together, the key values and attributes serve to identify or describe a subset of a data or metadata set. Finally, the region can flagged as being included or excluded, although this flag only makes sense when the region is used in a particular context.
            </para>
            <para>
            Regular expression: (KeyValue*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType.KeyValue">
            <summary>
            <para>
            KeyValue contains a reference to a component which disambiguates the data or metadata (i.e. a dimension or target object) and provides a collection of values for the component. The collection of values can be flagged as being inclusive or exclusive to the region being defined. Any key component that is not included is assumed to be wild carded, which is to say that the cube includes all possible values for the un-referenced key components. Further, this assumption applies to the values of the components as well. The values for any given component can only be sub-setted in the region by explicit inclusion or exclusion. For example, a dimension X which has the possible values of 1, 2, 3 is assumed to have all of these values if a key value is not defined. If a key value is defined with an inclusion attribute of true and the values of 1 and 2, the only the values of 1 and 2 for dimension X are included in the definition of the region. If the key value is defined with an inclusion attribute of false and the value of 1, then the values of 2 and 3 for dimension X are included in the definition of the region. Note that any given key component must only be referenced once in the region.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyValue*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType.Attribute">
            <summary>
            <para>
            Attributes contains a reference to an attribute component (data or metadata) and provides a collection of values for the referenced attribute. This serves to state that for the key which defines the region, the attributes that are specified here have or do not have (depending to the include attribute of the value set) the values provided. It is possible to provide and attribute reference without specifying values, for the purpose of stating the attribute is absent (include = false) or present with an unbounded set of values. As opposed to key components, which are assumed to be wild carded if absent, no assumptions are made about the absence of an attribute. Only attributes which are explicitly stated to be present or absent from the region will be know. All unstated attributes for the set cannot be assumed to absent or present.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (KeyValue*, Attribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RegionType.include">
            <summary>
            <para>
            The include attribute indicates that the region is to be included or excluded within the context in which it is defined. For example, if the regions is defined as part of a content constraint, the exclude flag would mean the data identified by the region is not present.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRegionType">
            <summary>
                TODO: Update summary.
            </summary>
            <summary>
            <para>
            MetadataTargetRegionType defines the structure of a metadata target region. A metadata target region must define the report structure and the metadata target from that structure on which the region is based. This type is based on the abstract RegionType and simply refines the key and attribute values to conform with what is applicable for target objects and metadata attributes, respectively. See the documentation of the base type for more details on how a region is defined.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRegionType.MetadataTarget">
            <summary>
                Gets or sets the metadata target.
            </summary>
            <value>
                The metadata target.
            </value>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRegionType.Report">
            <summary>
                Gets or sets the report.
            </summary>
            <value>
                The report.
            </value>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRegionType.#ctor">
            <summary>
            <para>
            MetadataTargetRegionType defines the structure of a metadata target region. A metadata target region must define the report structure and the metadata target from that structure on which the region is based. This type is based on the abstract RegionType and simply refines the key and attribute values to conform with what is applicable for target objects and metadata attributes, respectively. See the documentation of the base type for more details on how a region is defined.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.NestedIDType">
            <summary>
            <para>
            NestedIDType is the least restrictive form of an identifier used throughout all SDMX-ML messages. It allows for a hierarchical identifier, with each portion separated by the '.' character. For the identifier portions, valid characters include A-Z, a-z, @, 0-9, _, -, $.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TwoLevelIDType">
            <summary>
            <para>
            TwoLevelIDType defines an identifier with exactly two levels.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IDType">
            <summary>
            <para>
            IDType provides a type which is used for restricting the characters in codes and IDs throughout all SDMX-ML messages. Valid characters include A-Z, a-z, @, 0-9, _, -, $.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.NCNameIDType">
            <summary>
            <para>
            NCNameIDType restricts the IDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.NestedNCNameIDType">
            <summary>
            <para>
            NestedNCNameIDType restricts the NestedIDType, so that the id may be used to generate valid XML components. IDs created from this type conform to the W3C XML Schema NCNAME type, and therefore can be used as element or attribute names.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SingleNCNameIDType">
            <summary>
            <para>
            SingleNCNameIDType restricts the NestedNCNameIDType to allow only one level. Note that this is the same pattern as the NCNameIDType, but can be used when the base type to be restricted is a nested NCNameIDType (where as the NCNameIDType could only restrict the IDType).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.VersionType">
            <summary>
            <para>
            VersionType is used to communicate version information. The format is restricted to allow for simple incrementing and sorting of version number. The version consists of an unlimited set of numeric components, separated by the '.' character. When processing version, each numeric component (the number preceding and following any '.' character) should be parsed as an integer. Thus, a version of 1.3 and 1.03 would be equivalent, as both the '3' component and the '03' component would parse to an integer value of 3.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.VersionQueryType">
            <summary>
            <para>
            VersionQueryType combines the VersionType and LateBoundVersionType to allow one to query for either a specific version of an object, or the latest version by specifying the '*' value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LateBoundVersionType">
            <summary>
            <para>
            LateBoundVersionType is a single value code list, used to include the '*' character - indicating that the latest version of an object is required.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType">
            <summary>
            <para>
            RefBaseType is an abstract base type the defines the basis for any set of complete reference fields. This should be refined by derived types so that only the necessary fields are available and required as necessary. This can be used for both full and local references (when some of the values are implied from another context). A local reference is indicated with the local attribute. The values in this type correspond directly to the components of the URN structure, and thus can be used to compose a URN when the local attribute value is false. As this is the case, any reference components which are not part of the URN structure should not be present in the derived types.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.#ctor">
            <summary>
            <para>
            RefBaseType is an abstract base type the defines the basis for any set of complete reference fields. This should be refined by derived types so that only the necessary fields are available and required as necessary. This can be used for both full and local references (when some of the values are implied from another context). A local reference is indicated with the local attribute. The values in this type correspond directly to the components of the URN structure, and thus can be used to compose a URN when the local attribute value is false. As this is the case, any reference components which are not part of the URN structure should not be present in the derived types.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.agencyID">
            <summary>
            <para>
            The agencyID attribute identifies the maintenance agency for the object being referenced (agency-id in the URN structure). This is optional to allow for local references (where the other reference fields are inferred from another context), but all complete references will require this.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.maintainableParentID">
            <summary>
            <para>
            The maintainableParentID attribute identifies the maintainable object in which the referenced object is defined, if applicable (maintainable-parent-object-id in the URN structure). This is only used in references where the referenced object is not itself maintainable.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.maintainableParentVersion">
            <summary>
            <para>
            The maintainableParentVersion attribute identifies the version of the maintainable object in which the referenced object is defined (maintainable-parent-object-version in the URN structure). This is only used in references where the referenced object is not itself maintainable. This should only be used when the maintainableParentID is present. If this is available, a default of 1.0 will always apply.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.containerID">
            <summary>
            <para>
            The containerID attribute identifies the object within a maintainable object in which the referenced object is defined (container-object-id in the URN structure). This is only used in references where the referenced object is not contained directly within a maintainable object (e.g. a Component within a ComponentList, within a maintainable Structure). If the container has a fixed identifier, this attribute will not be present.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.id">
            <summary>
            <para>
            The id attribute identifies the object being referenced, and is therefore always required.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.version">
            <summary>
            <para>
            The version attribute identifies the version of the object being reference, if applicable. If this is available, a default value of 1.0 will always apply.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.local">
            <summary>
            <para>
            The local attribute indicates whether this set of reference fields is meant for local referencing, in which case some of the reference fields will be implied from another context. Concrete instances of this class will always fix this value to either true or false, depending on their intended usage. If the value is fixed to true, then the complete set of reference fields will be required and a URN can be fully composed from the values.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.class">
            <summary>
            <para>
            The class attribute indicates the class name of the object being referenced. This attribute allows any reference to be processed generically from this definition. References derived from this should fix the value of this attribute to indicate the type of object that is being referenced, or in the case that a reference which allows specific types of fields, the representation should be sub-setted to the appropriate values.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType.package">
            <summary>
            <para>
            The package attribute indicates the package name for the object being referenced. This attribute allows any reference to be processed generically from this definition. References derived from this should fix the value of this attribute to indicate the type of object that is being referenced, or in the case that a reference which allows specific types of fields, the representation should be sub-setted to the appropriate values.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectReferenceType">
            <summary>
            <para>
            ObjectReferenceType is a generic reference which allows for any object to be referenced. The type of object actually referenced can be determined from the URN or from the class attribute of the full set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectReferenceType.#ctor">
            <summary>
            <para>
            ObjectReferenceType is a generic reference which allows for any object to be referenced. The type of object actually referenced can be determined from the URN or from the class attribute of the full set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectRefType">
            <summary>
            <para>
            ObjectRefType contains a set of reference fields for the purpose of referencing any object. This cannot be a local reference, therefore the agency identifier is required. It is also required that the class and package be supplied for the referenced object such that a complete URN reference can be built from the values provided. Note that this is not capable of fully validating that all necessary fields are supplied for a given object type.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectRefType.#ctor">
            <summary>
            <para>
            ObjectRefType contains a set of reference fields for the purpose of referencing any object. This cannot be a local reference, therefore the agency identifier is required. It is also required that the class and package be supplied for the referenced object such that a complete URN reference can be built from the values provided. Note that this is not capable of fully validating that all necessary fields are supplied for a given object type.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableRefBaseType">
            <summary>
            <para>
            MaintainableRefBaseType is an abstract base type for referencing a maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableRefBaseType.#ctor">
            <summary>
            <para>
            MaintainableRefBaseType is an abstract base type for referencing a maintainable object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableRefType">
            <summary>
            <para>
            MaintainableRefType contains a complete set of reference fields for referencing any maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableRefType.#ctor">
            <summary>
            <para>
            MaintainableRefType contains a complete set of reference fields for referencing any maintainable object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeRefBaseType">
            <summary>
            <para>
            ItemSchemeRefBaseType is an abstract base type for referencing an item scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeRefBaseType.#ctor">
            <summary>
            <para>
            ItemSchemeRefBaseType is an abstract base type for referencing an item scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeRefType">
            <summary>
            <para>
            ItemSchemeRefType contains a complete set of reference fields for referencing any item scheme. The class and package a required so that the reference is explicit as to the exact object being referenced.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeRefType.#ctor">
            <summary>
            <para>
            ItemSchemeRefType contains a complete set of reference fields for referencing any item scheme. The class and package a required so that the reference is explicit as to the exact object being referenced.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageRefBaseType">
            <summary>
            <para>
            StructureOrUsageRefBaseType is an abstract base type for referencing a structure or structure usage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageRefBaseType.#ctor">
            <summary>
            <para>
            StructureOrUsageRefBaseType is an abstract base type for referencing a structure or structure usage.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureRefBaseType">
            <summary>
            <para>
            StructureRefBaseType is an abstract base type for referencing a structure.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureRefBaseType.#ctor">
            <summary>
            <para>
            StructureRefBaseType is an abstract base type for referencing a structure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureRefType">
            <summary>
            <para>
            StructureRefType contains a set of reference fields for referencing any structure.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureRefType.#ctor">
            <summary>
            <para>
            StructureRefType contains a set of reference fields for referencing any structure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageRefBaseType">
            <summary>
            <para>
            StructureUsageRefBaseType is an abstract base type for referencing a structure usage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageRefBaseType.#ctor">
            <summary>
            <para>
            StructureUsageRefBaseType is an abstract base type for referencing a structure usage.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageRefType">
            <summary>
            <para>
            StructureUsageRefType contains a set of reference fields for referencing any structure usage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageRefType.#ctor">
            <summary>
            <para>
            StructureUsageRefType contains a set of reference fields for referencing any structure usage.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ChildObjectRefBaseType">
            <summary>
            <para>
            ChildObjectRefBaseType is an abstract base type for referencing any child object defined directly within a maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ChildObjectRefBaseType.#ctor">
            <summary>
            <para>
            ChildObjectRefBaseType is an abstract base type for referencing any child object defined directly within a maintainable object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContainerChildObjectRefBaseType">
            <summary>
            <para>
            ContainerChildObjectRefBaseType is an abstract base type for referencing any child object within container defined in a maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContainerChildObjectRefBaseType.#ctor">
            <summary>
            <para>
            ContainerChildObjectRefBaseType is an abstract base type for referencing any child object within container defined in a maintainable object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemRefBaseType">
            <summary>
            <para>
            ItemRefBaseType is an abstract base type for referencing an item within an item scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemRefBaseType.#ctor">
            <summary>
            <para>
            ItemRefBaseType is an abstract base type for referencing an item within an item scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentListRefBaseType">
            <summary>
            <para>
            ComponentListRefBaseType is an abstract base type for referencing a component list within a structure.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentListRefBaseType.#ctor">
            <summary>
            <para>
            ComponentListRefBaseType is an abstract base type for referencing a component list within a structure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentRefBaseType">
            <summary>
            <para>
            ComponentRefBaseType is an abstract base type for referencing a component contained in a component list within a structure.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentRefBaseType.#ctor">
            <summary>
            <para>
            ComponentRefBaseType is an abstract base type for referencing a component contained in a component list within a structure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyCodelistRefType">
            <summary>
            <para>
            AnyCodelistRefType is a type for referencing any codelist object (either a codelist or a hierarchical codelist).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyCodelistRefType.#ctor">
            <summary>
            <para>
            AnyCodelistRefType is a type for referencing any codelist object (either a codelist or a hierarchical codelist).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageRefType">
            <summary>
            <para>
            StructureOrUsageRefType is a type for referencing a structure or structure usage.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageRefType.#ctor">
            <summary>
            <para>
            StructureOrUsageRefType is a type for referencing a structure or structure usage.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalIdentifiableRefBaseType">
            <summary>
            <para>
            LocalIdentifiableRefBaseType is an abstract base type which provides a local reference to any identifiable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalIdentifiableRefBaseType.#ctor">
            <summary>
            <para>
            LocalIdentifiableRefBaseType is an abstract base type which provides a local reference to any identifiable object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalItemRefBaseType">
            <summary>
            <para>
            LocalItemRefBaseType is an abstract base type which provides a local reference to a item object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalItemRefBaseType.#ctor">
            <summary>
            <para>
            LocalItemRefBaseType is an abstract base type which provides a local reference to a item object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListRefBaseType">
            <summary>
            <para>
            LocalComponentListRefBaseType is an abstract base type which provides a local reference to a component list object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListRefBaseType.#ctor">
            <summary>
            <para>
            LocalComponentListRefBaseType is an abstract base type which provides a local reference to a component list object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentRefBaseType">
            <summary>
            <para>
            LocalComponentRefBaseType is an abstract base type which provides a local reference to a component object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentRefBaseType.#ctor">
            <summary>
            <para>
            LocalComponentRefBaseType is an abstract base type which provides a local reference to a component object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentRefType">
            <summary>
            <para>
            LocalComponentListComponentRefType provides a local reference to any component object within a specific component list. References for both of these are required as well as an indication of which type of type of component is being referenced via the class attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentRefType.#ctor">
            <summary>
            <para>
            LocalComponentListComponentRefType provides a local reference to any component object within a specific component list. References for both of these are required as well as an indication of which type of type of component is being referenced via the class attribute.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentRefBaseType">
            <summary>
            <para>
            LocalComponentRefBaseType is an abstract base type which provides a local reference to a component object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentRefBaseType.#ctor">
            <summary>
            <para>
            LocalComponentRefBaseType is an abstract base type which provides a local reference to a component object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentRefType">
            <summary>
            <para>
            LocalComponentRefType provides a local reference to any type component object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentRefType.#ctor">
            <summary>
            <para>
            LocalComponentRefType provides a local reference to any type component object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyLocalCodeRefType">
            <summary>
            <para>
            AnyLocalCodeRefType provides a local reference to any code object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyLocalCodeRefType.#ctor">
            <summary>
            <para>
            AnyLocalCodeRefType provides a local reference to any code object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.URNReferenceType">
            <summary>
            <para>
            URNReferenceType is a type referencing any object via its URN. The exact type of object is not specified, although it can be determined from the URN value.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.URNReferenceType.#ctor">
            <summary>
            <para>
            URNReferenceType is a type referencing any object via its URN. The exact type of object is not specified, although it can be determined from the URN value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableReferenceBaseType">
            <summary>
            <para>
            MaintainableReferenceBaseType is an abstract base type for referencing a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableReferenceBaseType.#ctor">
            <summary>
            <para>
            MaintainableReferenceBaseType is an abstract base type for referencing a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableReferenceType">
            <summary>
            <para>
            MaintainableReferenceType is a type for referencing any maintainable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableReferenceType.#ctor">
            <summary>
            <para>
            MaintainableReferenceType is a type for referencing any maintainable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalIdentifiableReferenceType">
            <summary>
            <para>
            LocalIdentifiableReferenceType is an abstract base type for referencing an identifiable object locally, where the maintainable object in which it is defined is referenced in another context..
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalIdentifiableReferenceType.#ctor">
            <summary>
            <para>
            LocalIdentifiableReferenceType is an abstract base type for referencing an identifiable object locally, where the maintainable object in which it is defined is referenced in another context..
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureReferenceBaseType">
            <summary>
            <para>
            StructureReferneceBaseType is a specific type of MaintainableReference that is used for referencing structure definitions. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureReferenceBaseType.#ctor">
            <summary>
            <para>
            StructureReferneceBaseType is a specific type of MaintainableReference that is used for referencing structure definitions. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureReferenceType">
            <summary>
            <para>
            StructureReferenceType is a specific type of MaintainableReference that is used for referencing any structure. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureReferenceType.#ctor">
            <summary>
            <para>
            StructureReferenceType is a specific type of MaintainableReference that is used for referencing any structure. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageReferenceBaseType">
            <summary>
            <para>
            StructureUsageReferenceBaseType is a specific type of MaintainableReference that is used for referencing structure usages. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageReferenceBaseType.#ctor">
            <summary>
            <para>
            StructureUsageReferenceBaseType is a specific type of MaintainableReference that is used for referencing structure usages. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageReferenceType">
            <summary>
            <para>
            StructureUsageReferenceType is a specific type of MaintainableReference that is used for referencing any structure usages. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageReferenceType.#ctor">
            <summary>
            <para>
            StructureUsageReferenceType is a specific type of MaintainableReference that is used for referencing any structure usages. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType">
            <summary>
            <para>
            ItemSchemeReferenceBaseType is a specific type of MaintainableReference that is used for referencing item schemes. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType.#ctor">
            <summary>
            <para>
            ItemSchemeReferenceBaseType is a specific type of MaintainableReference that is used for referencing item schemes. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceType">
            <summary>
            <para>
            ItemSchemeReferenceType is a reference that is used for referencing any type of item scheme. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceType.#ctor">
            <summary>
            <para>
            ItemSchemeReferenceType is a reference that is used for referencing any type of item scheme. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ChildObjectReferenceType">
            <summary>
            <para>
            ChildObjectReferenceType is an abstract base type used for referencing a particular object defined directly within a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, maintainable id (maintainableParentID), maintainable version (maintainableParentVersion), the object id (which can be nested), and optionally the object version (if applicable).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ChildObjectReferenceType.#ctor">
            <summary>
            <para>
            ChildObjectReferenceType is an abstract base type used for referencing a particular object defined directly within a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, maintainable id (maintainableParentID), maintainable version (maintainableParentVersion), the object id (which can be nested), and optionally the object version (if applicable).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContainerChildObjectReferenceType">
            <summary>
            <para>
            ContainerChildObjectReferenceType is an abstract base type used for referencing a particular object defined in a container object within a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, maintainable id (maintainableParentID), maintainable version (maintainableParentVersion), container id (which is optional in order to allow for containers with fixed values to be omitted), container version (if applicable), the object id (which can be nested), and optionally the object version (if applicable).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContainerChildObjectReferenceType.#ctor">
            <summary>
            <para>
            ContainerChildObjectReferenceType is an abstract base type used for referencing a particular object defined in a container object within a maintainable object. It consists of a URN and/or a complete set of reference fields; agency, maintainable id (maintainableParentID), maintainable version (maintainableParentVersion), container id (which is optional in order to allow for containers with fixed values to be omitted), container version (if applicable), the object id (which can be nested), and optionally the object version (if applicable).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemReferenceType">
            <summary>
            <para>
            ItemReferenceType is an abstract base type used for referencing a particular item within an item scheme. Note that this reference also has the ability to reference items contained within other items inside of the item scheme. It consists of a URN and/or a complete set of reference fields; agency, scheme id (maintainableParentID), scheme version (maintainableParentVersion), and item id (which can be nested).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemReferenceType.#ctor">
            <summary>
            <para>
            ItemReferenceType is an abstract base type used for referencing a particular item within an item scheme. Note that this reference also has the ability to reference items contained within other items inside of the item scheme. It consists of a URN and/or a complete set of reference fields; agency, scheme id (maintainableParentID), scheme version (maintainableParentVersion), and item id (which can be nested).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentListReferenceType">
            <summary>
            <para>
            ComponentListReferenceType is an abstract base type used for referencing component lists within a structure. It consists of a URN and/or a complete set of reference fields (structure agency, structure id, structure version, and component list id).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentListReferenceType.#ctor">
            <summary>
            <para>
            ComponentListReferenceType is an abstract base type used for referencing component lists within a structure. It consists of a URN and/or a complete set of reference fields (structure agency, structure id, structure version, and component list id).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentReferenceType">
            <summary>
            <para>
            ComponentReferenceType is an abstract base type used for referencing components within a structure definition. It consists of a URN and/or a complete set of reference fields (structure agency, structure id, structure version, component list id, and component id).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentReferenceType.#ctor">
            <summary>
            <para>
            ComponentReferenceType is an abstract base type used for referencing components within a structure definition. It consists of a URN and/or a complete set of reference fields (structure agency, structure id, structure version, component list id, and component id).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalItemReferenceType">
            <summary>
            <para>
            LocalItemReferenceType is an abstract base type which provides a simple reference to an item where the reference to the item scheme which defines it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalItemReferenceType.#ctor">
            <summary>
            <para>
            LocalItemReferenceType is an abstract base type which provides a simple reference to an item where the reference to the item scheme which defines it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListReferenceType">
            <summary>
            <para>
            LocalComponentListReferenceType is an abstract base type which provides a simple reference to a component list where the reference to the structure which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListReferenceType.#ctor">
            <summary>
            <para>
            LocalComponentListReferenceType is an abstract base type which provides a simple reference to a component list where the reference to the structure which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentReferenceBaseType">
            <summary>
            <para>
            LocalComponentListComponentReferenceBaseType is an abstract base type which provides a simple reference to any type of component in a specific component list where the reference to the structure which defines it are provided in another context, and the component list may or may not be defined in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentReferenceBaseType.#ctor">
            <summary>
            <para>
            LocalComponentListComponentReferenceBaseType is an abstract base type which provides a simple reference to any type of component in a specific component list where the reference to the structure which defines it are provided in another context, and the component list may or may not be defined in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentReferenceType">
            <summary>
            <para>
            LocalComponentListComponentReferenceType provides a simple reference to any type of component in a specific component list where the reference to the structure which defines it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentListComponentReferenceType.#ctor">
            <summary>
            <para>
            LocalComponentListComponentReferenceType provides a simple reference to any type of component in a specific component list where the reference to the structure which defines it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentReferenceBaseType">
            <summary>
            <para>
            LocalComponentReferenceBaseType is an abstract base type which provides a simple reference to a component where the references to the component list which contains it and the structure which defines it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentReferenceBaseType.#ctor">
            <summary>
            <para>
            LocalComponentReferenceBaseType is an abstract base type which provides a simple reference to a component where the references to the component list which contains it and the structure which defines it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentReferenceType">
            <summary>
            <para>
            LocalComponentReferenceType provides a simple reference to any type of component in a component list where the references to the component list and the structure which defines them are provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalComponentReferenceType.#ctor">
            <summary>
            <para>
            LocalComponentReferenceType provides a simple reference to any type of component in a component list where the references to the component list and the structure which defines them are provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageReferenceType">
            <summary>
            <para>
            StructureOrUsageReferenceType is a specific type of a reference for referencing either a structure or a structure usage. It consists of a URN and/or a complete set of reference fields; agency, id and version. If the complete set of reference fields is used, it is required that a class and package be provided so that the type of object referenced is clear.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageReferenceType.#ctor">
            <summary>
            <para>
            StructureOrUsageReferenceType is a specific type of a reference for referencing either a structure or a structure usage. It consists of a URN and/or a complete set of reference fields; agency, id and version. If the complete set of reference fields is used, it is required that a class and package be provided so that the type of object referenced is clear.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorisationReferenceType">
            <summary>
            <para>
            CategorisationReferenceType is a type for referencing a categorisation object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorisationReferenceType.#ctor">
            <summary>
            <para>
            CategorisationReferenceType is a type for referencing a categorisation object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorisationRefType">
            <summary>
            <para>
            CategorisationRefType provides a reference to a categorisation via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorisationRefType.#ctor">
            <summary>
            <para>
            CategorisationRefType provides a reference to a categorisation via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeReferenceType">
            <summary>
            <para>
            CategorySchemeReferenceType is a type for referencing a category scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeReferenceType.#ctor">
            <summary>
            <para>
            CategorySchemeReferenceType is a type for referencing a category scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeRefType">
            <summary>
            <para>
            CategorySchemeRefType provides a reference to a category scheme via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeRefType.#ctor">
            <summary>
            <para>
            CategorySchemeRefType provides a reference to a category scheme via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryReferenceType">
            <summary>
            <para>
            CategoryReferenceType is a type for referencing a category object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryReferenceType.#ctor">
            <summary>
            <para>
            CategoryReferenceType is a type for referencing a category object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryRefType">
            <summary>
            <para>
            CategoryRefType references a category from within a category scheme. Reference fields are required for both the scheme and the item.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryRefType.#ctor">
            <summary>
            <para>
            CategoryRefType references a category from within a category scheme. Reference fields are required for both the scheme and the item.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCategoryReferenceType">
            <summary>
            <para>
            LocalCategoryReferenceType provides a simple references to a category where the identification of the category scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCategoryReferenceType.#ctor">
            <summary>
            <para>
            LocalCategoryReferenceType provides a simple references to a category where the identification of the category scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCategoryRefType">
            <summary>
            <para>
            LocalCategoryRefType references a category locally where the references to the category scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCategoryRefType.#ctor">
            <summary>
            <para>
            LocalCategoryRefType references a category locally where the references to the category scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistReferenceType">
            <summary>
            <para>
            CodelistReferenceType is a type for referencing a codelist object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistReferenceType.#ctor">
            <summary>
            <para>
            CodelistReferenceType is a type for referencing a codelist object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistRefType">
            <summary>
            <para>
            CodelistRefType provides a reference to a codelist via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistRefType.#ctor">
            <summary>
            <para>
            CodelistRefType provides a reference to a codelist via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeReferenceType">
            <summary>
            <para>
            CodeReferenceType is a type for referencing a code object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeReferenceType.#ctor">
            <summary>
            <para>
            CodeReferenceType is a type for referencing a code object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeRefType">
            <summary>
            <para>
            CodeRefType references a code from within a codelist. Reference fields are required for both the scheme and the item.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeRefType.#ctor">
            <summary>
            <para>
            CodeRefType references a code from within a codelist. Reference fields are required for both the scheme and the item.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodeReferenceType">
            <summary>
            <para>
            LocalCodeReferenceType provides a simple references to a code where the identification of the codelist which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodeReferenceType.#ctor">
            <summary>
            <para>
            LocalCodeReferenceType provides a simple references to a code where the identification of the codelist which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodeRefType">
            <summary>
            <para>
            LocalCodeRefType references a code locally where the references to the codelist which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodeRefType.#ctor">
            <summary>
            <para>
            LocalCodeRefType references a code locally where the references to the codelist which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyCodelistReferenceType">
            <summary>
            <para>
            AnyCodelistReferenceType is a specific type of a reference for referencing either a codelist or a hierarchical codelist usage. It consists of a URN and/or a complete set of reference fields; agency, id and version. If the complete set of reference fields is used, it is required that a class be provided so that the type of object referenced is clear.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyCodelistReferenceType.#ctor">
            <summary>
            <para>
            AnyCodelistReferenceType is a specific type of a reference for referencing either a codelist or a hierarchical codelist usage. It consists of a URN and/or a complete set of reference fields; agency, id and version. If the complete set of reference fields is used, it is required that a class be provided so that the type of object referenced is clear.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyLocalCodeReferenceType">
            <summary>
            <para>
            AnyLocalCodeReferenceType provides a simple references to any code or hierarchical code where the identification of the codelist or hierarchical codelist which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnyLocalCodeReferenceType.#ctor">
            <summary>
            <para>
            AnyLocalCodeReferenceType provides a simple references to any code or hierarchical code where the identification of the codelist or hierarchical codelist which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeReferenceType">
            <summary>
            <para>
            ConceptSchemeReferenceType is a type for referencing a concept scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeReferenceType.#ctor">
            <summary>
            <para>
            ConceptSchemeReferenceType is a type for referencing a concept scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeRefType">
            <summary>
            <para>
            ConceptSchemeRefType provides a reference to a concept scheme via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeRefType.#ctor">
            <summary>
            <para>
            ConceptSchemeRefType provides a reference to a concept scheme via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptReferenceType">
            <summary>
            <para>
            ConceptReferenceType is a type for referencing a concept object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptReferenceType.#ctor">
            <summary>
            <para>
            ConceptReferenceType is a type for referencing a concept object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptRefType">
            <summary>
            <para>
            ConceptRefType references a concept from within a concept scheme. Reference fields are required for both the scheme and the item.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptRefType.#ctor">
            <summary>
            <para>
            ConceptRefType references a concept from within a concept scheme. Reference fields are required for both the scheme and the item.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalConceptReferenceType">
            <summary>
            <para>
            LocalConceptReferenceType provides a simple references to a concept where the identification of the concept scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalConceptReferenceType.#ctor">
            <summary>
            <para>
            LocalConceptReferenceType provides a simple references to a concept where the identification of the concept scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalConceptRefType">
            <summary>
            <para>
            LocalConceptRefType references a concept locally where the references to the concept scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalConceptRefType.#ctor">
            <summary>
            <para>
            LocalConceptRefType references a concept locally where the references to the concept scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeReferenceBaseType">
            <summary>
            <para>
            OrganisationSchemeReferenceBaseType is a type for referencing a organisation scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeReferenceBaseType.#ctor">
            <summary>
            <para>
            OrganisationSchemeReferenceBaseType is a type for referencing a organisation scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeRefBaseType">
            <summary>
            <para>
            OrganisationSchemeRefBaseType contains a set of reference fields for an organisation scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeRefBaseType.#ctor">
            <summary>
            <para>
            OrganisationSchemeRefBaseType contains a set of reference fields for an organisation scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeReferenceType">
            <summary>
            <para>
            OrganisationSchemeReferenceType references an organisation scheme regardless of the specific type. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeReferenceType.#ctor">
            <summary>
            <para>
            OrganisationSchemeReferenceType references an organisation scheme regardless of the specific type. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeRefType">
            <summary>
            <para>
            OrganisationSchemeRefType provides a reference to an organisation scheme via a complete set of reference fields. It is required that the class (i.e. the type) of organisation scheme being referenced be specified.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeRefType.#ctor">
            <summary>
            <para>
            OrganisationSchemeRefType provides a reference to an organisation scheme via a complete set of reference fields. It is required that the class (i.e. the type) of organisation scheme being referenced be specified.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationReferenceBaseType">
            <summary>
            <para>
            OrganisationReferenceBaseType is a type for referencing any organisation object, regardless of its type. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationReferenceBaseType.#ctor">
            <summary>
            <para>
            OrganisationReferenceBaseType is a type for referencing any organisation object, regardless of its type. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationRefBaseType">
            <summary>
            <para>
            OrganisationRefBaseType is an abstract base type which references an organisation from within a organisation scheme. Reference fields are required for both the scheme and the organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationRefBaseType.#ctor">
            <summary>
            <para>
            OrganisationRefBaseType is an abstract base type which references an organisation from within a organisation scheme. Reference fields are required for both the scheme and the organisation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationReferenceType">
            <summary>
            <para>
            OrganisationReferenceType references an organisation regardless of the specific type. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationReferenceType.#ctor">
            <summary>
            <para>
            OrganisationReferenceType references an organisation regardless of the specific type. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationRefType">
            <summary>
            <para>
            OrganisationRefType provides a reference to any organisation via a complete set of reference fields. It is required that the class (i.e. the type) of organisation being referenced be specified.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationRefType.#ctor">
            <summary>
            <para>
            OrganisationRefType provides a reference to any organisation via a complete set of reference fields. It is required that the class (i.e. the type) of organisation being referenced be specified.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationReferenceBaseType">
            <summary>
            <para>
            LocalOrganisationReferenceBaseType is an abstract base type which provides a simple references to an organisation, regardless of type, where the identification of the organisation scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationReferenceBaseType.#ctor">
            <summary>
            <para>
            LocalOrganisationReferenceBaseType is an abstract base type which provides a simple references to an organisation, regardless of type, where the identification of the organisation scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationRefBaseType">
            <summary>
            <para>
            LocalOrganisationRefBaseType is an abstract base type that references an organisation locally where the reference to the organisation scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationRefBaseType.#ctor">
            <summary>
            <para>
            LocalOrganisationRefBaseType is an abstract base type that references an organisation locally where the reference to the organisation scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationReferenceType">
            <summary>
            <para>
            LocalOrganisationReferenceType provides a simple reference to an organisation, regardless of type, where the identification of the organisation scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationReferenceType.#ctor">
            <summary>
            <para>
            LocalOrganisationReferenceType provides a simple reference to an organisation, regardless of type, where the identification of the organisation scheme which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationRefType">
            <summary>
            <para>
            LocalOrganisationRefType references an organisation locally where the reference to the organisation scheme which defines it is provided elsewhere. The reference requires that the class (i.e. the type) or the organisation being reference be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationRefType.#ctor">
            <summary>
            <para>
            LocalOrganisationRefType references an organisation locally where the reference to the organisation scheme which defines it is provided elsewhere. The reference requires that the class (i.e. the type) or the organisation being reference be provided.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitSchemeReferenceType">
            <summary>
            <para>
            OrganisationUnitSchemeReferenceType is a type for referencing an organisation unit scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitSchemeReferenceType.#ctor">
            <summary>
            <para>
            OrganisationUnitSchemeReferenceType is a type for referencing an organisation unit scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitSchemeRefType">
            <summary>
            <para>
            OrganisationUnitSchemeRefType contains a set of reference fields for an organisation unit scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitSchemeRefType.#ctor">
            <summary>
            <para>
            OrganisationUnitSchemeRefType contains a set of reference fields for an organisation unit scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitReferenceType">
            <summary>
            <para>
            OrganisationUnitReferenceType is a type for referencing an organisation unit. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitReferenceType.#ctor">
            <summary>
            <para>
            OrganisationUnitReferenceType is a type for referencing an organisation unit. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitRefType">
            <summary>
            <para>
            OrganisationUnitRefType contains a set of reference fields for referencing an organisation unit within an organisation unit scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitRefType.#ctor">
            <summary>
            <para>
            OrganisationUnitRefType contains a set of reference fields for referencing an organisation unit within an organisation unit scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationUnitReferenceType">
            <summary>
            <para>
            LocalOrganisationUnitReferenceType provides a simple reference to an organisation unit, where the reference to the organisation unit scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationUnitReferenceType.#ctor">
            <summary>
            <para>
            LocalOrganisationUnitReferenceType provides a simple reference to an organisation unit, where the reference to the organisation unit scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationUnitRefType">
            <summary>
            <para>
            LocalOrganisationUnitRefType references an organisation unit locally where the reference to the organisation unit scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalOrganisationUnitRefType.#ctor">
            <summary>
            <para>
            LocalOrganisationUnitRefType references an organisation unit locally where the reference to the organisation unit scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencySchemeReferenceType">
            <summary>
            <para>
            AgencySchemeReferenceType is a type for referencing an agency scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencySchemeReferenceType.#ctor">
            <summary>
            <para>
            AgencySchemeReferenceType is a type for referencing an agency scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencySchemeRefType">
            <summary>
            <para>
            AgencySchemeRefType contains a set of reference fields for an agency scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencySchemeRefType.#ctor">
            <summary>
            <para>
            AgencySchemeRefType contains a set of reference fields for an agency scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyReferenceType">
            <summary>
            <para>
            AgencyReferenceType is a type for referencing an agency. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyReferenceType.#ctor">
            <summary>
            <para>
            AgencyReferenceType is a type for referencing an agency. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyRefType">
            <summary>
            <para>
            AgencyRefType contains a set of reference fields for referencing an agency within an agency scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyRefType.#ctor">
            <summary>
            <para>
            AgencyRefType contains a set of reference fields for referencing an agency within an agency scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalAgencyReferenceType">
            <summary>
            <para>
            LocalAgencyReferenceType provides a simple reference to an agency, where the reference to the agency scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalAgencyReferenceType.#ctor">
            <summary>
            <para>
            LocalAgencyReferenceType provides a simple reference to an agency, where the reference to the agency scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalAgencyRefType">
            <summary>
            <para>
            LocalAgencyRefType references an agency locally where the reference to the agency scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalAgencyRefType.#ctor">
            <summary>
            <para>
            LocalAgencyRefType references an agency locally where the reference to the agency scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerSchemeReferenceType">
            <summary>
            <para>
            DataConsumerSchemeReferenceType is a type for referencing a data consumer scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerSchemeReferenceType.#ctor">
            <summary>
            <para>
            DataConsumerSchemeReferenceType is a type for referencing a data consumer scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerSchemeRefType">
            <summary>
            <para>
            DataConsumerSchemeRefType contains a set of reference fields for a data consumer scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerSchemeRefType.#ctor">
            <summary>
            <para>
            DataConsumerSchemeRefType contains a set of reference fields for a data consumer scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerReferenceType">
            <summary>
            <para>
            DataConsumerReferenceType is a type for referencing a data consumer. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerReferenceType.#ctor">
            <summary>
            <para>
            DataConsumerReferenceType is a type for referencing a data consumer. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerRefType">
            <summary>
            <para>
            DataConsumerRefType contains a set of reference fields for referencing a data consumer within a data consumer scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerRefType.#ctor">
            <summary>
            <para>
            DataConsumerRefType contains a set of reference fields for referencing a data consumer within a data consumer scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataConsumerReferenceType">
            <summary>
            <para>
            LocalDataConsumerReferenceType provides a simple reference to a data consumer, where the reference to the data consumer scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataConsumerReferenceType.#ctor">
            <summary>
            <para>
            LocalDataConsumerReferenceType provides a simple reference to a data consumer, where the reference to the data consumer scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataConsumerRefType">
            <summary>
            <para>
            LocalDataConsumerRefType references a data consumer locally where the reference to the data consumer scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataConsumerRefType.#ctor">
            <summary>
            <para>
            LocalDataConsumerRefType references a data consumer locally where the reference to the data consumer scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderSchemeReferenceType">
            <summary>
            <para>
            DataProviderSchemeReferenceType is a type for referencing a data provider scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderSchemeReferenceType.#ctor">
            <summary>
            <para>
            DataProviderSchemeReferenceType is a type for referencing a data provider scheme object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderSchemeRefType">
            <summary>
            <para>
            DataProviderSchemeRefType contains a set of reference fields for a data provider scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderSchemeRefType.#ctor">
            <summary>
            <para>
            DataProviderSchemeRefType contains a set of reference fields for a data provider scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderReferenceType">
            <summary>
            <para>
            DataProviderReferenceType is a type for referencing a data provider. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderReferenceType.#ctor">
            <summary>
            <para>
            DataProviderReferenceType is a type for referencing a data provider. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderRefType">
            <summary>
            <para>
            DataProviderRefType contains a set of reference fields for referencing a data provider within a data provider scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderRefType.#ctor">
            <summary>
            <para>
            DataProviderRefType contains a set of reference fields for referencing a data provider within a data provider scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataProviderReferenceType">
            <summary>
            <para>
            LocalDataProviderReferenceType provides a simple reference to a data provider, where the reference to the data provider scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataProviderReferenceType.#ctor">
            <summary>
            <para>
            LocalDataProviderReferenceType provides a simple reference to a data provider, where the reference to the data provider scheme which defines it is provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataProviderRefType">
            <summary>
            <para>
            LocalDataProviderRefType references a data provider locally where the reference to the data provider scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataProviderRefType.#ctor">
            <summary>
            <para>
            LocalDataProviderRefType references a data provider locally where the reference to the data provider scheme which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyReferenceType">
            <summary>
            <para>
            ReportingTaxonomyReferenceType is a type for referencing a reporting taxonomy object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyReferenceType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyReferenceType is a type for referencing a reporting taxonomy object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyRefType">
            <summary>
            <para>
            ReportingTaxonomyRefType provides a reference to a reporting taxonomy via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyRefType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyRefType provides a reference to a reporting taxonomy via a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategoryReferenceType">
            <summary>
            <para>
            ReportingCategoryReferenceType is a type for referencing a reporting category object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategoryReferenceType.#ctor">
            <summary>
            <para>
            ReportingCategoryReferenceType is a type for referencing a reporting category object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportCategoryRefType">
            <summary>
            <para>
            ReportCategoryRefType contains a set of fields for referencing a reporting category within a reporting taxonomy.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportCategoryRefType.#ctor">
            <summary>
            <para>
            ReportCategoryRefType contains a set of fields for referencing a reporting category within a reporting taxonomy.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportingCategoryReferenceType">
            <summary>
            <para>
            LocalReportingCategoryReferenceType provides a simple references to a reporting category where the identification of the reporting taxonomy which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportingCategoryReferenceType.#ctor">
            <summary>
            <para>
            LocalReportingCategoryReferenceType provides a simple references to a reporting category where the identification of the reporting taxonomy which defines it is contained in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportingCategoryRefType">
            <summary>
            <para>
            LocalReportingCategoryRefType references a reporting category locally where the references to the reporting taxonomy which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportingCategoryRefType.#ctor">
            <summary>
            <para>
            LocalReportingCategoryRefType references a reporting category locally where the references to the reporting taxonomy which defines it is provided elsewhere.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelistReferenceType">
            <summary>
            <para>
            HierarchicalCodelistReferenceType is a type for referencing a hierarchical codelist object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelistReferenceType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistReferenceType is a type for referencing a hierarchical codelist object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelistRefType">
            <summary>
            <para>
            HierarchicalCodelistRefType contains a set of reference fields for a hierarchical codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelistRefType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistRefType contains a set of reference fields for a hierarchical codelist.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchyReferenceType">
            <summary>
            <para>
            HierarchyReferenceType is a type for referencing a hierarchy within a hierarchical codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchyReferenceType.#ctor">
            <summary>
            <para>
            HierarchyReferenceType is a type for referencing a hierarchy within a hierarchical codelist.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchyRefType">
            <summary>
            <para>
            HierarchyRefType is type which references a hierarchy from within a hierarchical codelist. Reference fields are required for both the hierarchy and the codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchyRefType.#ctor">
            <summary>
            <para>
            HierarchyRefType is type which references a hierarchy from within a hierarchical codelist. Reference fields are required for both the hierarchy and the codelist.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LevelReferenceType">
            <summary>
            <para>
            LevelReferenceType is a type for referencing a level object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LevelReferenceType.#ctor">
            <summary>
            <para>
            LevelReferenceType is a type for referencing a level object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LevelRefType">
            <summary>
            <para>
            LevelRefType references a level from within a hierarchical codelist. Reference fields are required for both the level and the codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LevelRefType.#ctor">
            <summary>
            <para>
            LevelRefType references a level from within a hierarchical codelist. Reference fields are required for both the level and the codelist.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalLevelReferenceType">
            <summary>
            <para>
            LocalLevelReferenceType is a type for referencing a level object where the reference to the hierarchical codelist and the hierarchy in which it is defined is provided in another context (e.g. is inferred from the hierarchy in which the reference is defined).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalLevelReferenceType.#ctor">
            <summary>
            <para>
            LocalLevelReferenceType is a type for referencing a level object where the reference to the hierarchical codelist and the hierarchy in which it is defined is provided in another context (e.g. is inferred from the hierarchy in which the reference is defined).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalLevelRefType">
            <summary>
            <para>
            LocalLevelRefType references a level object where the reference to the hierarchy in which it is contained and the hierarchical codelist which define it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalLevelRefType.#ctor">
            <summary>
            <para>
            LocalLevelRefType references a level object where the reference to the hierarchy in which it is contained and the hierarchical codelist which define it are provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodeReferenceType">
            <summary>
            <para>
            HierarchicalCodeReferenceType is a type for referencing a hierarchical code object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodeReferenceType.#ctor">
            <summary>
            <para>
            HierarchicalCodeReferenceType is a type for referencing a hierarchical code object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodeRefType">
            <summary>
            <para>
            HierarchicalCodeRefType references a code from within a hierarchical codelist. Reference fields are required for both the code and the codelist.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodeRefType.#ctor">
            <summary>
            <para>
            HierarchicalCodeRefType references a code from within a hierarchical codelist. Reference fields are required for both the code and the codelist.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintReferenceType">
            <summary>
            <para>
            ConstraintReferenceType is a type for referencing a constraint object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintReferenceType.#ctor">
            <summary>
            <para>
            ConstraintReferenceType is a type for referencing a constraint object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintRefType">
            <summary>
            <para>
            ConstraintRefType contains a set of reference fields for a constraint.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintRefType.#ctor">
            <summary>
            <para>
            ConstraintRefType contains a set of reference fields for a constraint.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraintReferenceType">
            <summary>
            <para>
            AttachmentConstraintReferenceType is a type for referencing a attachment constraint object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraintReferenceType.#ctor">
            <summary>
            <para>
            AttachmentConstraintReferenceType is a type for referencing a attachment constraint object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraintRefType">
            <summary>
            <para>
            AttachmentConstraintRefType contains a set of reference fields for an attachment constraint.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraintRefType.#ctor">
            <summary>
            <para>
            AttachmentConstraintRefType contains a set of reference fields for an attachment constraint.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintReferenceType">
            <summary>
            <para>
            ContentConstraintReferenceType is a type for referencing a content constraint object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintReferenceType.#ctor">
            <summary>
            <para>
            ContentConstraintReferenceType is a type for referencing a content constraint object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintRefType">
            <summary>
            <para>
            ContentConstraintRefType contains a set of reference fields for a content constraint.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintRefType.#ctor">
            <summary>
            <para>
            ContentConstraintRefType contains a set of reference fields for a content constraint.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataflowReferenceType">
            <summary>
            <para>
            DataflowReferenceType is a type for referencing a dataflow object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataflowReferenceType.#ctor">
            <summary>
            <para>
            DataflowReferenceType is a type for referencing a dataflow object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataflowRefType">
            <summary>
            <para>
            DataflowRefType contains a set of reference fields for a data flow.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataflowRefType.#ctor">
            <summary>
            <para>
            DataflowRefType contains a set of reference fields for a data flow.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataflowReferenceType">
            <summary>
            <para>
            MetadataflowReferenceType is a type for referencing a metadata flow object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataflowReferenceType.#ctor">
            <summary>
            <para>
            MetadataflowReferenceType is a type for referencing a metadata flow object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataflowRefType">
            <summary>
            <para>
            MetadataflowRefType contains a set of reference fields for a metadata flow.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataflowRefType.#ctor">
            <summary>
            <para>
            MetadataflowRefType contains a set of reference fields for a metadata flow.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureReferenceType">
            <summary>
            <para>
            DataStructureReferenceType is a type for referencing a data structure definition object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureReferenceType.#ctor">
            <summary>
            <para>
            DataStructureReferenceType is a type for referencing a data structure definition object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureRefType">
            <summary>
            <para>
            DataStructureRefType contains a set of reference fields for a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureRefType.#ctor">
            <summary>
            <para>
            DataStructureRefType contains a set of reference fields for a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorReferenceType">
            <summary>
            <para>
            KeyDescriptorReferenceType is a type for referencing a key descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorReferenceType.#ctor">
            <summary>
            <para>
            KeyDescriptorReferenceType is a type for referencing a key descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorRefType">
            <summary>
            <para>
            KeyDescriptorRefType contains a reference to the key descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorRefType.#ctor">
            <summary>
            <para>
            KeyDescriptorRefType contains a reference to the key descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptorReferenceType">
            <summary>
            <para>
            AttributeDescriptorReferenceType is a type for referencing an attribute descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptorReferenceType.#ctor">
            <summary>
            <para>
            AttributeDescriptorReferenceType is a type for referencing an attribute descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptorRefType">
            <summary>
            <para>
            AttributeDescriptorRefType contains a reference to the attribute descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptorRefType.#ctor">
            <summary>
            <para>
            AttributeDescriptorRefType contains a reference to the attribute descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptorReferenceType">
            <summary>
            <para>
            MeasureDescriptorReferenceType is a type for referencing a measure descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptorReferenceType.#ctor">
            <summary>
            <para>
            MeasureDescriptorReferenceType is a type for referencing a measure descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptorRefType">
            <summary>
            <para>
            MeasureDescriptorRefType contains a reference to the measure descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptorRefType.#ctor">
            <summary>
            <para>
            MeasureDescriptorRefType contains a reference to the measure descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupKeyDescriptorReferenceType">
            <summary>
            <para>
            GroupKeyDescriptorReferenceType is a type for referencing a group key descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupKeyDescriptorReferenceType.#ctor">
            <summary>
            <para>
            GroupKeyDescriptorReferenceType is a type for referencing a group key descriptor object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupKeyDescriptorRefType">
            <summary>
            <para>
            GroupKeyDescriptorRefType contains a reference to a group key descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupKeyDescriptorRefType.#ctor">
            <summary>
            <para>
            GroupKeyDescriptorRefType contains a reference to a group key descriptor within a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalGroupKeyDescriptorReferenceType">
            <summary>
            <para>
            LocalGroupKeyDescriptorReferenceType is a type for referencing a group key descriptor locally, where the reference to the data structure definition which defines it is provided in another context (for example the data structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalGroupKeyDescriptorReferenceType.#ctor">
            <summary>
            <para>
            LocalGroupKeyDescriptorReferenceType is a type for referencing a group key descriptor locally, where the reference to the data structure definition which defines it is provided in another context (for example the data structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalGroupKeyDescriptorRefType">
            <summary>
            <para>
            LocalGroupKeyDescriptorRefType contains a local reference to a group key descriptor.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalGroupKeyDescriptorRefType.#ctor">
            <summary>
            <para>
            LocalGroupKeyDescriptorRefType contains a local reference to a group key descriptor.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionReferenceType">
            <summary>
            <para>
            DimensionReferenceType is a type for referencing a dimension object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionReferenceType.#ctor">
            <summary>
            <para>
            DimensionReferenceType is a type for referencing a dimension object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionRefType">
            <summary>
            <para>
            DimensionRefType contains a reference to a dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionRefType.#ctor">
            <summary>
            <para>
            DimensionRefType contains a reference to a dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimensionReferenceType">
            <summary>
            <para>
            MeasureDimensionReferenceType is a type for referencing a measure dimension object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimensionReferenceType.#ctor">
            <summary>
            <para>
            MeasureDimensionReferenceType is a type for referencing a measure dimension object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimensionRefType">
            <summary>
            <para>
            MeasureDimensionRefType contains a reference to the measure dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimensionRefType.#ctor">
            <summary>
            <para>
            MeasureDimensionRefType contains a reference to the measure dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimensionReferenceType">
            <summary>
            <para>
            TimeDimensionReferenceType is a type for referencing a time dimension object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimensionReferenceType.#ctor">
            <summary>
            <para>
            TimeDimensionReferenceType is a type for referencing a time dimension object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimensionRefType">
            <summary>
            <para>
            TimeDimensionRefType contains a reference to the time dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimensionRefType.#ctor">
            <summary>
            <para>
            TimeDimensionRefType contains a reference to the time dimension within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDimensionReferenceType">
            <summary>
            <para>
            LocalDimensionReferenceType is a type for referencing any type of dimension locally, where the reference to the data structure definition which defines the dimension is provided in another context (for example the data structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDimensionReferenceType.#ctor">
            <summary>
            <para>
            LocalDimensionReferenceType is a type for referencing any type of dimension locally, where the reference to the data structure definition which defines the dimension is provided in another context (for example the data structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDimensionRefType">
            <summary>
            <para>
            LocalDimensionRefType contains the reference fields for referencing a dimension locally.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDimensionRefType.#ctor">
            <summary>
            <para>
            LocalDimensionRefType contains the reference fields for referencing a dimension locally.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeReferenceType">
            <summary>
            <para>
            AttributeReferenceType is a type for referencing an attribute object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeReferenceType.#ctor">
            <summary>
            <para>
            AttributeReferenceType is a type for referencing an attribute object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeRefType">
            <summary>
            <para>
            AttributeRefType contains a reference to an attribute within a data structure definition. Note that since there is only one attribute descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeRefType.#ctor">
            <summary>
            <para>
            AttributeRefType contains a reference to an attribute within a data structure definition. Note that since there is only one attribute descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasureReferenceType">
            <summary>
            <para>
            PrimaryMeasureReferenceType is a type for referencing a primary measure object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasureReferenceType.#ctor">
            <summary>
            <para>
            PrimaryMeasureReferenceType is a type for referencing a primary measure object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasureRefType">
            <summary>
            <para>
            PrimaryMeasureRefType contains a reference to the primary measure within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasureRefType.#ctor">
            <summary>
            <para>
            PrimaryMeasureRefType contains a reference to the primary measure within a data structure definition. Note that since there is only one key descriptor, the container reference fields are prohibited.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalPrimaryMeasureReferenceType">
            <summary>
            <para>
            LocalPrimaryMeasureReferenceType is a type for referencing a primary measure locally, where the reference to the data structure definition which defines the primary measure is provided in another context (for example the data structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalPrimaryMeasureReferenceType.#ctor">
            <summary>
            <para>
            LocalPrimaryMeasureReferenceType is a type for referencing a primary measure locally, where the reference to the data structure definition which defines the primary measure is provided in another context (for example the data structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalPrimaryMeasureRefType">
            <summary>
            <para>
            LocalPrimaryMeasureRefType contains the reference fields for referencing a primary measure locally.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalPrimaryMeasureRefType.#ctor">
            <summary>
            <para>
            LocalPrimaryMeasureRefType contains the reference fields for referencing a primary measure locally.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataStructureComponentReferenceType">
            <summary>
            <para>
            LocalDataStructureComponentReferenceType is a type for referencing any type of data structure component locally, where the reference for the data structure definition which defines the components is available in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataStructureComponentReferenceType.#ctor">
            <summary>
            <para>
            LocalDataStructureComponentReferenceType is a type for referencing any type of data structure component locally, where the reference for the data structure definition which defines the components is available in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataStructureComponentRefType">
            <summary>
            <para>
            LocalDataStructureComponentRefType contains the reference fields for referencing any data structure component locally. This reference must specify the class of the component being referenced.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalDataStructureComponentRefType.#ctor">
            <summary>
            <para>
            LocalDataStructureComponentRefType contains the reference fields for referencing any data structure component locally. This reference must specify the class of the component being referenced.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureEnumerationSchemeReferenceType">
            <summary>
            <para>
            DataStructureEnumerationSchemeReferenceType is a type for referencing any type of item scheme that is allowable as The enumeration of the representation of a data structure definition component. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureEnumerationSchemeReferenceType.#ctor">
            <summary>
            <para>
            DataStructureEnumerationSchemeReferenceType is a type for referencing any type of item scheme that is allowable as The enumeration of the representation of a data structure definition component. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureEnumerationSchemeRefType">
            <summary>
            <para>
            DataStructureEnumerationSchemeRefType contains the reference fields for referencing any item scheme that is allowable as The enumeration of the representation of a data structure definition component.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureEnumerationSchemeRefType.#ctor">
            <summary>
            <para>
            DataStructureEnumerationSchemeRefType contains the reference fields for referencing any item scheme that is allowable as The enumeration of the representation of a data structure definition component.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureReferenceType">
            <summary>
            <para>
            MetadataStructureReferenceType is a type for referencing a metadata structure definition object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureReferenceType.#ctor">
            <summary>
            <para>
            MetadataStructureReferenceType is a type for referencing a metadata structure definition object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureRefType">
            <summary>
            <para>
            MetadataStructureRefType contains a set of reference fields for a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureRefType.#ctor">
            <summary>
            <para>
            MetadataStructureRefType contains a set of reference fields for a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetReferenceType">
            <summary>
            <para>
            MetadataTargetReferenceType is a type for referencing a metadata target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetReferenceType.#ctor">
            <summary>
            <para>
            MetadataTargetReferenceType is a type for referencing a metadata target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRefType">
            <summary>
            <para>
            MetadataTargetRefType contains a reference to a metadata target within a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRefType.#ctor">
            <summary>
            <para>
            MetadataTargetRefType contains a reference to a metadata target within a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataTargetReferenceType">
            <summary>
            <para>
            LocalMetadataTargetReferenceType is a type for referencing a metadata target locally, where the reference to the metadata structure definition which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataTargetReferenceType.#ctor">
            <summary>
            <para>
            LocalMetadataTargetReferenceType is a type for referencing a metadata target locally, where the reference to the metadata structure definition which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataTargetRefType">
            <summary>
            <para>
            LocalMetadataTargetRefType contains a local reference to a metadata target object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataTargetRefType.#ctor">
            <summary>
            <para>
            LocalMetadataTargetRefType contains a local reference to a metadata target object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTargetReferenceType">
            <summary>
            <para>
            ConstraintTargetReferenceType is a type for referencing a constraint target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTargetReferenceType.#ctor">
            <summary>
            <para>
            ConstraintTargetReferenceType is a type for referencing a constraint target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTargetRefType">
            <summary>
            <para>
            ConstraintTargetRefType contains a reference to a constraint target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTargetRefType.#ctor">
            <summary>
            <para>
            ConstraintTargetRefType contains a reference to a constraint target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTargetReferenceType">
            <summary>
            <para>
            DataSetTargetReferenceType is a type for referencing a data set target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTargetReferenceType.#ctor">
            <summary>
            <para>
            DataSetTargetReferenceType is a type for referencing a data set target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTargetRefType">
            <summary>
            <para>
            DataSetTargetRefType contains a reference to a data set target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTargetRefType.#ctor">
            <summary>
            <para>
            DataSetTargetRefType contains a reference to a data set target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorValuesTargetReferenceType">
            <summary>
            <para>
            KeyDescriptorValuesTargetType is a type for referencing a key descriptor values target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorValuesTargetReferenceType.#ctor">
            <summary>
            <para>
            KeyDescriptorValuesTargetType is a type for referencing a key descriptor values target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorValuesTargetRefType">
            <summary>
            <para>
            KeyDescriptorValuesTargetRefType contains a reference to a key descriptor values target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.KeyDescriptorValuesTargetRefType.#ctor">
            <summary>
            <para>
            KeyDescriptorValuesTargetRefType contains a reference to a key descriptor values target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTargetReferenceType">
            <summary>
            <para>
            ReportPeriodTargetReferenceType is a type for referencing a report period target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTargetReferenceType.#ctor">
            <summary>
            <para>
            ReportPeriodTargetReferenceType is a type for referencing a report period target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTargetRefType">
            <summary>
            <para>
            ReportPeriodTargetRefType contains a reference to a report period target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTargetRefType.#ctor">
            <summary>
            <para>
            ReportPeriodTargetRefType contains a reference to a report period target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTargetReferenceType">
            <summary>
            <para>
            IdentifiableObjectTargetReferenceType is a type for referencing an identifiable object target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTargetReferenceType.#ctor">
            <summary>
            <para>
            IdentifiableObjectTargetReferenceType is a type for referencing an identifiable object target object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTargetRefType">
            <summary>
            <para>
            IdentifiableObjectTargetRefType contains a reference to an identifiable object target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTargetRefType.#ctor">
            <summary>
            <para>
            IdentifiableObjectTargetRefType contains a reference to an identifiable object target within a metadata target of a data structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalTargetObjectReferenceType">
            <summary>
            <para>
            LocalTargetObjectReferenceType is a type for referencing any type of target object within a metadata target locally, where the references to the metadata target and the  metadata structure definition which defines the target reference are provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalTargetObjectReferenceType.#ctor">
            <summary>
            <para>
            LocalTargetObjectReferenceType is a type for referencing any type of target object within a metadata target locally, where the references to the metadata target and the  metadata structure definition which defines the target reference are provided in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalTargetObjectRefType">
            <summary>
            <para>
            LocalTargetObjectRefType contains the reference fields for referencing a target object locally.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalTargetObjectRefType.#ctor">
            <summary>
            <para>
            LocalTargetObjectRefType contains the reference fields for referencing a target object locally.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructureReferenceType">
            <summary>
            <para>
            ReportStructureReferenceType is a type for referencing a report structure object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructureReferenceType.#ctor">
            <summary>
            <para>
            ReportStructureReferenceType is a type for referencing a report structure object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructureRefType">
            <summary>
            <para>
            ReportStructureRefType contains a reference to a report structure within a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructureRefType.#ctor">
            <summary>
            <para>
            ReportStructureRefType contains a reference to a report structure within a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportStructureReferenceType">
            <summary>
            <para>
            LocalReportStructureReferenceType is a type for referencing a report structure locally, where the reference to the metadata structure definition which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportStructureReferenceType.#ctor">
            <summary>
            <para>
            LocalReportStructureReferenceType is a type for referencing a report structure locally, where the reference to the metadata structure definition which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportStructureRefType">
            <summary>
            <para>
            LocalReportStructureRefType contains a local reference to a report structure object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalReportStructureRefType.#ctor">
            <summary>
            <para>
            LocalReportStructureRefType contains a local reference to a report structure object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttributeReferenceType">
            <summary>
            <para>
            MetadataAttributeReferenceType is a type for referencing a metadata attribute object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttributeReferenceType.#ctor">
            <summary>
            <para>
            MetadataAttributeReferenceType is a type for referencing a metadata attribute object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttributeRefType">
            <summary>
            <para>
            MetadataAttributeRefType contains a reference to a metadata attribute within a report structure in a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttributeRefType.#ctor">
            <summary>
            <para>
            MetadataAttributeRefType contains a reference to a metadata attribute within a report structure in a metadata structure definition.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataStructureComponentReferenceType">
            <summary>
            <para>
            LocalMetadataStructureComponentReferenceType is a type for referencing any type of metadata structure component locally, where the reference for the metadata structure definition which defines the components is available in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataStructureComponentReferenceType.#ctor">
            <summary>
            <para>
            LocalMetadataStructureComponentReferenceType is a type for referencing any type of metadata structure component locally, where the reference for the metadata structure definition which defines the components is available in another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataStructureComponentRefType">
            <summary>
            <para>
            LocalMetadataStructureComponentRefType contains the reference fields for referencing any metadata structure component locally. This reference must specify the class of the component being referenced.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalMetadataStructureComponentRefType.#ctor">
            <summary>
            <para>
            LocalMetadataStructureComponentRefType contains the reference fields for referencing any metadata structure component locally. This reference must specify the class of the component being referenced.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreementReferenceType">
            <summary>
            <para>
            ProvisionAgreementReferenceType is a type for referencing a provision agreement. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreementReferenceType.#ctor">
            <summary>
            <para>
            ProvisionAgreementReferenceType is a type for referencing a provision agreement. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreementRefType">
            <summary>
            <para>
            ProvisionAgreementRefType contains a set of reference fields for a provision agreement.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreementRefType.#ctor">
            <summary>
            <para>
            ProvisionAgreementRefType contains a set of reference fields for a provision agreement.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessReferenceType">
            <summary>
            <para>
            ProcessReferenceType is a type for referencing a process object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessReferenceType.#ctor">
            <summary>
            <para>
            ProcessReferenceType is a type for referencing a process object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessRefType">
            <summary>
            <para>
            ProcessRefType contains a set of reference fields for a process.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessRefType.#ctor">
            <summary>
            <para>
            ProcessRefType contains a set of reference fields for a process.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStepReferenceType">
            <summary>
            <para>
            ProcessStepReferenceType is a type for referencing a process step object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStepReferenceType.#ctor">
            <summary>
            <para>
            ProcessStepReferenceType is a type for referencing a process step object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStepRefType">
            <summary>
            <para>
            ProcessStepRefType provides for a reference to a process step through its id. Support for referencing nested process steps is provided through a nested identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStepRefType.#ctor">
            <summary>
            <para>
            ProcessStepRefType provides for a reference to a process step through its id. Support for referencing nested process steps is provided through a nested identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalProcessStepReferenceType">
            <summary>
            <para>
            LocalProcessStepReferenceType is a type for referencing a process step locally, where the reference to the process which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalProcessStepReferenceType.#ctor">
            <summary>
            <para>
            LocalProcessStepReferenceType is a type for referencing a process step locally, where the reference to the process which defines it is provided in another context (for example the metadata structure definition in which the reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalProcessStepRefType">
            <summary>
            <para>
            LocalProcessStepRefType contains a local reference to a process step object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalProcessStepRefType.#ctor">
            <summary>
            <para>
            LocalProcessStepRefType contains a local reference to a process step object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TransitionReferenceType">
            <summary>
            <para>
            TransiationReferenceType is a type for referencing a process step object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TransitionReferenceType.#ctor">
            <summary>
            <para>
            TransiationReferenceType is a type for referencing a process step object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TransitionRefType">
            <summary>
            <para>
            TransitionRefType provides for a reference to a transition definition in process step through its id.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TransitionRefType.#ctor">
            <summary>
            <para>
            TransitionRefType provides for a reference to a transition definition in process step through its id.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSetReferenceType">
            <summary>
            <para>
            StructureSetReferenceType is a type for referencing a structure set object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSetReferenceType.#ctor">
            <summary>
            <para>
            StructureSetReferenceType is a type for referencing a structure set object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSetRefType">
            <summary>
            <para>
            StructureSetRefType contains a set of reference fields for a structure set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSetRefType.#ctor">
            <summary>
            <para>
            StructureSetRefType contains a set of reference fields for a structure set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMapReferenceType">
            <summary>
            <para>
            StructureMapReferenceType is a type for referencing a structure map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMapReferenceType.#ctor">
            <summary>
            <para>
            StructureMapReferenceType is a type for referencing a structure map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMapRefType">
            <summary>
            <para>
            StructureMapRefType contains fields for referencing a structure map within a structure set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMapRefType.#ctor">
            <summary>
            <para>
            StructureMapRefType contains fields for referencing a structure map within a structure set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMapReferenceType">
            <summary>
            <para>
            CategorySchemeMapReferenceType is a type for referencing a category scheme map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMapReferenceType.#ctor">
            <summary>
            <para>
            CategorySchemeMapReferenceType is a type for referencing a category scheme map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMapRefType">
            <summary>
            <para>
            CategorySchemeMapRefType contains a set of reference fields for a category scheme map.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMapRefType.#ctor">
            <summary>
            <para>
            CategorySchemeMapRefType contains a set of reference fields for a category scheme map.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMapReferenceType">
            <summary>
            <para>
            CodelistMapReferenceType is a type for referencing a codelist map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMapReferenceType.#ctor">
            <summary>
            <para>
            CodelistMapReferenceType is a type for referencing a codelist map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMapRefType">
            <summary>
            <para>
            CodelistMapRefType contains a set of reference fields for a codelist map.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMapRefType.#ctor">
            <summary>
            <para>
            CodelistMapRefType contains a set of reference fields for a codelist map.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodelistMapReferenceType">
            <summary>
            <para>
            LocalCodelistMapReferenceType is a type for referencing a codelist map object where the reference to the structure set which defines it is provided in another context (e.g. the structure set in which this reference occurs).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodelistMapReferenceType.#ctor">
            <summary>
            <para>
            LocalCodelistMapReferenceType is a type for referencing a codelist map object where the reference to the structure set which defines it is provided in another context (e.g. the structure set in which this reference occurs).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodelistMapRefType">
            <summary>
            <para>
            LocalCodelistMapRefType contains a set of reference fields for a codelist map locally.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.LocalCodelistMapRefType.#ctor">
            <summary>
            <para>
            LocalCodelistMapRefType contains a set of reference fields for a codelist map locally.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMapReferenceType">
            <summary>
            <para>
            ConceptSchemeMapReferenceType is a type for referencing a concept scheme map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMapReferenceType.#ctor">
            <summary>
            <para>
            ConceptSchemeMapReferenceType is a type for referencing a concept scheme map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMapRefType">
            <summary>
            <para>
            ConceptSchemeMapRefType contains a set of reference fields for a concept scheme map.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMapRefType.#ctor">
            <summary>
            <para>
            ConceptSchemeMapRefType contains a set of reference fields for a concept scheme map.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMapReferenceType">
            <summary>
            <para>
            OrganisationSchemeMapReferenceType is a type for referencing a organisation scheme map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMapReferenceType.#ctor">
            <summary>
            <para>
            OrganisationSchemeMapReferenceType is a type for referencing a organisation scheme map object. It consists of a URN and/or a complete set of reference fields.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMapRefType">
            <summary>
            <para>
            OrganisationSchemeMapRefType contains a set of reference fields for an organisation scheme map.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMapRefType.#ctor">
            <summary>
            <para>
            OrganisationSchemeMapRefType contains a set of reference fields for an organisation scheme map.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SetReferenceType">
            <summary>
            <para>
            SetReferenceType defines the structure of a reference to a data/metadata set. A full reference to a data provider and the identifier for the data set must be provided. Note that this is not derived from the base reference structure since data/metadata sets are not technically identifiable.
            </para>
            <para>
            Regular expression: (DataProvider, ID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SetReferenceType.#ctor">
            <summary>
            <para>
            SetReferenceType defines the structure of a reference to a data/metadata set. A full reference to a data provider and the identifier for the data set must be provided. Note that this is not derived from the base reference structure since data/metadata sets are not technically identifiable.
            </para>
            <para>
            Regular expression: (DataProvider, ID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SetReferenceType.DataProvider">
            <summary>
            <para>
            DataProvider references a the provider of the data/metadata set. A URN and/or a complete set of reference fields must be provided.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DataProvider, ID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SetReferenceType.ID">
            <summary>
            <para>
            ID contains the identifier of the data/metadata set being referenced.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DataProvider, ID)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PackageTypeCodelistType">
            <summary>
            <para>
            PackageTypeCodelistType provides an enumeration of all SDMX package names.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemePackageTypeCodelistType">
            <summary>
            <para>
            ItemSchemePackageTypeCodelistType provides an enumeration of all SDMX packages which contain item schemes.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructurePackageTypeCodelistType">
            <summary>
            <para>
            StructurePackageTypeCodelistType provides an enumeration of all SDMX packages which contain structure and structure usages.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeCodelistType">
            <summary>
            <para>
            ObjectTypeCodelistType provides an enumeration of all objects outside of the base infomration model class. This includes some abstract object types such as Organsiation and Constraint.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableTypeCodelistType">
            <summary>
            <para>
            MaintainableTypeCodelistType provides an enumeration of all maintainable objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConcreteMaintainableTypeCodelistType">
            <summary>
            <para>
            ConcreteMaintainableTypeCodelistType provides an enumeration of all concrete maintainable objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistTypeCodelistType">
            <summary>
            <para>
            CodelistTypeCodelistType provides an enumeration of all codelist objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeTypeCodelistType">
            <summary>
            <para>
            CodeTypeCodelistType provides an enumeration of all code objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTypeCodelistType">
            <summary>
            <para>
            ConstraintTypeCodelistType provides an enumeration of all constraint objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeTypeCodelistType">
            <summary>
            <para>
            ItemSchemeTypeCodelistType provides an enumeration of all item scheme objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeTypeCodelistType">
            <summary>
            <para>
            OrganisationSchemeTypeCodelistType provides an enumeration of all organisation scheme objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationTypeCodelistType">
            <summary>
            <para>
            OrganisationTypeCodelistType provides an enumeration of all organisation objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureOrUsageTypeCodelistType">
            <summary>
            <para>
            StructureOrUsageTypeCodelistType provides an enumeration all structure and structure usage objects
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureTypeCodelistType">
            <summary>
            <para>
            StructureTypeCodelistType provides an enumeration all structure objects
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureUsageTypeCodelistType">
            <summary>
            <para>
            StructureUsageTypeCodelistType provides an enumeration all structure usage objects
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemTypeCodelistType">
            <summary>
            <para>
            ItemTypeCodelistType provides an enumeration of all item objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentListTypeCodelistType">
            <summary>
            <para>
            ComponentListTypeCodelistType provides an enumeration of all component list objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentTypeCodelistType">
            <summary>
            <para>
            ComponentTypeCodelistType provides an enumeration of all component objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureComponentTypeCodelistType">
            <summary>
            <para>
            DataStructureComponentTypeCodelistType provides an enumeration of all data structure component objects, except for the primary measure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionEumerationSchemeTypeCodelistType">
            <summary>
            <para>
            DimensionEumerationSchemeTypeCodelistType provides an enumeration of all item schemes which are allowable as the representation of a data structure definition component.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureComponentTypeCodelistType">
            <summary>
            <para>
            MetadataStructureComponentTypeCodelistType provides an enumeration of all metadata structure component objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionTypeCodelistType">
            <summary>
            <para>
            DimensionTypeCodelistType provides an enumeration of all dimension objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TargetObjectTypeCodelistType">
            <summary>
            <para>
            TargetObjectTypeCodelistType provides an enumeration of all target object objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType">
            <summary>
            <para>
            ObjectTypeListType provides a means for enumerating object types.
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.#ctor">
            <summary>
            <para>
            ObjectTypeListType provides a means for enumerating object types.
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Any">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Agency">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.AgencyScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.AttachmentConstraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Attribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.AttributeDescriptor">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Categorisation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Category">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.CategorySchemeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.CategoryScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Code">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.CodeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Codelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.CodelistMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ComponentMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Concept">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ConceptMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ConceptScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ConceptSchemeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ContentConstraint">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Dataflow">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DataConsumer">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DataConsumerScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DataProvider">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DataProviderScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DataSetTarget">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DataStructure">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Dimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DimensionDescriptor">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.DimensionDescriptorValuesTarget">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.GroupDimensionDescriptor">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.HierarchicalCode">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.HierarchicalCodelist">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Hierarchy">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.HybridCodelistMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.HybridCodeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.IdentifiableObjectTarget">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Level">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.MeasureDescriptor">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.MeasureDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Metadataflow">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.MetadataAttribute">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.MetadataSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.MetadataStructure">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.MetadataTarget">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.OrganisationMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.OrganisationSchemeMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.OrganisationUnit">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.OrganisationUnitScheme">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.PrimaryMeasure">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Process">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ProcessStep">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ProvisionAgreement">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ReportingCategory">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ReportingCategoryMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ReportingTaxonomy">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ReportingTaxonomyMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ReportPeriodTarget">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.ReportStructure">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.StructureMap">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.StructureSet">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.TimeDimension">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObjectTypeListType.Transition">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Any?, Agency?, AgencyScheme?, AttachmentConstraint?, Attribute?, AttributeDescriptor?, Categorisation?, Category?, CategorySchemeMap?, CategoryScheme?, Code?, CodeMap?, Codelist?, CodelistMap?, ComponentMap?, Concept?, ConceptMap?, ConceptScheme?, ConceptSchemeMap?, ContentConstraint?, Dataflow?, DataConsumer?, DataConsumerScheme?, DataProvider?, DataProviderScheme?, DataSetTarget?, DataStructure?, Dimension?, DimensionDescriptor?, DimensionDescriptorValuesTarget?, GroupDimensionDescriptor?, HierarchicalCode?, HierarchicalCodelist?, Hierarchy?, HybridCodelistMap?, HybridCodeMap?, IdentifiableObjectTarget?, Level?, MeasureDescriptor?, MeasureDimension?, Metadataflow?, MetadataAttribute?, MetadataSet?, MetadataStructure?, MetadataTarget?, OrganisationMap?, OrganisationSchemeMap?, OrganisationUnit?, OrganisationUnitScheme?, PrimaryMeasure?, Process?, ProcessStep?, ProvisionAgreement?, ReportingCategory?, ReportingCategoryMap?, ReportingTaxonomy?, ReportingTaxonomyMap?, ReportPeriodTarget?, ReportStructure?, StructureMap?, StructureSet?, TimeDimension?, Transition?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableObjectTypeListType">
            <summary>
            <para>
            MaintainableObjectTypeListType provides a means for enumerating maintainable object types.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaintainableObjectTypeListType.#ctor">
            <summary>
            <para>
            MaintainableObjectTypeListType provides a means for enumerating maintainable object types.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextType">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextType.#ctor">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextType.lang">
            <summary>
            <para>
            The xml:lang attribute specifies a language code for the text. If not supplied, the default language is assumed to be English.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StatusMessageType">
            <summary>
            <para>
            StatusMessageType describes the structure of an error or warning message. A message contains the text of the message, as well as an optional language indicator and an optional code.
            </para>
            <para>
            Regular expression: (Text+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StatusMessageType.#ctor">
            <summary>
            <para>
            StatusMessageType describes the structure of an error or warning message. A message contains the text of the message, as well as an optional language indicator and an optional code.
            </para>
            <para>
            Regular expression: (Text+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StatusMessageType.Text">
            <summary>
            <para>
            Text contains the text of the message, in parallel language values.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Text+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StatusMessageType.code">
            <summary>
            <para>
            The code attribute holds an optional code identifying the underlying error that generated the message. This should be used if parallel language descriptions of the error are supplied, to distinguish which of the multiple error messages are for the same underlying error.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodedStatusMessageType">
            <summary>
            <para>
            CodedStatusMessageType describes the structure of an error or warning message which required a code.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodedStatusMessageType.#ctor">
            <summary>
            <para>
            CodedStatusMessageType describes the structure of an error or warning message which required a code.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotableType">
            <summary>
            <para>
            AnnotableType is an abstract base type used for all annotable artefacts. Any type that provides for annotations should extend this type.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotableType.#ctor">
            <summary>
            <para>
            AnnotableType is an abstract base type used for all annotable artefacts. Any type that provides for annotations should extend this type.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotableType.Annotations">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationsType">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationsType.#ctor">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationsType.Annotation">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType">
            <summary>
            <para>
            AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType.#ctor">
            <summary>
            <para>
            AnnotationType provides for non-documentation notes and annotations to be embedded in data and structure messages. It provides optional fields for providing a title, a type description, a URI, and the text of the annotation.
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType.AnnotationTitle">
            <summary>
            <para>
            AnnotationTitle provides a title for the annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType.AnnotationType1">
            <summary>
            <para>
            AnnotationType is used to distinguish between annotations designed to support various uses. The types are not enumerated, as these can be specified by the user or creator of the annotations. The definitions and use of annotation types should be documented by their creator.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType.AnnotationURL">
            <summary>
            <para>
            AnnotationURL is a URI - typically a URL - which points to an external resource which may contain or supplement the annotation. If a specific behavior is desired, an annotation type should be defined which specifies the use of this field more exactly.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType.AnnotationText">
            <summary>
            <para>
            AnnotationText holds a language-specific string containing the text of the annotation.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (AnnotationTitle?, AnnotationType1?, AnnotationURL?, AnnotationText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationType.id">
            <summary>
            <para>
            The id attribute provides a non-standard identification of an annotation. It can be used to disambiguate annotations.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AlphaNumericType">
            <summary>
            <para>
            AlphaNumericType is a reusable simple type that allows for only mixed-case alphabetical and numeric characters.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AlphaType">
            <summary>
            <para>
            AlphaType is a reusable simple type that allows for only mixed-case alphabetical characters. This is derived from the AlphaNumericType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.NumericType">
            <summary>
            <para>
            NumericType is a reusable simple type that allows for only numeric characters. This is not to be confused with an integer, as this may be used to numeric strings which have leading zeros. These leading zeros are not ignored. This is derived from the AlphaNumericType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObservationalTimePeriodType">
            <summary>
            <para>
            ObservationalTimePeriodType specifies a distinct time period or point in time in SDMX. The time period can either be a Gregorian calendar period, a standard reporting period, a distinct point in time, or a time range with a specific date and duration.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StandardTimePeriodType">
            <summary>
            <para>
            StandardTimePeriodType defines the set of standard time periods in SDMX. This includes the reporting time periods and the basic date type (i.e. the calendar time periods and the dateTime format).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.BasicTimePeriodType">
            <summary>
            <para>
            BasicTimePeriodType contains the basic dates and calendar periods. It is a combination of the Gregorian time periods and the date time type..
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GregorianTimePeriodType">
            <summary>
            <para>
            GregorianTimePeriodType defines the set of standard calendar periods in SDMX.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTimePeriodType">
            <summary>
            <para>
            ReportingTimePeriodType defines standard reporting periods in SDMX, which are all in relation to the start day (day-month) of a reporting year which is specified in the specialized reporting year start day attribute. If the reporting year start day is not defined, a day of January 1 is assumed. The reporting year must be epxressed as the year at the beginning of the period. Therfore, if the reproting year runs from April to March, any given reporting year is expressed as the year for April. The general format of a report period can be described as  [year]-[period][time zone]?, where the type of period is designated with a single character followed by a number representing the period. Note that all periods allow for an optional time zone offset. See the details of each member type for the specifics of its format.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.BaseReportPeriodType">
            <summary>
            <para>
            BaseReportPeriodType is a simple type which frames the general pattern of a reporting period for validation purposes. This regular expression is only a general validation which is meant to validate the following structure [year]-[period][time zone]?. This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodValidTimeZoneType">
            <summary>
            <para>
            ReportPeriodValidTimeZoneType is a derivation of the BaseReportPeriodType which validates that the time zone provided in the base type is valid. The base type will have provided basic validation already. The patterns below validate that the time zone is "Z" or that it is between -14:00 and +14:00, or that there is no time zone provided. This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingYearType">
            <summary>
            <para>
            ReportingYearType defines a time period of 1 year (P1Y) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. In this case a reporting year will coincide with a calendar year. The format of a reporting year is YYYY-A1 (e.g. 2000-A1). Note that the period value of 1 is fixed.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingSemesterType">
            <summary>
            <para>
            ReportingSemesterType defines a time period of 6 months (P6M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting semester is YYYY-Ss (e.g. 2000-S1), where s is either 1 or 2.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTrimesterType">
            <summary>
            <para>
            ReportingTrimesterType defines a time period of 4 months (P4M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting trimester is YYYY-Tt (e.g. 2000-T1), where s is either 1, 2, or 3.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingQuarterType">
            <summary>
            <para>
            ReportingQuarterType defines a time period of 3 months (P3M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting quarter is YYYY-Qq (e.g. 2000-Q1), where q is a value between 1 and 4.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingMonthType">
            <summary>
            <para>
            ReportingMonthType defines a time period of 1 month (P1M) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. In this case a reporting month will coincide with a calendar month. The format of a reporting month is YYYY-Mmm (e.g. 2000-M01), where mm is a two digit month (i.e. 01-12).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingWeekType">
            <summary>
            <para>
            ReportingWeekType defines a time period of 7 days (P7D) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. A standard reporting week is based on the ISO 8601 defintion of a week date, in relation to the reporting period start day. The first week is defined as the week with the first Thursday on or after the reporting year start day. An equivalent definition is the week starting with the Monday nearest in time to the reporting year start day. There are other equivalent defintions, all of which should be adjusted based on the reporting year start day. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting week is YYYY-Www (e.g. 2000-W01), where mm is a two digit week (i.e. 01-53).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingDayType">
            <summary>
            <para>
            ReportingDayType defines a time period of 1 day (P1D) in relation to a reporting year which has a start day (day-month) specified in the specialized reporting year start day attribute. In the absence of a start day for the reporting year, a day of January 1 is assumed. The format of a reporting day is YYYY-Dddd (e.g. 2000-D001), where ddd is a three digit day (i.e. 001-366).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.BaseTimeRangeType">
            <summary>
            <para>
            BaseTimeRangeType is a simple type which frames the general pattern for a time range in SDMX. A time range pattern is generally described as [xs:date or xs:dateTime]\[xs:duration], where the referenced types are defined by XML Schema. This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RangeValidMonthDayType">
            <summary>
            <para>
            RangeValidMonthDayType is a derivation of the BaseTimeRangeType which validates that the day provided is valid for the month, without regard to leap years. The base type will have provided basic validation already. The patterns below validate that there are up to 29 days in February, up to 30 days in April, June, September, and November and up to 31 days in January, March, May, July, August, October, and December. This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RangeValidLeapYearType">
            <summary>
            <para>
            RangeValidLeapYearType is a derivation of the RangeValidMonthDayType which validates that a date of February 29 occurs in a valid leap year (i.e. if the year is divisible 4 and not by 100, unless it is also divisible by 400). This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RangeValidTimeType">
            <summary>
            <para>
            RangeValidTimeType is a derivation of the RangeValidLeapYearType which validates that the time (if provided) is validly formatted. The base type will have provided basic validation already. The patterns below validate that the time falls between 00:00:00 and 24:00:00. Note that as the XML dateTime type does, seconds are required. It is also permissible to have fractions of seconds, but only within the boundaries of the range specified. This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RangeValidTimeZoneType">
            <summary>
            <para>
            RangeValidMonthDayType is a derivation of the RangeValidTimeType which validates that the time zone provided in the base type is valid. The base type will have provided basic validation already. The patterns below validate that the time zone is "Z" or that it is between -14:00 and +14:00, or that there is no time zone provided. This type is meant to be derived from for further validation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValidDateDurationType">
            <summary>
            <para>
            TimeRangeValidDateDurationType is an abstract derivation of the RangeValidTimeType which validates that duration provided is generally valid, up to the time component.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeType">
            <summary>
            <para>
            TimeRangeType defines the structure of a time range in SDMX. The pattern of a time range can be generally described as [start date]\[duration], where start date is an date or dateTime type as defined in XML Schema and duration is a time duration as defined in XML Schema. Note that it is permissible for a time zone offset to be provided on the date or date time.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimezoneType">
            <summary>
            <para>
            TimezoneType defines the pattern for a time zone. An offset of -14:00 to +14:00 or Z can be specified.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferencePeriodType">
            <summary>
            <para>
            Specifies the inclusive start and end times.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferencePeriodType.#ctor">
            <summary>
            <para>
            Specifies the inclusive start and end times.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferencePeriodType.startTime">
            <summary>
            <para>
            The startTime attributes contains the inclusive start date for the reference period.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReferencePeriodType.endTime">
            <summary>
            <para>
            The endTime attributes contains the inclusive end date for the reference period.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OccurrenceType">
            <summary>
            <para>
            OccurrenceType is used to express the maximum occurrence of an object. It combines an integer, greater than 1, and the literal text, "unbounded", for objects which have no upper limit on its occurrence.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MaxOccursNumberType">
            <summary>
            <para>
            MaxOccursNumberType is a base type used to restrict an integer to be greater than 1, for the purpose of expressing the maximum number of occurrences of an object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.UnboundedCodeType">
            <summary>
            <para>
            UnboundedCodeType provides single textual value of "unbounded", for use in OccurentType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ActionType">
            <summary>
            <para>
            ActionType provides a list of actions, describing the intention of the data transmission from the sender's side. Each action provided at the data or metadata set level applies to the entire data set for which it is given. Note that the actions indicated in the Message Header are optional, and used to summarize specific actions indicated with this data type for all registry interactions. The "Informational" value is used when the message contains information in response to a query, rather than being used to invoke a maintenance activity.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.WildCardValueType">
            <summary>
            <para>
            WildCardValueType is a single value code list, used to include the '%' character - indicating that an entire field is wild carded.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType">
            <summary>
            <para>
            QueryableDataSourceType describes a data source which is accepts an standard SDMX Query message and responds appropriately.
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType.#ctor">
            <summary>
            <para>
            QueryableDataSourceType describes a data source which is accepts an standard SDMX Query message and responds appropriately.
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType.DataURL">
            <summary>
            <para>
            DataURL contains the URL of the data source.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType.WSDLURL">
            <summary>
            <para>
            WSDLURL provides the location of a WSDL instance on the internet which describes the queryable data source.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType.WADLURL">
            <summary>
            <para>
            WADLURL provides the location of a WADL instance on the internet which describes the REST protocol of the queryable data source.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType.isRESTDatasource">
            <summary>
            <para>
            The isRESTDatasource attribute indicates, if true, that the queryable data source is accessible via the REST protocol.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.QueryableDataSourceType.isWebServiceDatasource">
            <summary>
            <para>
            The isWebServiceDatasource attribute indicates, if true, that the queryable data source is accessible via Web Services protocols.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionTypeType">
            <summary>
            <para>
            DimensionTypeType enumerates the sub-classes of a dimension.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.XHTMLType">
            <summary>
            <para>
            XHTMLType allows for mixed content of text and XHTML tags. When using this type, one will have to provide a reference to the XHTML schema, since the processing of the tags within this type is strict, meaning that they are validated against the XHTML schema provided.
            </para>
            <para>
            Regular expression: (any)*
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.XHTMLType.#ctor">
            <summary>
            <para>
            XHTMLType allows for mixed content of text and XHTML tags. When using this type, one will have to provide a reference to the XHTML schema, since the processing of the tags within this type is strict, meaning that they are validated against the XHTML schema provided.
            </para>
            <para>
            Regular expression: (any)*
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.XHTMLType.Any">
            <summary>
            <para>
            Regular expression: (any)*
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.XHTMLType.lang">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraintTypeCodeType">
            <summary>
            <para>
            ContentConstraintTypeCodeType defines a list of types for a content constraint. A content constraint can state which data is present or which content is allowed for the constraint attachment.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType">
            <summary>
            <para>
            ComponentValueSetType is an abstract base type which is used to provide a set of value for a referenced component. Implementations of this type will be based on a particular component type and refine the allowed values to reflect the types of values that are possible for that type of component.
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.#ctor">
            <summary>
            <para>
            ComponentValueSetType is an abstract base type which is used to provide a set of value for a referenced component. Implementations of this type will be based on a particular component type and refine the allowed values to reflect the types of values that are possible for that type of component.
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.Value">
            <summary>
            <para>
            Value provides a simple value for the component, such as a coded, numeric, or simple text value. This type of component value is applicable for dimensions and attributes.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.DataSet">
            <summary>
            <para>
            DataSet provides a reference to a data set and is used to state a value for the data set target component in a metadata target.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.DataKey">
            <summary>
            <para>
            DataKey provides a set of dimension references and value, which form a full or partial data key. This is used to state a value for the key descriptor values target component in a metadata target.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.Object">
            <summary>
            <para>
            Object provides a reference to an Identifiable object in the SDMX Information Model. This is used to state a value for an identifiable target component in a metadata target.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.TimeRange">
            <summary>
            <para>
            TimeValue provides a value for a component which has a time representation. This is repeatable to allow for a range to be specified, although a single value can also be provided. An operator is available on this to indicate whether the specified value indicates an exact value or the beginning/end of a range (inclusive or exclusive).
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Value+ | DataSet+ | DataKey+ | @Object+ | TimeRange)?
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.id">
            <summary>
            <para>
            The id attribute provides the identifier for the component for which values are being provided. This base type allows for a nested identifier to be provided, for the purpose of referencing a nested component (i.e. a metadata attribute). However, specific implementations will restrict this representation to only allow single level identifiers where appropriate.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentValueSetType.include">
            <summary>
            <para>
            The include attribute indicates whether the values provided for the referenced component are to be included are excluded from the region in which they are defined.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DistinctKeyType">
            <summary>
            <para>
            DistinctKeyType is an abstract base type which is a special type of region that only defines a distinct region of data or metadata. For each component defined in the region, only a single values is provided. However, the same rules that apply to the general region about unstated components being wild carded apply here as well. Thus, this type can define a distinct full or partial key for data or metadata.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DistinctKeyType.#ctor">
            <summary>
            <para>
            DistinctKeyType is an abstract base type which is a special type of region that only defines a distinct region of data or metadata. For each component defined in the region, only a single values is provided. However, the same rules that apply to the general region about unstated components being wild carded apply here as well. Thus, this type can define a distinct full or partial key for data or metadata.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DinstinctKeyValueType">
            <summary>
            <para>
            DinstinctKeyValueType is an abstract base type which defines a singular, required value for a key component.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DinstinctKeyValueType.#ctor">
            <summary>
            <para>
            DinstinctKeyValueType is an abstract base type which defines a singular, required value for a key component.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataKeyType">
            <summary>
            <para>
            DataKeyType is a region which defines a distinct full or partial data key. The key consists of a set of values, each referencing a dimension and providing a single value for that dimension. The purpose of the key is to define a subset of a data set (i.e. the observed value and data attribute) which have the dimension values provided in this definition. Any dimension not stated explicitly in this key is assumed to be wild carded, thus allowing for the definition of partial data keys.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataKeyType.#ctor">
            <summary>
            <para>
            DataKeyType is a region which defines a distinct full or partial data key. The key consists of a set of values, each referencing a dimension and providing a single value for that dimension. The purpose of the key is to define a subset of a data set (i.e. the observed value and data attribute) which have the dimension values provided in this definition. Any dimension not stated explicitly in this key is assumed to be wild carded, thus allowing for the definition of partial data keys.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataKeyValueType">
            <summary>
            <para>
            DataKeyValueType is a type for providing a dimension value for the purpose of defining a distinct data key. Only a single value can be provided for the dimension.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataKeyValueType.#ctor">
            <summary>
            <para>
            DataKeyValueType is a type for providing a dimension value for the purpose of defining a distinct data key. Only a single value can be provided for the dimension.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataKeyType">
            <summary>
            <para>
            MetadataKeyType is a region which defines a distinct full or partial metadata key. The key consists of a set of values, each referencing a target object for the metadata target referenced in the metadataTarget attribute, which must be defined in the report structure referenced in the report attribute. Each target object can be assigned a single value. If an target object from the reference metadata target is not included in this key, the value of that is assumed to be all known objects for a reference target object, all possible keys for a key descriptor values target object, or all dates for report period target object. The purpose of this key reference a metadata conforming to a particular report structure for given object or set of objects.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataKeyType.#ctor">
            <summary>
            <para>
            MetadataKeyType is a region which defines a distinct full or partial metadata key. The key consists of a set of values, each referencing a target object for the metadata target referenced in the metadataTarget attribute, which must be defined in the report structure referenced in the report attribute. Each target object can be assigned a single value. If an target object from the reference metadata target is not included in this key, the value of that is assumed to be all known objects for a reference target object, all possible keys for a key descriptor values target object, or all dates for report period target object. The purpose of this key reference a metadata conforming to a particular report structure for given object or set of objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataKeyValueType">
            <summary>
            <para>
            MetadataKeyValueType is a type for providing a target object value for the purpose of defining a distinct metadata key. Only a single value can be provided for the target object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataKeyValueType.#ctor">
            <summary>
            <para>
            MetadataKeyValueType is a type for providing a target object value for the purpose of defining a distinct metadata key. Only a single value can be provided for the target object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CubeRegionType">
            <summary>
            <para>
            CubeRegionType defines the structure of a data cube region. This is based on the abstract RegionType and simply refines the key and attribute values to conform with what is applicable for dimensions and attributes, respectively. See the documentation of the base type for more details on how a region is defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CubeRegionType.#ctor">
            <summary>
            <para>
            CubeRegionType defines the structure of a data cube region. This is based on the abstract RegionType and simply refines the key and attribute values to conform with what is applicable for dimensions and attributes, respectively. See the documentation of the base type for more details on how a region is defined.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CubeRegionKeyType">
            <summary>
            <para>
            CubeRegionKeyType is a type for providing a set of values for a dimension for the purpose of defining a data cube region. A set of distinct value can be provided, or if this dimension is represented as time, and time range can be specified.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CubeRegionKeyType.#ctor">
            <summary>
            <para>
            CubeRegionKeyType is a type for providing a set of values for a dimension for the purpose of defining a data cube region. A set of distinct value can be provided, or if this dimension is represented as time, and time range can be specified.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRegionKeyType">
            <summary>
            <para>
            MetadataTargetRegionKeyType is a type for providing a set of values for a target object in a metadata target of a re fence metadata report. A set of values or a time range can be provided for a report period target object. A collection of the respective types of references can be provided for data set reference and identifiable object reference target objects. For a key descriptor values target object, a collection of data keys can be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataTargetRegionKeyType.#ctor">
            <summary>
            <para>
            MetadataTargetRegionKeyType is a type for providing a set of values for a target object in a metadata target of a re fence metadata report. A set of values or a time range can be provided for a report period target object. A collection of the respective types of references can be provided for data set reference and identifiable object reference target objects. For a key descriptor values target object, a collection of data keys can be provided.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeValueSetType">
            <summary>
            <para>
            AttributeValueSetType defines the structure for providing values for a data attribute. If no values are provided, the attribute is implied to include/excluded from the region in which it is defined, with no regard to the value of the data attribute. Note that for metadata attributes which occur within other metadata attributes, a nested identifier can be provided. For example, a value of CONTACT.ADDRESS.STREET refers to the metadata attribute with the identifier STREET which exists in the ADDRESS metadata attribute in the CONTACT metadata attribute, which is defined at the root of the report structure.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeValueSetType.#ctor">
            <summary>
            <para>
            AttributeValueSetType defines the structure for providing values for a data attribute. If no values are provided, the attribute is implied to include/excluded from the region in which it is defined, with no regard to the value of the data attribute. Note that for metadata attributes which occur within other metadata attributes, a nested identifier can be provided. For example, a value of CONTACT.ADDRESS.STREET refers to the metadata attribute with the identifier STREET which exists in the ADDRESS metadata attribute in the CONTACT metadata attribute, which is defined at the root of the report structure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttributeValueSetType">
            <summary>
            <para>
            MetadataAttributeValueSetType defines the structure for providing values for a metadata attribute. If no values are provided, the attribute is implied to include/excluded from the region in which it is defined, with no regard to the value of the metadata attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttributeValueSetType.#ctor">
            <summary>
            <para>
            MetadataAttributeValueSetType defines the structure for providing values for a metadata attribute. If no values are provided, the attribute is implied to include/excluded from the region in which it is defined, with no regard to the value of the metadata attribute.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleValueType">
            <summary>
            <para>
            SimpleValueType contains a simple value for a component, and if that value is from a code list, the ability to indicate that child codes in a simple hierarchy are part of the value set of the component for the region.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleValueType.#ctor">
            <summary>
            <para>
            SimpleValueType contains a simple value for a component, and if that value is from a code list, the ability to indicate that child codes in a simple hierarchy are part of the value set of the component for the region.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleValueType.cascadeValues">
            <summary>
            <para>
            The cascadeValues attribute, if true, indicates that if the value is taken from a code all child codes in a simple hierarchy are understood be included in the region.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleKeyValueType">
            <summary>
            <para>
            SimpleKeyValueType derives from the SimpleValueType, but does not allow for the cascading of value in the hierarchy, as keys are meant to describe a distinct full or partial key.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleKeyValueType.#ctor">
            <summary>
            <para>
            SimpleKeyValueType derives from the SimpleValueType, but does not allow for the cascading of value in the hierarchy, as keys are meant to describe a distinct full or partial key.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleKeyValueType.SimpleKeyValueTypeLocalType">
            <summary>
            <para>
            SimpleKeyValueType derives from the SimpleValueType, but does not allow for the cascading of value in the hierarchy, as keys are meant to describe a distinct full or partial key.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValueType">
            <summary>
            <para>
            TimeRangeValueType allows a time period value to be expressed as a range. It can be expressed as the period before a period, after a period, or between two periods. Each of these properties can specify their inclusion in regards to the range.
            </para>
            <para>
            Regular expression: (BeforePeriod | AfterPeriod | (StartPeriod, EndPeriod))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValueType.#ctor">
            <summary>
            <para>
            TimeRangeValueType allows a time period value to be expressed as a range. It can be expressed as the period before a period, after a period, or between two periods. Each of these properties can specify their inclusion in regards to the range.
            </para>
            <para>
            Regular expression: (BeforePeriod | AfterPeriod | (StartPeriod, EndPeriod))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValueType.BeforePeriod">
            <summary>
            <para>
            BeforePeriod is the period before which the period is meant to cover. This date may be inclusive or exclusive in the range.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (BeforePeriod | AfterPeriod | (StartPeriod, EndPeriod))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValueType.AfterPeriod">
            <summary>
            <para>
            AfterPeriod is the period after which the period is meant to cover. This date may be inclusive or exclusive in the range.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (BeforePeriod | AfterPeriod | (StartPeriod, EndPeriod))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValueType.StartPeriod">
            <summary>
            <para>
            StartPeriod is the start date or the range that the queried date must occur within. This date may be inclusive or exclusive in the range.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (BeforePeriod | AfterPeriod | (StartPeriod, EndPeriod))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeRangeValueType.EndPeriod">
            <summary>
            <para>
            EndPeriod is the end period of the range. This date may be inclusive or exclusive in the range.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (BeforePeriod | AfterPeriod | (StartPeriod, EndPeriod))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimePeriodRangeType">
            <summary>
            <para>
            TimePeriodRangeType defines a time period, and indicates whether it is inclusive in a range.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimePeriodRangeType.#ctor">
            <summary>
            <para>
            TimePeriodRangeType defines a time period, and indicates whether it is inclusive in a range.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimePeriodRangeType.isInclusive">
            <summary>
            <para>
            The isInclusive attribute, when true, indicates that the time period specified is included in the range.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleOperatorType">
            <summary>
            <para>
            SimpleOperatorType provides an enumeration of simple operators to be applied to any value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RangeOperatorType">
            <summary>
            <para>
            RangeOperatorType provides an enumeration of range operators to be applied to an ordered value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextSearchOperatorType">
            <summary>
            <para>
            TextSearchOperatorType provides an enumeration of text search operators.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrderedOperatorType">
            <summary>
            <para>
            OrderedOperatorType combines the SimpleOperatorType and the RangeOperatorType to provide a full range or operators for any ordered value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeOperatorType">
            <summary>
            <para>
            TimeOperatorType derives from the OrderedOperatorType to remove the notEqual operator.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType">
            <summary>
            <para>
            PayloadStructureType is an abstract base type used to define the structural information for data or metadata sets. A reference to the structure is provided (either explicitly or through a reference to a structure usage).
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.#ctor">
            <summary>
            <para>
            PayloadStructureType is an abstract base type used to define the structural information for data or metadata sets. A reference to the structure is provided (either explicitly or through a reference to a structure usage).
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.ProvisionAgrement">
            <summary>
            <para>
            ProvisionAgreement references a provision agreement which the data or metadata is reported against.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.StructureUsage">
            <summary>
            <para>
            StructureUsage references a flow which the data or metadata is reported against.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.Structure">
            <summary>
            <para>
            Structure references the structure which defines the structure of the data or metadata set.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.structureID">
            <summary>
            <para>
            The structureID attribute uniquely identifies the structure for the purpose of referencing it from the payload. This is only used in structure specific formats. Although it is required, it is only useful when more than one data set is present in the message.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.schemaURL">
            <summary>
            <para>
            The schemaURL attribute provides a location from which the structure specific schema can be located.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.namespace">
            <summary>
            <para>
            The namespace attribute is used to provide the namespace for structure-specific formats. By communicating this information in the header, it is possible to generate the structure specific schema while processing the message.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.dimensionAtObservation">
            <summary>
            <para>
            The dimensionAtObservation is used to reference the dimension at the observation level for data messages. This can also be given the explicit value of "AllDimensions" which denotes that the cross sectional data is in the flat format.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.explicitMeasures">
            <summary>
            <para>
            The explicitMeasures indicates whether explicit measures are used in the cross sectional format. This is only applicable for the measure dimension as the dimension at the observation level or the flat structure.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.serviceURL">
            <summary>
            <para>
            The serviceURL attribute indicates the URL of an SDMX SOAP web service from which the details of the object can be retrieved. Note that this can be a registry or and SDMX structural metadata repository, as they both implement that same web service interface.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PayloadStructureType.structureURL">
            <summary>
            <para>
            The structureURL attribute indicates the URL of a SDMX-ML structure message (in the same version as the source document) in which the externally referenced object is contained. Note that this may be a URL of an SDMX RESTful web service which will return the referenced object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureType">
            <summary>
            <para>
            DataStructureType is an abstract base type the forms the basis for the structural information for a data set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureType.#ctor">
            <summary>
            <para>
            DataStructureType is an abstract base type the forms the basis for the structural information for a data set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureRequestType">
            <summary>
            <para>
            DataStructureRequestType is a variation of a the DataStructureType for querying purposes. Only the observation dimension and the explicit measures flag are allowed.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructureRequestType.#ctor">
            <summary>
            <para>
            DataStructureRequestType is a variation of a the DataStructureType for querying purposes. Only the observation dimension and the explicit measures flag are allowed.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericDataStructureRequestType">
            <summary>
            <para>
            GenericDataStructureRequestType is a variation of a the DataStructureRequestType for querying purposes. The explicit measure flag in not allowed.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericDataStructureRequestType.#ctor">
            <summary>
            <para>
            GenericDataStructureRequestType is a variation of a the DataStructureRequestType for querying purposes. The explicit measure flag in not allowed.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeSeriesDataStructureRequestType">
            <summary>
            <para>
            TimeSeriesDataStructureRequestType is a variation of a the DataStructureRequestType for querying purposes. The observation dimension is fixed to TIME_PERIOD
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeSeriesDataStructureRequestType.#ctor">
            <summary>
            <para>
            TimeSeriesDataStructureRequestType is a variation of a the DataStructureRequestType for querying purposes. The observation dimension is fixed to TIME_PERIOD
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeSeriesGenericDataStructureRequestType">
            <summary>
            <para>
            TimeSeriesGenericDataStructureRequestType is a variation of a the GenericDataStructureRequestType for querying purposes. The observation dimension is fixed to TIME_PERIOD.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeSeriesGenericDataStructureRequestType.#ctor">
            <summary>
            <para>
            TimeSeriesGenericDataStructureRequestType is a variation of a the GenericDataStructureRequestType for querying purposes. The observation dimension is fixed to TIME_PERIOD.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericDataStructureType">
            <summary>
            <para>
            GenericDataStructureType defines the structural information for a generic data set. A reference to the structure, either explicitly or through a dataflow or provision agreement is required as well as the dimension which occurs at the observation level.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericDataStructureType.#ctor">
            <summary>
            <para>
            GenericDataStructureType defines the structural information for a generic data set. A reference to the structure, either explicitly or through a dataflow or provision agreement is required as well as the dimension which occurs at the observation level.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericTimeSeriesDataStructureType">
            <summary>
            <para>
            GenericTimeSeriesDataStructureType defines the structural information for a generic time series based data set. The dimension at the observation level is fixed to be TIME_PERIOD.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GenericTimeSeriesDataStructureType.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataStructureType defines the structural information for a generic time series based data set. The dimension at the observation level is fixed to be TIME_PERIOD.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSpecificDataStructureType">
            <summary>
            <para>
            StructureSpecificDataStructureType defines the structural information for a structured data set. In addition to referencing the data structure or dataflow which defines the structure of the data, the namespace for the data structure specific schema as well as which dimension is used at the observation level must be provided. It is also necessary to state whether the format uses explicit measures, although this is technically only applicable is the dimension at the observation level is the measure dimension or the flat data format is used.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSpecificDataStructureType.#ctor">
            <summary>
            <para>
            StructureSpecificDataStructureType defines the structural information for a structured data set. In addition to referencing the data structure or dataflow which defines the structure of the data, the namespace for the data structure specific schema as well as which dimension is used at the observation level must be provided. It is also necessary to state whether the format uses explicit measures, although this is technically only applicable is the dimension at the observation level is the measure dimension or the flat data format is used.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSpecificDataTimeSeriesStructureType">
            <summary>
            <para>
            StructureSpecificDataTimeSeriesStructureType defines the structural information for a structure definition specific time series data set. The dimension at the observation level is fixed to be TIME_PERIOD.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSpecificDataTimeSeriesStructureType.#ctor">
            <summary>
            <para>
            StructureSpecificDataTimeSeriesStructureType defines the structural information for a structure definition specific time series data set. The dimension at the observation level is fixed to be TIME_PERIOD.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureType">
            <summary>
            <para>
            MetadataStructureType is an abstract base type the forms the basis of the structural information for any metadata message. A reference to the metadata structure definition or a metadataflow must be provided. This can be used to determine the structure of the message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructureType.#ctor">
            <summary>
            <para>
            MetadataStructureType is an abstract base type the forms the basis of the structural information for any metadata message. A reference to the metadata structure definition or a metadataflow must be provided. This can be used to determine the structure of the message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSpecificMetadataStructureType">
            <summary>
            <para>
            StructureSpecificMetadataStructureType defines the structural information for a structured metadata message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSpecificMetadataStructureType.#ctor">
            <summary>
            <para>
            StructureSpecificMetadataStructureType defines the structural information for a structured metadata message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObservationDimensionType">
            <summary>
            <para>
            ObservationDimensionType allows for the dimension at the observation level to be specified by either providing the dimension identifier or using the explicit value "AllDimensions".
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ObsDimensionsCodeType">
            <summary>
            <para>
            ObsDimensionsCodeType is an enumeration containing the values "TimeDimension" and "AllDimensions"
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataType">
            <summary>
            <para>
            DataTypeType provides an enumerated list of the types of data formats allowed as the for the representation of an object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.BasicComponentDataType">
            <summary>
            <para>
            BasicComponentDataType provides an enumerated list of the types of characters allowed in the textType attribute for all non-target object components.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.SimpleDataType">
            <summary>
            <para>
            SimpleDataType restricts BasicComponentDataType to specify the allowable data types for a data structure definition component. The XHTML representation is removed as a possible type.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDataType">
            <summary>
            <para>
            TimeDataType restricts SimpleDataType to specify the allowable data types for representing a time value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Any">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Any.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Any.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Agency">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Agency.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Agency.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyScheme">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyScheme.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AgencyScheme.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraint">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraint.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttachmentConstraint.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Attribute">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Attribute.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Attribute.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptor.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AttributeDescriptor.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Categorisation">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Categorisation.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Categorisation.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Category">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Category.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Category.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategorySchemeMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryScheme">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryScheme.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CategoryScheme.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Code">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Code.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Code.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodeMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Codelist">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Codelist.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Codelist.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.CodelistMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ComponentMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Concept">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Concept.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Concept.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptScheme">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptScheme.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptScheme.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConceptSchemeMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTarget">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTarget.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ConstraintTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraint">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraint.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ContentConstraint.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Dataflow">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Dataflow.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Dataflow.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumer">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumer.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumer.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerScheme">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerScheme.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataConsumerScheme.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProvider">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProvider.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProvider.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderScheme">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderScheme.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataProviderScheme.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTarget">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTarget.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataSetTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructure">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructure.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DataStructure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Dimension">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Dimension.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Dimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionDescriptor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionDescriptor.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionDescriptor.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionDescriptorValuesTarget">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionDescriptorValuesTarget.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.DimensionDescriptorValuesTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupDimensionDescriptor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupDimensionDescriptor.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.GroupDimensionDescriptor.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCode">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCode.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCode.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelist">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelist.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HierarchicalCodelist.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Hierarchy">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Hierarchy.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Hierarchy.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HybridCodelistMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HybridCodelistMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HybridCodelistMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HybridCodeMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HybridCodeMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.HybridCodeMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTarget">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTarget.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.IdentifiableObjectTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Level">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Level.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Level.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptor.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDescriptor.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimension">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimension.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MeasureDimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Metadataflow">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Metadataflow.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Metadataflow.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttribute">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttribute.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataAttribute.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataSet">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataSet.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructure">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructure.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.MetadataStructure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationSchemeMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnit">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnit.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnit.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitScheme">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitScheme.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.OrganisationUnitScheme.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasure">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasure.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.PrimaryMeasure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Process">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Process.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Process.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStep">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStep.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProcessStep.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreement">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreement.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ProvisionAgreement.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategory">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategory.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategory.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategoryMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategoryMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingCategoryMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomy">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomy.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomy.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportingTaxonomyMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTarget">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTarget.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportPeriodTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructure">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructure.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ReportStructure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMap">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMap.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSet">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSet.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructureSet.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimension">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimension.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TimeDimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Transition">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Transition.#ctor">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Transition.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.EmptyType)">
            <summary>
            <para>
            EmptyType is an empty complex type for elements where the presence of the tag indicates all that is necessary.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Name">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Name.#ctor">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Name.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextType)">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Name.lang">
            <summary>
            <para>
            The xml:lang attribute specifies a language code for the text. If not supplied, the default language is assumed to be English.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Description">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Description.#ctor">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Description.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextType)">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Description.lang">
            <summary>
            <para>
            The xml:lang attribute specifies a language code for the text. If not supplied, the default language is assumed to be English.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Text">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Text.#ctor">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Text.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.TextType)">
            <summary>
            <para>
            TextType provides for a set of language-specific alternates to be provided for any human-readable constructs in the instance.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Text.lang">
            <summary>
            <para>
            The xml:lang attribute specifies a language code for the text. If not supplied, the default language is assumed to be English.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructuredText">
            <summary>
            <para>
            XHTMLType allows for mixed content of text and XHTML tags. When using this type, one will have to provide a reference to the XHTML schema, since the processing of the tags within this type is strict, meaning that they are validated against the XHTML schema provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructuredText.#ctor">
            <summary>
            <para>
            XHTMLType allows for mixed content of text and XHTML tags. When using this type, one will have to provide a reference to the XHTML schema, since the processing of the tags within this type is strict, meaning that they are validated against the XHTML schema provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructuredText.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.XHTMLType)">
            <summary>
            <para>
            XHTMLType allows for mixed content of text and XHTML tags. When using this type, one will have to provide a reference to the XHTML schema, since the processing of the tags within this type is strict, meaning that they are validated against the XHTML schema provided.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructuredText.Any">
            <summary>
            <para>
            Regular expression: (any)*
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.StructuredText.lang">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Annotations">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Annotations.#ctor">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Annotations.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.AnnotationsType)">
            <summary>
            <para>
            AnnotationsType provides for a list of annotations to be attached to data and structure messages.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.Annotations.Annotation">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotation+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType">
            <summary>
                The base header type class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            BaseHeaderType in an abstract base type that defines the basis for all message headers. Specific message formats will refine this
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType._referenceName">
            <summary>
                The reference element name
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.GetTypedRef``1">
            <summary>
                <para>
                    Set the Reference. Ref is used to provide a complete set of reference fields. Derived reference types will
                    restrict the RefType so that the content of the Ref element requires exactly what is needed for a complete
                    reference.
                </para>
                <para>
                    Occurrence: required
                </para>
                <para>
                    Setter: Appends
                </para>
                <para>
                    Regular expression: ((@Ref, URN?)|URN)
                </para>
            </summary>
            <typeparam name="T">The type of <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.RefBaseType" /></typeparam>
            <returns>
                The <paramref name="value" />
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.#ctor">
            <summary>
            <para>
            BaseHeaderType in an abstract base type that defines the basis for all message headers. Specific message formats will refine this
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.ID">
            <summary>
            <para>
            ID identifies an identification for the message, assigned by the sender.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Test">
            <summary>
            <para>
            Test indicates whether the message is for test purposes or not.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Prepared">
            <summary>
            <para>
            Prepared is the date the message was prepared.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Sender">
            <summary>
            <para>
            Sender is information about the party that is transmitting the message.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Receiver">
            <summary>
            <para>
            Receiver is information about the party that is the intended recipient of the message.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Name">
            <summary>
            <para>
            Name provides a name for the transmission. Multiple instances allow for parallel language values.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Structure">
            <summary>
            <para>
            Structure provides a reference to the structure (either explicitly or through a structure usage reference) that describes the format of data or reference metadata. In addition to the structure, it is required to also supply the namespace of the structure specific schema that defines the format of the data/metadata. For cross sectional data, additional information is also required to state which dimension is being used at the observation level. This information will allow the structure specific schema to be generated. For generic format messages, this is used to simply reference the underlying structure. It is not mandatory in these cases and the generic data/metadata sets will require this reference explicitly.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.DataProvider">
            <summary>
            <para>
            DataProvider identifies the provider of the data for a data/reference metadata message.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.DataSetAction">
            <summary>
            <para>
            DataSetAction code provides a code for determining whether the enclosed message is an Update or Delete message (not to be used with the UtilityData message).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.DataSetID">
            <summary>
            <para>
            DataSetID provides an identifier for a contained data set.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Extracted">
            <summary>
            <para>
            Extracted is a time-stamp from the system rendering the data.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.ReportingBegin">
            <summary>
            <para>
            ReportingBegin provides the start of the time period covered by the message (in the case of data).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.ReportingEnd">
            <summary>
            <para>
            ReportingEnd provides the end of the time period covered by the message (in the case of data).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.EmbargoDate">
            <summary>
            <para>
            EmbargoDate holds a time period before which the data included in this message is not available.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BaseHeaderType.Source">
            <summary>
            <para>
            Source provides human-readable information about the source of the data.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, Test, Prepared, Sender, Receiver*, Name*, Structure*, DataProvider?, DataSetAction?, DataSetID*, Extracted?, ReportingBegin?, ReportingEnd?, EmbargoDate?, Source*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType">
            <summary>
                The categorisation query type.
            </summary>
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType.#ctor">
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType">
            <summary>
                The category scheme query type.
            </summary>
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType.#ctor">
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType">
            <summary>
                The codelist query type.
            </summary>
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType.#ctor">
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType">
            <summary>
                The concept scheme query type.
            </summary>
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a concept scheme query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType.#ctor">
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a concept scheme query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType">
            <summary>
                The constraint query type.
            </summary>
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType.#ctor">
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType">
            <summary>
                The dataflow query type.
            </summary>
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType.#ctor">
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType">
            <summary>
                The data query type.
            </summary>
            <summary>
            <para>
            DataQueryType defines the structure of a data query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.BaseDataQueryType">
            <summary>
                Gets or sets the Data Query.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType.#ctor">
            <summary>
            <para>
            DataQueryType defines the structure of a data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType">
            <summary>
                The data schema query type.
            </summary>
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a data schema query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType.#ctor">
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a data schema query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType">
            <summary>
                The data structure query type.
            </summary>
            <summary>
            <para>
            KeyFamilyQueryType defines the structure of a data structure query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType.#ctor">
            <summary>
            <para>
            KeyFamilyQueryType defines the structure of a data structure query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error">
            <summary>
                <para>
                    ErrorType describes the structure of an error response.
                </para>
            </summary>
            <summary>
            <para>
            ErrorType describes the structure of an error response.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error.Load(System.Xml.XmlReader)">
            <summary>
                Load error message to a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error" /> object
            </summary>
            <param name="xmlFile">The input file</param>
            <returns>a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error" /> object</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error.#ctor">
            <summary>
            <para>
            ErrorType describes the structure of an error response.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ErrorType)">
            <summary>
            <para>
            ErrorType describes the structure of an error response.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Error.ErrorMessage">
            <summary>
            <para>
            ErrorMessage contains the error message. It can occur multiple times to communicate message for multiple errors, or to communicate the error message in parallel languages. If both messages for multiple errors and parallel language messages are used, then each error message should be given a code in order to distinguish message for unique errors.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ErrorMessage+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType">
            <summary>
                The generic metadata type.
            </summary>
            <summary>
            <para>
            GenericMetadataType defines the contents of a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType._dataSetType">
            <summary>
                The dataset list
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.DataSet">
            <summary>
                Gets or sets the Metadata DataSet.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType.#ctor">
            <summary>
            <para>
            GenericMetadataType defines the contents of a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType">
            <summary>
                The hierarchical codelist query type.
            </summary>
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType">
            <summary>
                Additions to the auto-generated <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType" />
            </summary>
            <summary>
            <para>
            GenericDataType defines the contents of a generic data message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType._dataSetType">
            <summary>
                The DataSet List.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.DataSet">
            <summary>
                Gets or sets the DataSet structures.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType.#ctor">
            <summary>
            <para>
            GenericDataType defines the contents of a generic data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType">
            <summary>
                The metadataflow query type.
            </summary>
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadata flow query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType.#ctor">
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadata flow query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType">
            <summary>
                The metadata query type.
            </summary>
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType.#ctor">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType">
            <summary>
                The metadata schema query type.
            </summary>
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a metadata schema query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType.#ctor">
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a metadata schema query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType">
            <summary>
                The metadata structure query type.
            </summary>
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType.#ctor">
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType">
            <summary>
                The organisation scheme query type.
            </summary>
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType.#ctor">
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType">
            <summary>
                The process query type.
            </summary>
            <summary>
            <para>
            CategorizationQueryType defines the structure of a categorization query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType.#ctor">
            <summary>
            <para>
            CategorizationQueryType defines the structure of a categorization query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType">
            <summary>
                The provision agreement query type.
            </summary>
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType.#ctor">
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterface">
            <summary>
                The registry interface class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterface.Load(System.Xml.XmlReader)">
            <summary>
                Load error message to a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterface" /> object
            </summary>
            <param name="xmlFile">The input file</param>
            <returns>a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterface" /> object</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterface.#ctor">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterface.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType)">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType">
            <summary>
                The registry interface type.
            </summary>
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameNotifyRegistryEvent">
            <summary> NotifyRegistryEvent element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameQueryRegistrationRequest">
            <summary> QueryRegistrationRequest element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameQueryRegistrationResponse">
            <summary> QueryRegistrationResponse element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameQuerySubscriptionRequest">
            <summary> QuerySubscriptionRequest element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameQuerySubscriptionResponse">
            <summary> QuerySubscriptionResponse element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameSubmitRegistrationsRequest">
            <summary> SubmitRegistrationsRequest element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameSubmitRegistrationsResponse">
            <summary> SubmitRegistrationsResponse element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameSubmitStructureRequest">
            <summary> SubmitStructureRequest element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameSubmitStructureResponse">
            <summary> SubmitStructureResponse element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameSubmitSubscriptionsRequest">
            <summary> SubmitSubscriptionsRequest element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._nameSubmitSubscriptionsResponse">
            <summary> SubmitSubscriptionsResponse element name </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeNotifyRegistryEvent">
            <summary> NotifyRegistryEvent type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeQueryRegistrationRequest">
            <summary> QueryRegistrationRequest type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeQueryRegistrationResponse">
            <summary> QueryRegistrationResponse type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeQuerySubscriptionRequest">
            <summary> QuerySubscriptionRequest type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeQuerySubscriptionResponse">
            <summary> QuerySubscriptionResponse type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeSubmitRegistrationsRequest">
            <summary> SubmitRegistrationsRequest type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeSubmitRegistrationsResponse">
            <summary> SubmitRegistrationsResponse type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeSubmitStructureRequest">
            <summary> SubmitStructureRequest type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeSubmitStructureResponse">
            <summary> SubmitStructureResponse type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeSubmitSubscriptionsRequest">
            <summary> SubmitSubscriptionsRequest type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType._typeSubmitSubscriptionsResponse">
            <summary> SubmitSubscriptionsResponse type </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.NotifyRegistryEvent">
            <summary>
                Gets or sets the NotifyRegistryEvent. NotifyRegistryEvent is sent by the registry services to subscribers, to
                notify them of specific registration and change events. Basic information about the event, such as the object that
                triggered it, the time of the event, the action that took place, and the subscription that triggered the
                notification are always sent. Optionally, the details of the changed object may also be provided.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.QueryRegistrationRequest">
            <summary>
                Gets or sets the QueryRegistrationRequest. QueryRegistrationRequest is used to query the contents of a
                registry for data sets and metadata sets. It specifies whether the result set should include metadata sets, data
                sets, or both. The search can be characterized by providing constraints including reference periods, data regions,
                and data keys.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.QueryRegistrationResponse">
            <summary>
                Gets or sets the QueryRegistrationResponse. QueryRegistrationResponse is sent as a response to any query of
                the contents of a registry. The result set contains a set of links to data and/or metadata If the result set is
                null, or there is some other problem with the query, then appropriate error messages and statuses will be returned.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.QuerySubscriptionRequest">
            <summary>
                Gets or sets the QuerySubscriptionRequest. QuerySubscriptionRequest is used to query the registry for the
                subscriptions of a given organisation.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.QuerySubscriptionResponse">
            <summary>
                Gets or sets the QuerySubscriptionResponse. QuerySubscriptionResponse is sent as a response to a subscription
                query. If the query is successful, the details of all subscriptions for the requested organisation are sent.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.SubmitRegistrationsRequest">
            <summary>
                Gets or sets the SubmitRegistrationsRequest. SubmitRegistrationsRequest is sent to the registry by an agency
                or data/metadata provider to request one or more registrations for a data set or metadata set. The data source to
                be registered must be accessible to the registry services at an indicated URL, so that it can be processed by those
                services.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.SubmitRegistrationsResponse">
            <summary>
                Gets or sets the SubmitRegistrationsResponse. SubmitRegistrationsResponse is sent to the agency or
                data/metadata provider in response to a submit registrations request. It indicates the success or failure of each
                registration request, and contains any error messages generated by the registration service.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.SubmitStructureRequest">
            <summary>
                Gets or sets the SubmitStructureRequest. SubmitStructureRequest is used to submit structure definitions to
                the repository. The structure resources (key families, agencies, concepts and concept schemes, code lists, etc.) to
                be submitted may be communicated in-line or be supplied in a referenced SDMX-ML Structure messages external to the
                registry. A response will indicate status and contain any relevant error information.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.SubmitStructureResponse">
            <summary>
                Gets or sets the SubmitStructureResponse. SubmitStructureResponse is returned by the registry when a
                structure submission request is received. It indicates the status of the submission, and carries any error messages
                which are generated, if relevant.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.SubmitSubscriptionsRequest">
            <summary>
                Gets or sets the SubmitSubscriptionsRequest. SubmitSubscriptionsRequest contains one or more requests
                submitted to the registry to subscribe to registration and change events for specific registry resources.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.SubmitSubscriptionsResponse">
            <summary>
                Gets or sets the SubmitSubscriptionsResponse. SubmitSubscriptionsResponse is the response to a submit
                subscriptions request. It contains information which describes the success or failure of each subscription request,
                providing any error messages in the event of failure. If successful, it returns the registry URN of the
                subscription, and the subscriber-assigned ID.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.RegistryInterfaceType.#ctor">
            <summary>
            <para>
            This is a type which describes a structure for holding all of the various dedicated registry interface message types.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType">
            <summary>
                The reporting taxonomy query type.
            </summary>
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure">
            <summary>
                The structure.
            </summary>
            <summary>
            <para>
            StructureType defines the contents of a structure message. The payload is optional since this message may be returned from a web service with only information in the footer.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure.Footer">
            <summary>
                Gets or sets the footer.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure.Structures">
            <summary>
                Gets or sets the structures.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure.Load(System.Xml.XmlReader)">
            <summary>
                Load error message to a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure" /> object
            </summary>
            <param name="xmlFile">The input file</param>
            <returns>a LINQ2XSD <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure" /> object</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure.#ctor">
            <summary>
            <para>
            StructureType defines the contents of a structure message. The payload is optional since this message may be returned from a web service with only information in the footer.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Structure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType)">
            <summary>
            <para>
            StructureType defines the contents of a structure message. The payload is optional since this message may be returned from a web service with only information in the footer.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType">
            <summary>
                The structure set query type.
            </summary>
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType.#ctor">
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType">
            <summary>
                The structure specific metadata type.
            </summary>
            <summary>
            <para>
            StructureSpecificMetadataType defines the structure of a structure specific metadata message. Note that the metadata set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType._dataSetType">
            <summary>
                The dataset list
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.DataSet">
            <summary>
                Gets or sets the Metadata DataSet.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType.#ctor">
            <summary>
            <para>
            StructureSpecificMetadataType defines the structure of a structure specific metadata message. Note that the metadata set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType">
            <summary>
                The structures query type.
            </summary>
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query message.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.SdmxQuery">
            <summary>
                Gets or sets the Query.
            </summary>
            <remarks>
                It is named as <c>SdmxQuery</c> instead of <c>Query</c> to avoid name conflict with base <see cref="N:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query" />
            </remarks>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType.#ctor">
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType">
            <summary>
                The structure type partial class.
            </summary>
            <summary>
            <para>
            StructureType defines the contents of a structure message. The payload is optional since this message may be returned from a web service with only information in the footer.
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._contentsType">
            <summary>
                The contents type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._contentsXName">
            <summary>
                The contents element name
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._footerType">
            <summary>
                The footer type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._footerXName">
            <summary>
                The _footer element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._headerType">
            <summary>
                The header type.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._headerXName">
            <summary>
                The _header element name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType._localElementDictionary">
            <summary>
                The local element dictionary.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.validationStates">
            <summary>
                The validation states.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.#cctor">
            <summary>
                Initializes static members of the <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType" /> class.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.Header">
            <summary>
                Gets or sets the header.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.Structures">
            <summary>
                Gets or sets the structures.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.Xml#Schema#Linq#IXMetaData#LocalElementsDictionary">
            <summary>
                Gets the local elements dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.Xml#Schema#Linq#IXMetaData#GetValidationStates">
            <summary>
                Gets validation states.
            </summary>
            <returns>
                The validation states.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.BuildElementDictionary">
            <summary>
                Build element dictionary.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.InitFsm">
            <summary>
                Initialize the <c>FSM</c>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureType.#ctor">
            <summary>
            <para>
            StructureType defines the contents of a structure message. The payload is optional since this message may be returned from a web service with only information in the footer.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MessageType">
            <summary>
            <para>
            MessageType is an abstract type which is used by all of the messages, to allow inheritance of common features. Every message consists of a mandatory header, followed by optional payload (which may occur multiple times), and finally an optional footer section for conveying error, warning, and informational messages.
            </para>
            <para>
            Regular expression: (Header, any, Footer?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MessageType.#ctor">
            <summary>
            <para>
            MessageType is an abstract type which is used by all of the messages, to allow inheritance of common features. Every message consists of a mandatory header, followed by optional payload (which may occur multiple times), and finally an optional footer section for conveying error, warning, and informational messages.
            </para>
            <para>
            Regular expression: (Header, any, Footer?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MessageType.Header">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Header, any, Footer?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MessageType.Any">
            <summary>
            <para>
            Regular expression: (Header, any, Footer?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MessageType.Footer">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Header, any, Footer?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataType">
            <summary>
            <para>
            GenericTimeSeriesDataType defines the structure of the generic time series data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataType.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataType defines the structure of the generic time series data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataType">
            <summary>
            <para>
            StructureSpecificDataType defines the structure of the structure specific data message. Note that the data set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataType.#ctor">
            <summary>
            <para>
            StructureSpecificDataType defines the structure of the structure specific data message. Note that the data set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataType">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataType defines the structure of the structure specific time series data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataType.#ctor">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataType defines the structure of the structure specific time series data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsRequestType">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the structure of a registry submit registration requests document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsRequestType.#ctor">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the structure of a registry submit registration requests document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsResponseType">
            <summary>
            <para>
            SubmitRegistrationsResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsResponseType.#ctor">
            <summary>
            <para>
            SubmitRegistrationsResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationRequestType">
            <summary>
            <para>
            QueryRegistrationRequestType defines the structure of a registry query registration request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationRequestType.#ctor">
            <summary>
            <para>
            QueryRegistrationRequestType defines the structure of a registry query registration request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationResponseType">
            <summary>
            <para>
            SubmitRegistrationRequestType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationResponseType.#ctor">
            <summary>
            <para>
            SubmitRegistrationRequestType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureRequestType">
            <summary>
            <para>
            SubmitStructureRequestType defines the structure of a registry submit structure request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureRequestType.#ctor">
            <summary>
            <para>
            SubmitStructureRequestType defines the structure of a registry submit structure request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureResponseType">
            <summary>
            <para>
            SubmitStructureResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureResponseType.#ctor">
            <summary>
            <para>
            SubmitStructureResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsRequestType">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the structure of a registry submit subscription request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsRequestType.#ctor">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the structure of a registry submit subscription request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsResponseType">
            <summary>
            <para>
            SubmitSubscriptionsResponseType defines the structure of a registry submit subscription response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsResponseType.#ctor">
            <summary>
            <para>
            SubmitSubscriptionsResponseType defines the structure of a registry submit subscription response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionRequestType">
            <summary>
            <para>
            QuerySubscriptionRequestType defines the structure of a registry query subscription request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionRequestType.#ctor">
            <summary>
            <para>
            QuerySubscriptionRequestType defines the structure of a registry query subscription request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionResponseType">
            <summary>
            <para>
            QuerySubscriptionResponseType defines the structure of a registry query subscription response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionResponseType.#ctor">
            <summary>
            <para>
            QuerySubscriptionResponseType defines the structure of a registry query subscription response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.NotifyRegistryEventType">
            <summary>
            <para>
            NotifyRegistryEventType defines the structure of a registry notification document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.NotifyRegistryEventType.#ctor">
            <summary>
            <para>
            NotifyRegistryEventType defines the structure of a registry notification document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataQueryType">
            <summary>
            <para>
            DataQueryType defines the structure of a generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataQueryType.#ctor">
            <summary>
            <para>
            DataQueryType defines the structure of a generic data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataQueryType">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataQueryType.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataQueryType">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataQueryType.#ctor">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ErrorType">
            <summary>
            <para>
            ErrorType describes the structure of an error response.
            </para>
            <para>
            Regular expression: (ErrorMessage+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ErrorType.#ctor">
            <summary>
            <para>
            ErrorType describes the structure of an error response.
            </para>
            <para>
            Regular expression: (ErrorMessage+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ErrorType.ErrorMessage">
            <summary>
            <para>
            ErrorMessage contains the error message. It can occur multiple times to communicate message for multiple errors, or to communicate the error message in parallel languages. If both messages for multiple errors and parallel language messages are used, then each error message should be given a code in order to distinguish message for unique errors.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ErrorMessage+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureHeaderType">
            <summary>
            <para>
            StructureHeaderType defines the structure for structural metadata messages.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureHeaderType.#ctor">
            <summary>
            <para>
            StructureHeaderType defines the structure for structural metadata messages.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataHeaderType">
            <summary>
            <para>
            GenericDataHeaderType defines the header structure for a generic data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataHeaderType.#ctor">
            <summary>
            <para>
            GenericDataHeaderType defines the header structure for a generic data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataHeaderType">
            <summary>
            <para>
            GenericTimeSeriesDataHeaderType defines the header structure for a time series only generic data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataHeaderType.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataHeaderType defines the header structure for a time series only generic data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataHeaderType">
            <summary>
            <para>
            StructureSpecificDataHeaderType defines the header structure for a structure specific data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataHeaderType.#ctor">
            <summary>
            <para>
            StructureSpecificDataHeaderType defines the header structure for a structure specific data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataHeaderType">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataHeaderType defines the header structure for a time series only structure specific data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataHeaderType.#ctor">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataHeaderType defines the header structure for a time series only structure specific data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataHeaderType">
            <summary>
            <para>
            GenericMetadataHeaderType defines the header format for generic reference metadata.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataHeaderType.#ctor">
            <summary>
            <para>
            GenericMetadataHeaderType defines the header format for generic reference metadata.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataHeaderType">
            <summary>
            <para>
            StructureSpecificMetadataHeaderType defines the header format for metadata structure definition specific reference metadata messages.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataHeaderType.#ctor">
            <summary>
            <para>
            StructureSpecificMetadataHeaderType defines the header format for metadata structure definition specific reference metadata messages.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BasicHeaderType">
            <summary>
            <para>
            BasicHeaderType defines the most basic header information used in simple message exchanges.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.BasicHeaderType.#ctor">
            <summary>
            <para>
            BasicHeaderType defines the most basic header information used in simple message exchanges.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.PartyType">
            <summary>
            <para>
            PartyType defines the information which is sent about various parties such as senders and receivers of messages.
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.PartyType.#ctor">
            <summary>
            <para>
            PartyType defines the information which is sent about various parties such as senders and receivers of messages.
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.PartyType.Name">
            <summary>
            <para>
            Name is a human-readable name of the party.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.PartyType.Contact">
            <summary>
            <para>
            Contact provides contact information for the party in regard to the transmission of the message.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.PartyType.id">
            <summary>
            <para>
            The id attribute holds the identification of the party.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SenderType">
            <summary>
            <para>
            SenderType extends the basic party structure to add an optional time zone declaration.
            </para>
            <para>
            Regular expression: (Name*, Contact*, Timezone?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SenderType.#ctor">
            <summary>
            <para>
            SenderType extends the basic party structure to add an optional time zone declaration.
            </para>
            <para>
            Regular expression: (Name*, Contact*, Timezone?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SenderType.Timezone">
            <summary>
            <para>
            Timezone specifies the time zone of the sender, and if specified can be applied to all un-time zoned time values in the message. In the absence of this, any dates without time zone are implied to be in an indeterminate "local time".
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Name*, Contact*, Timezone?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType">
            <summary>
            <para>
            ContactType provides defines the contact information about a party.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.#ctor">
            <summary>
            <para>
            ContactType provides defines the contact information about a party.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.Name">
            <summary>
            <para>
            Name contains a human-readable name for the contact.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.Department">
            <summary>
            <para>
            Department is designation of the organisational structure by a linguistic expression, within which the contact person works.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.Role">
            <summary>
            <para>
            Role is the responsibility of the contact person with respect to the object for which this person is the contact.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.Telephone">
            <summary>
            <para>
            Telephone holds the telephone number for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.Fax">
            <summary>
            <para>
            Fax holds the fax number for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.X400">
            <summary>
            <para>
            X400 holds the X.400 address for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.URI">
            <summary>
            <para>
            URI holds an information URL for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ContactType.Email">
            <summary>
            <para>
            Email holds the email address for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HeaderTimeType">
            <summary>
            <para>
            Provides a union type of xs:date and xs:dateTime for the header fields in the message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericData">
            <summary>
            <para>
            GenericDataType defines the contents of a generic data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericData.#ctor">
            <summary>
            <para>
            GenericDataType defines the contents of a generic data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataType)">
            <summary>
            <para>
            GenericDataType defines the contents of a generic data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesData">
            <summary>
            <para>
            GenericTimeSeriesDataType defines the structure of the generic time series data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesData.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataType defines the structure of the generic time series data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataType)">
            <summary>
            <para>
            GenericTimeSeriesDataType defines the structure of the generic time series data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificData">
            <summary>
            <para>
            StructureSpecificDataType defines the structure of the structure specific data message. Note that the data set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificData.#ctor">
            <summary>
            <para>
            StructureSpecificDataType defines the structure of the structure specific data message. Note that the data set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataType)">
            <summary>
            <para>
            StructureSpecificDataType defines the structure of the structure specific data message. Note that the data set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesData">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataType defines the structure of the structure specific time series data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesData.#ctor">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataType defines the structure of the structure specific time series data message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesData.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataType)">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataType defines the structure of the structure specific time series data message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadata">
            <summary>
            <para>
            GenericMetadataType defines the contents of a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadata.#ctor">
            <summary>
            <para>
            GenericMetadataType defines the contents of a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadata.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataType)">
            <summary>
            <para>
            GenericMetadataType defines the contents of a generic metadata message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadata">
            <summary>
            <para>
            StructureSpecificMetadataType defines the structure of a structure specific metadata message. Note that the metadata set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadata.#ctor">
            <summary>
            <para>
            StructureSpecificMetadataType defines the structure of a structure specific metadata message. Note that the metadata set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadata.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataType)">
            <summary>
            <para>
            StructureSpecificMetadataType defines the structure of a structure specific metadata message. Note that the metadata set payload type is abstract, and therefore it will have to be assigned a type in an instance. This type must be derived from the base type referenced. This base type defines a general structure which can be followed to allow for generic processing of the data even if the exact details of the data structure specific format are not known.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsRequest">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the structure of a registry submit registration requests document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsRequest.#ctor">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the structure of a registry submit registration requests document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsRequest.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsRequestType)">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the structure of a registry submit registration requests document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsResponse">
            <summary>
            <para>
            SubmitRegistrationsResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsResponse.#ctor">
            <summary>
            <para>
            SubmitRegistrationsResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsResponse.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitRegistrationsResponseType)">
            <summary>
            <para>
            SubmitRegistrationsResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationRequest">
            <summary>
            <para>
            QueryRegistrationRequestType defines the structure of a registry query registration request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationRequest.#ctor">
            <summary>
            <para>
            QueryRegistrationRequestType defines the structure of a registry query registration request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationRequest.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationRequestType)">
            <summary>
            <para>
            QueryRegistrationRequestType defines the structure of a registry query registration request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationResponse">
            <summary>
            <para>
            SubmitRegistrationRequestType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationResponse.#ctor">
            <summary>
            <para>
            SubmitRegistrationRequestType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationResponse.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QueryRegistrationResponseType)">
            <summary>
            <para>
            SubmitRegistrationRequestType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureRequest">
            <summary>
            <para>
            SubmitStructureRequestType defines the structure of a registry submit structure request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureRequest.#ctor">
            <summary>
            <para>
            SubmitStructureRequestType defines the structure of a registry submit structure request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureRequest.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureRequestType)">
            <summary>
            <para>
            SubmitStructureRequestType defines the structure of a registry submit structure request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureResponse">
            <summary>
            <para>
            SubmitStructureResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureResponse.#ctor">
            <summary>
            <para>
            SubmitStructureResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureResponse.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitStructureResponseType)">
            <summary>
            <para>
            SubmitStructureResponseType defines the structure of a registry submit registration response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsRequest">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the structure of a registry submit subscription request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsRequest.#ctor">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the structure of a registry submit subscription request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsRequest.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsRequestType)">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the structure of a registry submit subscription request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsResponse">
            <summary>
            <para>
            SubmitSubscriptionsResponseType defines the structure of a registry submit subscription response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsResponse.#ctor">
            <summary>
            <para>
            SubmitSubscriptionsResponseType defines the structure of a registry submit subscription response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsResponse.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.SubmitSubscriptionsResponseType)">
            <summary>
            <para>
            SubmitSubscriptionsResponseType defines the structure of a registry submit subscription response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionRequest">
            <summary>
            <para>
            QuerySubscriptionRequestType defines the structure of a registry query subscription request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionRequest.#ctor">
            <summary>
            <para>
            QuerySubscriptionRequestType defines the structure of a registry query subscription request document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionRequest.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionRequestType)">
            <summary>
            <para>
            QuerySubscriptionRequestType defines the structure of a registry query subscription request document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionResponse">
            <summary>
            <para>
            QuerySubscriptionResponseType defines the structure of a registry query subscription response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionResponse.#ctor">
            <summary>
            <para>
            QuerySubscriptionResponseType defines the structure of a registry query subscription response document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionResponse.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.QuerySubscriptionResponseType)">
            <summary>
            <para>
            QuerySubscriptionResponseType defines the structure of a registry query subscription response document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.NotifyRegistryEvent">
            <summary>
            <para>
            NotifyRegistryEventType defines the structure of a registry notification document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.NotifyRegistryEvent.#ctor">
            <summary>
            <para>
            NotifyRegistryEventType defines the structure of a registry notification document.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.NotifyRegistryEvent.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.NotifyRegistryEventType)">
            <summary>
            <para>
            NotifyRegistryEventType defines the structure of a registry notification document.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataQuery">
            <summary>
            <para>
            DataQueryType defines the structure of a data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataQuery.#ctor">
            <summary>
            <para>
            DataQueryType defines the structure of a data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificDataQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataQueryType)">
            <summary>
            <para>
            DataQueryType defines the structure of a data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataQuery">
            <summary>
            <para>
            DataQueryType defines the structure of a generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataQuery.#ctor">
            <summary>
            <para>
            DataQueryType defines the structure of a generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericDataQueryType)">
            <summary>
            <para>
            DataQueryType defines the structure of a generic data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataQuery">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataQuery.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericTimeSeriesDataQueryType)">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataQuery">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataQuery.#ctor">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificTimeSeriesDataQueryType)">
            <summary>
            <para>
            StructureSpecificTimeSeriesDataQueryType defines the structure of a time series generic data query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataQuery">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataQuery.#ctor">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.GenericMetadataQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType)">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataQuery">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataQuery.#ctor">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSpecificMetadataQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataQueryType)">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQuery">
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a data schema query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQuery.#ctor">
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a data schema query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataSchemaQueryType)">
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a data schema query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQuery">
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a metadata schema query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQuery.#ctor">
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a metadata schema query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataSchemaQueryType)">
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a metadata schema query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQuery">
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQuery.#ctor">
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructuresQueryType)">
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQuery">
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQuery.#ctor">
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataflowQueryType)">
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQuery">
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadata flow query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQuery.#ctor">
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadata flow query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataflowQueryType)">
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadata flow query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQuery">
            <summary>
            <para>
            KeyFamilyQueryType defines the structure of a data structure query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQuery.#ctor">
            <summary>
            <para>
            KeyFamilyQueryType defines the structure of a data structure query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.DataStructureQueryType)">
            <summary>
            <para>
            KeyFamilyQueryType defines the structure of a data structure query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQuery">
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQuery.#ctor">
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.MetadataStructureQueryType)">
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQuery">
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQuery.#ctor">
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorySchemeQueryType)">
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQuery">
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a concept scheme query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQuery.#ctor">
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a concept scheme query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConceptSchemeQueryType)">
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a concept scheme query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQuery">
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQuery.#ctor">
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CodelistQueryType)">
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQuery">
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQuery.#ctor">
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.HierarchicalCodelistQueryType)">
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQuery">
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQuery.#ctor">
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.OrganisationSchemeQueryType)">
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQuery">
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQuery.#ctor">
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ReportingTaxonomyQueryType)">
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQuery">
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQuery.#ctor">
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.StructureSetQueryType)">
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQuery">
            <summary>
            <para>
            CategorizationQueryType defines the structure of a categorization query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQuery.#ctor">
            <summary>
            <para>
            CategorizationQueryType defines the structure of a categorization query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProcessQueryType)">
            <summary>
            <para>
            CategorizationQueryType defines the structure of a categorization query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQuery">
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQuery.#ctor">
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.CategorisationQueryType)">
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQuery">
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQuery.#ctor">
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ProvisionAgreementQueryType)">
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQuery">
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQuery.#ctor">
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQuery.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.ConstraintQueryType)">
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query message.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterType">
            <summary>
            <para>
            FooterType describes the structure of a message footer. The footer is used to convey any error, information, or warning messages. This is to be used when the message has payload, but also needs to communicate additional information. If an error occurs and no payload is generated, an Error message should be returned.
            </para>
            <para>
            Regular expression: (Message+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterType.#ctor">
            <summary>
            <para>
            FooterType describes the structure of a message footer. The footer is used to convey any error, information, or warning messages. This is to be used when the message has payload, but also needs to communicate additional information. If an error occurs and no payload is generated, an Error message should be returned.
            </para>
            <para>
            Regular expression: (Message+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterType.Message">
            <summary>
            <para>
            Message contains a single error, information, or warning message. A code is provided along with an optional severity. The text of the message can be expressed in multiple languages.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Message+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterMessageType">
            <summary>
            <para>
            FooterMessageType defines the structure of a message that is contained in the footer of a message. It is a status message that have a severity code of Error, Information, or Warning added to it.
            </para>
            <para>
            Regular expression: (Text+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterMessageType.#ctor">
            <summary>
            <para>
            FooterMessageType defines the structure of a message that is contained in the footer of a message. It is a status message that have a severity code of Error, Information, or Warning added to it.
            </para>
            <para>
            Regular expression: (Text+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterMessageType.severity">
            <summary>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.Footer">
            <summary>
            <para>
            FooterType describes the structure of a message footer. The footer is used to convey any error, information, or warning messages. This is to be used when the message has payload, but also needs to communicate additional information. If an error occurs and no payload is generated, an Error message should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.Footer.#ctor">
            <summary>
            <para>
            FooterType describes the structure of a message footer. The footer is used to convey any error, information, or warning messages. This is to be used when the message has payload, but also needs to communicate additional information. If an error occurs and no payload is generated, an Error message should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.Footer.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.FooterType)">
            <summary>
            <para>
            FooterType describes the structure of a message footer. The footer is used to convey any error, information, or warning messages. This is to be used when the message has payload, but also needs to communicate additional information. If an error occurs and no payload is generated, an Error message should be returned.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Message.Footer.Footer.Message">
            <summary>
            <para>
            Message contains a single error, information, or warning message. A code is provided along with an optional severity. The text of the message can be expressed in multiple languages.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Message+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MessageFactory">
            <summary>
                Load SDMX Messages into memory objects
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MessageFactory.Load``2(System.Xml.XmlReader)">
            <summary>
                Load SDMX-ML v2.1 from <paramref name="reader" /> and return it in <typeparamref name="TW" />
            </summary>
            <typeparam name="TW">
                The element CLR type
            </typeparam>
            <typeparam name="T">
                The element XSD type CLR type
            </typeparam>
            <param name="reader">
                The input <see cref="T:System.Xml.XmlReader" />
            </param>
            <returns>
                The SDMX-ML v2.1 from <paramref name="reader" /> as <typeparamref name="TW" />
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType">
            <summary>
                <para>
                    ConstraintType is an abstract base type that specific types of constraints (content and attachment) restrict
                    and extend to describe their details. The inclusion of a key or region in a constraint is determined by first
                    processing the included key sets, and then removing those keys defined in the excluded key sets. If no included
                    key sets are defined, then it is assumed the all possible keys or regions are included, and any excluded key or
                    regions are removed from this complete set.
                </para>
                <para>
                    Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet |
                    CubeRegion | MetadataTargetRegion)*)
                </para>
            </summary>
            <summary>
            <para>
            ConstraintType is an abstract base type that specific types of constraints (content and attachment) restrict and extend to describe their details. The inclusion of a key or region in a constraint is determined by first processing the included key sets, and then removing those keys defined in the excluded key sets. If no included key sets are defined, then it is assumed the all possible keys or regions are included, and any excluded key or regions are removed from this complete set.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType._constraintAttachment">
            <summary>
                The _constraint attachment.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.GetConstraintAttachmentType``1">
            <summary>
                <para>
                    ConstraintAttachment describes the collection of constrainable artefacts that the constraint is attached to.
                </para>
                <para>
                    Occurrence: optional
                </para>
                <para>
                    Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet |
                    CubeRegion | MetadataTargetRegion)*)
                </para>
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType" /> based type</typeparam>
            <returns>The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType" /> based instance.</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.#ctor">
            <summary>
            <para>
            ConstraintType is an abstract base type that specific types of constraints (content and attachment) restrict and extend to describe their details. The inclusion of a key or region in a constraint is determined by first processing the included key sets, and then removing those keys defined in the excluded key sets. If no included key sets are defined, then it is assumed the all possible keys or regions are included, and any excluded key or regions are removed from this complete set.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.ConstraintAttachment">
            <summary>
            <para>
            ConstraintAttachment describes the collection of constrainable artefacts that the constraint is attached to.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.DataKeySet">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.MetadataKeySet">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.CubeRegion">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintType.MetadataTargetRegion">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableType">
            <summary>
            <para>
            IdentifiableType is an abstract base type for all identifiable objects.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableType.#ctor">
            <summary>
            <para>
            IdentifiableType is an abstract base type for all identifiable objects.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableType.id">
            <summary>
            <para>
            The id is the identifier for the object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableType.urn">
            <summary>
            <para>
            The urn attribute holds a valid SDMX Registry URN (see SDMX Registry Specification for details).
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableType.uri">
            <summary>
            <para>
            The uri attribute holds a URI that contains a link to a resource with additional information about the object, such as a web page. This uri is not a SDMX message.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.NameableType">
            <summary>
            <para>
            NameableType is an abstract base type for  all nameable objects.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.NameableType.#ctor">
            <summary>
            <para>
            NameableType is an abstract base type for  all nameable objects.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.NameableType.Name">
            <summary>
            <para>
            Name provides for a human-readable name for the object. This may be provided in multiple, parallel language-equivalent forms.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.NameableType.Description">
            <summary>
            <para>
            Description provides for a longer human-readable description of the object. This may be provided in multiple, parallel language-equivalent forms.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.VersionableType">
            <summary>
            <para>
            VersionableType is an abstract base type for all versionable objects.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.VersionableType.#ctor">
            <summary>
            <para>
            VersionableType is an abstract base type for all versionable objects.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.VersionableType.version">
            <summary>
            <para>
            This version attribute holds a version number in the format of #[.#]+ (see common:VersionType definition for details). If not supplied, the version number is defaulted to 1.0.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.VersionableType.validFrom">
            <summary>
            <para>
            The validFrom attribute provides the inclusive start date for providing supplemental validity information about the version.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.VersionableType.validTo">
            <summary>
            <para>
            The validTo attribute provides the inclusive end date for providing supplemental validity information about the version.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableBaseType">
            <summary>
            <para>
            MaintainableBaseType is an abstract type that only serves the purpose of forming the base for the actual MaintainableType. The purpose of this type is to restrict the VersionableType to require the id attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableBaseType.#ctor">
            <summary>
            <para>
            MaintainableBaseType is an abstract type that only serves the purpose of forming the base for the actual MaintainableType. The purpose of this type is to restrict the VersionableType to require the id attribute.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType">
            <summary>
            <para>
            MaintainableType is an abstract base type for all maintainable objects.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType.#ctor">
            <summary>
            <para>
            MaintainableType is an abstract base type for all maintainable objects.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType.agencyID">
            <summary>
            <para>
            The agencyID must be provided, and identifies the maintenance agency of the object.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType.isFinal">
            <summary>
            <para>
            The isFinal attribute indicates whether the object is unchangeable without versioning. If the value is true, the object must be versioned upon change. If the final attribute is not supplied, then the object is assumed not to be final. Note that all production objects must be final.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType.isExternalReference">
            <summary>
            <para>
            The isExternalReference attribute, if true, indicates that the actual object is not defined the corresponding element, rather its full details are defined elsewhere - indicated by either the registryURL, the repositoryURL, or the structureURL. The purpose of this is so that each structure message does not have to redefine object that are already defined elsewhere. If the isExternalReference attribute is not set, then it is assumed to be false, and the object should contain the full definition of its contents. If more than one of the registryURL, the repositoryURL, and the structureURL are supplied, then the application processing the object can choose the method it finds best suited to retrieve the details of the object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType.serviceURL">
            <summary>
            <para>
            The serviceURL attribute indicates the URL of an SDMX SOAP web service from which the details of the object can be retrieved. Note that this can be a registry or and SDMX structural metadata repository, as they both implement that same web service interface.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MaintainableType.structureURL">
            <summary>
            <para>
            The structureURL attribute indicates the URL of a SDMX-ML structure message (in the same version as the source document) in which the externally referenced object is contained. Note that this may be a URL of an SDMX RESTful web service which will return the referenced object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeType">
            <summary>
            <para>
            ItemSchemeType is an abstract base type for all item scheme objects. It contains a collection of items. Concrete instances of this type should restrict the actual types of items allowed within the scheme.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Item)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeType.#ctor">
            <summary>
            <para>
            ItemSchemeType is an abstract base type for all item scheme objects. It contains a collection of items. Concrete instances of this type should restrict the actual types of items allowed within the scheme.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Item)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeType.Item">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Item, Category, Code, Concept, Organisation, Agency, DataConsumer, DataProvider, OrganisationUnit, ReportingCategory
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Item)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeType.isPartial">
            <summary>
            <para>
            The isPartial, if true, indicates that only the relevant portion of the item scheme is being communicated. This is used in cases where a codelist is returned for a key family in the context of a constraint.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemBaseType">
            <summary>
            <para>
            ItemBaseType is an abstract base type that forms the basis for the ItemType. It requires that at least an id be supplied for an item.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemBaseType.#ctor">
            <summary>
            <para>
            ItemBaseType is an abstract base type that forms the basis for the ItemType. It requires that at least an id be supplied for an item.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType">
            <summary>
            <para>
            ItemType is an abstract base type for all items with in an item scheme. Concrete instances of this type may or may not utilize the nested item, but if so should restrict the actual types of item allowed.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent | (Item)+)?)
            </para>
            </summary>
            <summary>
                The item type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType.#ctor">
            <summary>
            <para>
            ItemType is an abstract base type for all items with in an item scheme. Concrete instances of this type may or may not utilize the nested item, but if so should restrict the actual types of item allowed.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent | (Item)+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType.Parent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent | (Item)+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType.Item">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Item, Category, Code, Concept, Organisation, Agency, DataConsumer, DataProvider, OrganisationUnit, ReportingCategory
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent | (Item)+)?)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType._parentName">
            <summary>
                The Parent element name
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType.GetTypedParent``1">
            <summary>
                Gets the typed parent.
            </summary>
            <typeparam name="T">The type of the parent.</typeparam>
            <returns>The parent item of this item; otherwise null.</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType.SetTypedParent``1(``0)">
            <summary>
                Sets the typed parent.
            </summary>
            <typeparam name="T">The type of the parent.</typeparam>
            <param name="value">The value.</param>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureType">
            <summary>
            <para>
            StructureType is an abstract base type for all structure objects. Concrete instances of this should restrict to a concrete grouping.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Grouping)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureType.#ctor">
            <summary>
            <para>
            StructureType is an abstract base type for all structure objects. Concrete instances of this should restrict to a concrete grouping.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Grouping)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureType.Grouping">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Grouping, DataStructureComponents, MetadataStructureComponents
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Grouping)?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupingType">
            <summary>
            <para>
            GroupType is an abstract base type for specific structure groupings. It contains a collection of component lists. Concrete instances of this should restrict to specific concrete component lists.
            </para>
            <para>
            Regular expression: ((ComponentList)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupingType.#ctor">
            <summary>
            <para>
            GroupType is an abstract base type for specific structure groupings. It contains a collection of component lists. Concrete instances of this should restrict to specific concrete component lists.
            </para>
            <para>
            Regular expression: ((ComponentList)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupingType.ComponentList">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ComponentList, AttributeList, DimensionList, Group, MeasureList, MetadataTarget, ReportStructure
            </para>
            <para>
            Regular expression: ((ComponentList)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentListType">
            <summary>
            <para>
            ComponentListType is an abstract base type for all component lists. It contains a collection of components. Concrete types should restrict this to specific concrete components.
            </para>
            <para>
            Regular expression: (Annotations?, (Component)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentListType.#ctor">
            <summary>
            <para>
            ComponentListType is an abstract base type for all component lists. It contains a collection of components. Concrete types should restrict this to specific concrete components.
            </para>
            <para>
            Regular expression: (Annotations?, (Component)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentListType.Component">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Component, Attribute, ReportingYearStartDay, Dimension, TimeDimension, MeasureDimension, GroupDimension, PrimaryMeasure, KeyDescriptorValuesTarget, DataSetTarget, ConstraintContentTarget, ReportPeriodTarget, IdentifiableObjectTarget, MetadataAttribute
            </para>
            <para>
            Regular expression: (Annotations?, (Component)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentBaseType">
            <summary>
            <para>
            ComponentBaseType is an abstract type that only serves the purpose of forming the base for the actual ComponentType. It only restricts the format of the id attribute to the NCNameIDType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentBaseType.#ctor">
            <summary>
            <para>
            ComponentBaseType is an abstract type that only serves the purpose of forming the base for the actual ComponentType. It only restricts the format of the id attribute to the NCNameIDType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType">
            <summary>
            <para>
            ComponentType is an abstract base type for all components. It contains information pertaining to a component, including an optional reference to a concept, an optional role played by the concept, an optional text format description, and an optional local representation.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
            <summary>
                The component type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType.#ctor">
            <summary>
            <para>
            ComponentType is an abstract base type for all components. It contains information pertaining to a component, including an optional reference to a concept, an optional role played by the concept, an optional text format description, and an optional local representation.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType.ConceptIdentity">
            <summary>
            <para>
            ConceptIdentity allows for the referencing of a concept in a concept scheme. The component takes its semantic from this concept, and if an id is not specified, it takes its identification as well. If a representation (LocalRepresentation) is not supplied, then the representation of the component is also inherited from the concept. Note that in the case of the component representation being inherited from the concept, the allowable representations for the component still apply. Therefore, if a component references a concept with a core representation that is not allowed for the concept, that representation must be locally overridden. For components which can specify a concept role, it is implied that the concept which is referenced also identifies a role for the component.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType.LocalRepresentation">
            <summary>
            <para>
            LocalRepresentation references item schemes that may be used to create the representation of a component. The type of this must be refined such that a concrete item scheme reference is used.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType._referenceName">
            <summary>
                The reference element name
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType.GetTypedLocalRepresentation``1">
            <summary>
                <para>
                    Gets the LocalRepresentation references item schemes that may be used to create the representation of a
                    component. The type of this must be refined such that a concrete item scheme reference is used.
                </para>
                <para>
                    Occurrence: optional
                </para>
                <para>
                    Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
                </para>
            </summary>
            <typeparam name="T">
                The type of the return value
            </typeparam>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType.SetTypedLocalRepresentation``1(``0)">
            <summary>
                <para>
                    Sets the LocalRepresentation references item schemes that may be used to create the representation of a
                    component. The type of this must be refined such that a concrete item scheme reference is used.
                </para>
                <para>
                    Occurrence: optional
                </para>
                <para>
                    Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
                </para>
            </summary>
            <typeparam name="T">
                The type of <paramref name="value" />
            </typeparam>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureUsageType">
            <summary>
            <para>
            StructureUsageType is an abstract base type for all structure usages. It contains a reference to a structure. Concrete instances of this type should restrict the type of structure referenced.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Structure?)
            </para>
            </summary>
            <summary>
                The structure usage type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureUsageType.#ctor">
            <summary>
            <para>
            StructureUsageType is an abstract base type for all structure usages. It contains a reference to a structure. Concrete instances of this type should restrict the type of structure referenced.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Structure?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureUsageType.Structure">
            <summary>
            <para>
            Structure references the structure (data structure or metadata structure definition) which the structure usage is based upon. Implementations will have to refine the type to use a concrete structure reference (i.e. either a data structure or metadata structure definition reference).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Structure?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureUsageType.GetStructure``1">
            <summary>
                Gets the Structure
                <para>
                    Structure references the structure (data structure or metadata structure definition) which the structure usage
                    is based upon. Implementations will have to refine the type to use a concrete structure reference (i.e. either
                    a data structure or metadata structure definition reference).
                </para>
            </summary>
            <typeparam name="T">
                The type of the return value
            </typeparam>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureUsageType.SetStructure``1(``0)">
            <summary>
                Sets the Structure
                <para>
                    Structure references the structure (data structure or metadata structure definition) which the structure usage
                    is based upon. Implementations will have to refine the type to use a concrete structure reference (i.e. either
                    a data structure or metadata structure definition reference).
                </para>
            </summary>
            <typeparam name="T">
                The type of <paramref name="value" />
            </typeparam>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.UsageStatusType">
            <summary>
            <para>
            UsageStatusType provides a list of enumerated types for indicating whether reporting a given attribute is mandatory or conditional.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType">
            <summary>
            <para>
            RepresentationType is an abstract type that defines a representation. Because the type of item schemes that are allowed as the an enumeration vary based on the object in which this is defined, this type is abstract to force that The enumeration reference be restricted to the proper type of item scheme reference.
            </para>
            <para>
            Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
            </para>
            </summary>
            <summary>
                <para>
                    RepresentationType is an abstract type that defines a representation. Because the type of item schemes that are
                    allowed as the an enumeration vary based on the object in which this is defined, this type is abstract to force
                    that The enumeration reference be restricted to the proper type of item scheme reference.
                </para>
                <para>
                    Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.#ctor">
            <summary>
            <para>
            RepresentationType is an abstract type that defines a representation. Because the type of item schemes that are allowed as the an enumeration vary based on the object in which this is defined, this type is abstract to force that The enumeration reference be restricted to the proper type of item scheme reference.
            </para>
            <para>
            Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.TextFormat">
            <summary>
            <para>
            TextFormat describes an uncoded textual format.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.Enumeration">
            <summary>
            <para>
            Enumeration references an item scheme that enumerates the allowable values for this representation.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.EnumerationFormat">
            <summary>
            <para>
            EnumerationFormat describes the facets of the item scheme enumeration. This is for the most part, informational.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType._referenceName">
            <summary>
                The reference element name
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.CodelistEnumeration">
            <summary>
                Gets the codelist enumeration.
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.ConceptSchemeEnumeration">
            <summary>
                Gets the concept scheme enumeration.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.GetTypedEnumeration``1">
            <summary>
                <para>
                    Enumeration references an item scheme that enumerates the allowable values for this representation.
                </para>
                <para>
                    Occurrence: required
                </para>
                <para>
                    Setter: Appends
                </para>
                <para>
                    Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
                </para>
            </summary>
            <typeparam name="T">
                The type of the return value
            </typeparam>
            <returns>
                The <see cref="!:T" />.
            </returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationType.SetTypedEnumeration``1(``0)">
            <summary>
                <para>
                    Enumeration references an item scheme that enumerates the allowable values for this representation.
                </para>
                <para>
                    Occurrence: required
                </para>
                <para>
                    Setter: Appends
                </para>
                <para>
                    Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
                </para>
            </summary>
            <typeparam name="T">
                The type of value
            </typeparam>
            <param name="value">
                The value.
            </param>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType">
            <summary>
            <para>
            TextFormatType defines the information for describing a full range of text formats and may place restrictions on the values of the other attributes, referred to as "facets".
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.#ctor">
            <summary>
            <para>
            TextFormatType defines the information for describing a full range of text formats and may place restrictions on the values of the other attributes, referred to as "facets".
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.textType">
            <summary>
            <para>
            The textType attribute provides a description of the datatype. If it is not specified, any valid characters may be included in the text field (it corresponds to the xs:string datatype of W3C XML Schema) within the constraints of the facets.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.isSequence">
            <summary>
            <para>
            The isSequence attribute indicates whether the values are intended to be ordered, and it may work in combination with the interval, startValue, and endValue attributes or the timeInterval, startTime, and endTime, attributes. If this attribute holds a value of true, a start value or time and a numeric or time interval must supplied. If an end value is not given, then the sequence continues indefinitely.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.interval">
            <summary>
            <para>
            The interval attribute specifies the permitted interval (increment) in a sequence. In order for this to be used, the isSequence attribute must have a value of true.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.startValue">
            <summary>
            <para>
            The startValue attribute is used in conjunction with the isSequence and interval attributes (which must be set in order to use this attribute). This attribute is used for a numeric sequence, and indicates the starting  point of the sequence. This value is mandatory for a numeric sequence to be expressed.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.endValue">
            <summary>
            <para>
            The endValue attribute is used in conjunction with the isSequence and interval attributes (which must be set in order to use this attribute). This attribute is used for a numeric sequence, and indicates that ending point (if any) of the sequence.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.timeInterval">
            <summary>
            <para>
            The timeInterval attribute indicates the permitted duration in a time sequence. In order for this to be used, the isSequence attribute must have a value of true.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.startTime">
            <summary>
            <para>
            The startTime attribute is used in conjunction with the isSequence and timeInterval attributes (which must be set in order to use this attribute). This attribute is used for a time sequence, and indicates the start time of the sequence. This value is mandatory for a time sequence to be expressed.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.endTime">
            <summary>
            <para>
            The endTime attribute is used in conjunction with the isSequence and timeInterval attributes (which must be set in order to use this attribute). This attribute is used for a time sequence, and indicates that ending point (if any) of the sequence.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.minLength">
            <summary>
            <para>
            The minLength attribute specifies the minimum and length of the value in characters.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.maxLength">
            <summary>
            <para>
            The maxLength attribute specifies the maximum length of the value in characters.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.minValue">
            <summary>
            <para>
            The minValue attribute is used for inclusive and exclusive ranges, indicating what the lower bound of the range is. If this is used with an inclusive range, a valid value will be greater than or equal to the value specified here. If the inclusive and exclusive data type is not specified (e.g. this facet is used with an integer data type), the value is assumed to be inclusive.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.maxValue">
            <summary>
            <para>
            The maxValue attribute is used for inclusive and exclusive ranges, indicating what the upper bound of the range is. If this is used with an inclusive range, a valid value will be less than or equal to the value specified here. If the inclusive and exclusive data type is not specified (e.g. this facet is used with an integer data type), the value is assumed to be inclusive.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.decimals">
            <summary>
            <para>
            The decimals attribute indicates the number of characters allowed after the decimal separator.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.pattern">
            <summary>
            <para>
            The pattern attribute holds any regular expression permitted in the similar facet in W3C XML Schema.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType.isMultiLingual">
            <summary>
            <para>
            The isMultiLingual attribute indicates for a text format of type "string", whether the value should allow for multiple values in different languages.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BasicComponentTextFormatType">
            <summary>
            <para>
            BasicComponentTextFormatType is a restricted version of the TextFormatType that restricts the text type to the representations allowed for all components except for target objects.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BasicComponentTextFormatType.#ctor">
            <summary>
            <para>
            BasicComponentTextFormatType is a restricted version of the TextFormatType that restricts the text type to the representations allowed for all components except for target objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.SimpleComponentTextFormatType">
            <summary>
            <para>
            SimpleComponentTextFormatType is a restricted version of the BasicComponentTextFormatType that does not allow for multi-lingual values.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.SimpleComponentTextFormatType.#ctor">
            <summary>
            <para>
            SimpleComponentTextFormatType is a restricted version of the BasicComponentTextFormatType that does not allow for multi-lingual values.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodededTextFormatType">
            <summary>
            <para>
            CodededTextFormatType is a restricted version of the SimpleComponentTextFormatType that only allows factets and text types applicable to codes. Although the time facets permit any value, an actual code identifier does not support the necessary characters for time. Therefore these facets should not contain time in their values.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodededTextFormatType.#ctor">
            <summary>
            <para>
            CodededTextFormatType is a restricted version of the SimpleComponentTextFormatType that only allows factets and text types applicable to codes. Although the time facets permit any value, an actual code identifier does not support the necessary characters for time. Therefore these facets should not contain time in their values.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeDataType">
            <summary>
            <para>
            CodeDataType is a restriction of the basic data types that are applicable to codes. Although some of the higher level time period formats are perimitted, it should be noted that any value which contains time (which includes a time zone offset) is not allowable as a code identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.NonFacetedTextFormatType">
            <summary>
            <para>
            NonFacetedTextFormatType is a restricted version of the SimpleComponentTextFormatType that does not allow for any facets.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.NonFacetedTextFormatType.#ctor">
            <summary>
            <para>
            NonFacetedTextFormatType is a restricted version of the SimpleComponentTextFormatType that does not allow for any facets.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeTextFormatType">
            <summary>
            <para>
            TimeTextFormat is a restricted version of the SimpleComponentTextFormatType that only allows time based format and specifies a default ObservationalTimePeriod representation and facets of a start and end time.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeTextFormatType.#ctor">
            <summary>
            <para>
            TimeTextFormat is a restricted version of the SimpleComponentTextFormatType that only allows time based format and specifies a default ObservationalTimePeriod representation and facets of a start and end time.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationType">
            <summary>
            <para>
            CategorisationType is defines the structure for a categorisation. A source object is referenced via an object reference and the target category is referenced via the target category.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Source, Target)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationType.#ctor">
            <summary>
            <para>
            CategorisationType is defines the structure for a categorisation. A source object is referenced via an object reference and the target category is referenced via the target category.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Source, Target)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationType.Source">
            <summary>
            <para>
            Source is a reference to an object to be categorized.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Source, Target)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationType.Target">
            <summary>
            <para>
            Target is reference to the category that the referenced object is to be mapped to.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Source, Target)?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemeType">
            <summary>
            <para>
            CategorySchemeType describes the structure of a category scheme. A category scheme is the descriptive information for an arrangement or division of categories into groups based on characteristics, which the objects have in common. This provides for a simple, leveled hierarchy or categories.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemeType.#ctor">
            <summary>
            <para>
            CategorySchemeType describes the structure of a category scheme. A category scheme is the descriptive information for an arrangement or division of categories into groups based on characteristics, which the objects have in common. This provides for a simple, leveled hierarchy or categories.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryType">
            <summary>
            <para>
            CategoryType describes the details of a category. A category is defined as an item at any level in a classification. The Category element represents a set of nested categories which are child categories.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryType.#ctor">
            <summary>
            <para>
            CategoryType describes the details of a category. A category is defined as an item at any level in a classification. The Category element represents a set of nested categories which are child categories.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistType">
            <summary>
            <para>
            CodelistType defines the structure of a codelist. A codelist is defined as a list from which some statistical concepts (coded concepts) take their values.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistType.#ctor">
            <summary>
            <para>
            CodelistType defines the structure of a codelist. A codelist is defined as a list from which some statistical concepts (coded concepts) take their values.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeType">
            <summary>
            <para>
            CodeType describes the structure of a code. A code is defined as a language independent set of letters, numbers or symbols that represent a concept whose meaning is described in a natural language. Presentational information not present may be added through the use of annotations.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeType.#ctor">
            <summary>
            <para>
            CodeType describes the structure of a code. A code is defined as a language independent set of letters, numbers or symbols that represent a concept whose meaning is described in a natural language. Presentational information not present may be added through the use of annotations.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptSchemeType">
            <summary>
            <para>
            onceptSchemeType describes the structure of a concept scheme. A concept scheme is the descriptive information for an arrangement or division of concepts into groups based on characteristics, which the objects have in common. It contains a collection of concept definitions, that may be arranged in simple hierarchies.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptSchemeType.#ctor">
            <summary>
            <para>
            onceptSchemeType describes the structure of a concept scheme. A concept scheme is the descriptive information for an arrangement or division of concepts into groups based on characteristics, which the objects have in common. It contains a collection of concept definitions, that may be arranged in simple hierarchies.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptBaseType">
            <summary>
            <para>
            ConceptBaseType is an abstract base type the forms the basis of the ConceptType by requiring a name and id, and restricting the content of the id.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptBaseType.#ctor">
            <summary>
            <para>
            ConceptBaseType is an abstract base type the forms the basis of the ConceptType by requiring a name and id, and restricting the content of the id.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptType">
            <summary>
            <para>
            ConceptType describes the details of a concept. A concept is defined as a unit of knowledge created by a unique combination of characteristics. If a concept does not specify a TextFormat or a core representation, then the representation of the concept is assumed to be represented by any set of valid characters (corresponding to the xs:string datatype of W3C XML Schema).
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, CoreRepresentation?, ISOConceptReference?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptType.#ctor">
            <summary>
            <para>
            ConceptType describes the details of a concept. A concept is defined as a unit of knowledge created by a unique combination of characteristics. If a concept does not specify a TextFormat or a core representation, then the representation of the concept is assumed to be represented by any set of valid characters (corresponding to the xs:string datatype of W3C XML Schema).
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, CoreRepresentation?, ISOConceptReference?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptType.CoreRepresentation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, CoreRepresentation?, ISOConceptReference?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptType.ISOConceptReference">
            <summary>
            <para>
            Provides a reference to an ISO 11179 concept.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, CoreRepresentation?, ISOConceptReference?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptRepresentation">
            <summary>
            <para>
            ConceptRepresentation defines the core representation that are allowed for a concept. The text format allowed for a concept is that which is allowed for any non-target object component.
            </para>
            </summary>
            <summary>
                <para>
                    ConceptRepresentation defines the core representation that are allowed for a concept. The text format allowed
                    for a concept is that which is allowed for any non-target object component.
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptRepresentation.#ctor">
            <summary>
            <para>
            ConceptRepresentation defines the core representation that are allowed for a concept. The text format allowed for a concept is that which is allowed for any non-target object component.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptRepresentation.Enumeration">
            <summary>
                <para>
                    Gets or sets Enumeration references an item scheme that enumerates the allowable values for this
                    representation.
                </para>
                <para>
                    Occurrence: required
                </para>
                <para>
                    Setter: Appends
                </para>
                <para>
                    Regular expression: (TextFormat | (Enumeration, EnumerationFormat?))
                </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ISOConceptReferenceType">
            <summary>
            <para>
            ISOConceptReferenceType provides a reference to and ISO 11179 concept.
            </para>
            <para>
            Regular expression: (ConceptAgency, ConceptSchemeID, ConceptID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ISOConceptReferenceType.#ctor">
            <summary>
            <para>
            ISOConceptReferenceType provides a reference to and ISO 11179 concept.
            </para>
            <para>
            Regular expression: (ConceptAgency, ConceptSchemeID, ConceptID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ISOConceptReferenceType.ConceptAgency">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ConceptAgency, ConceptSchemeID, ConceptID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ISOConceptReferenceType.ConceptSchemeID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ConceptAgency, ConceptSchemeID, ConceptID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ISOConceptReferenceType.ConceptID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ConceptAgency, ConceptSchemeID, ConceptID)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintBaseType">
            <summary>
            <para>
            ConstraintBaseType is an abstract base type that forms the basis of the main abstract ConstraintType. It requires that a name be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintBaseType.#ctor">
            <summary>
            <para>
            ConstraintBaseType is an abstract base type that forms the basis of the main abstract ConstraintType. It requires that a name be provided.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttachmentConstraintType">
            <summary>
            <para>
            AttachmentConstraintType describes the details of an attachment constraint by defining the data or metadata key sets or component regions that attributes or reference metadata may be attached in the constraint attachment objects.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttachmentConstraintType.#ctor">
            <summary>
            <para>
            AttachmentConstraintType describes the details of an attachment constraint by defining the data or metadata key sets or component regions that attributes or reference metadata may be attached in the constraint attachment objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintBaseType">
            <summary>
            <para>
            ContentConstraintBaseType is an abstract base type that forms the basis for the ContentConstraintType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintBaseType.#ctor">
            <summary>
            <para>
            ContentConstraintBaseType is an abstract base type that forms the basis for the ContentConstraintType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintType">
            <summary>
            <para>
            ContentConstraintType describes the details of a content constraint by defining the content regions, key sets, or release information for the constraint attachment objects. Note that if the constraint is for a data provider, then only release calendar information is relevant, as there is no reliable way of determining which key family is being used to frame constraints in terms of cube regions or key sets.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintType.#ctor">
            <summary>
            <para>
            ContentConstraintType describes the details of a content constraint by defining the content regions, key sets, or release information for the constraint attachment objects. Note that if the constraint is for a data provider, then only release calendar information is relevant, as there is no reliable way of determining which key family is being used to frame constraints in terms of cube regions or key sets.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintType.ReleaseCalendar">
            <summary>
            <para>
            ReleaseCalendar defines dates on which the constrained data is to be made available.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintType.ReferencePeriod">
            <summary>
            <para>
            ReferencePeriod is used to report start date and end date constraints.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ConstraintAttachment?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*, ReleaseCalendar?, ReferencePeriod?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintType.type">
            <summary>
            <para>
            The type attribute indicates whether this constraint states what data is actually present for the constraint attachment, or if it defines what content is allowed. The default value is "Actual", meaning the data actually present for the constraint attachment.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReleaseCalendarType">
            <summary>
            <para>
            ReleaseCalendarType describes information about the timing of releases of the constrained data. All of these values use the standard "P7D" - style format.
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReleaseCalendarType.#ctor">
            <summary>
            <para>
            ReleaseCalendarType describes information about the timing of releases of the constrained data. All of these values use the standard "P7D" - style format.
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReleaseCalendarType.Periodicity">
            <summary>
            <para>
            Periodicity is the period between releases of the data set.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReleaseCalendarType.Offset">
            <summary>
            <para>
            Offset is the interval between January first and the first release of data within the year.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReleaseCalendarType.Tolerance">
            <summary>
            <para>
            Tolerance is the period after which the release of data may be deemed late.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Periodicity, Offset, Tolerance)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeySetType">
            <summary>
            <para>
            KeySetType is an abstract base type for defining a collection of keys.
            </para>
            <para>
            Regular expression: (Key+)
            </para>
            </summary>
            <summary>
            <para>
            KeySetType is an abstract base type for defining a collection of keys.
            </para>
            <para>
            Regular expression: (Key+)
            </para>
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
            <seealso cref="T:Xml.Schema.Linq.IXMetaData" />
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeySetType.#ctor">
            <summary>
            <para>
            KeySetType is an abstract base type for defining a collection of keys.
            </para>
            <para>
            Regular expression: (Key+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeySetType.Key">
            <summary>
            <para>
            Key contains a data or metadata key, which are sets of component values which identify the data or metadata.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Key+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeySetType.isIncluded">
            <summary>
            <para>
            The isIncluded attribute indicates whether the keys defined in this key set are inclusive or exclusive to the constraint.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeySetType._keyList">
            <summary>
            The key list
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeySetType.GetTypedKey``1">
            <summary>
            Gets the typed key.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <returns>The typed Key</returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataKeySetType">
            <summary>
            <para>
            DataKeySetType defines a collection of full or partial data keys (dimension values).
            </para>
            </summary>
            <summary>
            The data key set type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataKeySetType.#ctor">
            <summary>
            <para>
            DataKeySetType defines a collection of full or partial data keys (dimension values).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataKeySetType.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataKeySetType">
            <summary>
            <para>
            MetadataKeySetType defines a collection of metadata keys (identifier component values).
            </para>
            </summary>
            <summary>
            The metadata key set type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataKeySetType.#ctor">
            <summary>
            <para>
            MetadataKeySetType defines a collection of metadata keys (identifier component values).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataKeySetType.Key">
            <summary>
            Gets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType">
            <summary>
            <para>
            ConstraintAttachmentType describes a collection of references to constrainable artefacts.
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.#ctor">
            <summary>
            <para>
            ConstraintAttachmentType describes a collection of references to constrainable artefacts.
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.DataProvider">
            <summary>
            <para>
            DataProvider is reference to a data provider to which the constraint is attached. If this is used, then only the release calendar is relevant. The referenced is provided as a URN and/or a full set of reference fields.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.DataSet">
            <summary>
            <para>
            DataSet is reference to a data set to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.MetadataSet">
            <summary>
            <para>
            MetadataSet is reference to a metadata set to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.SimpleDataSource">
            <summary>
            <para>
            SimpleDataSource describes a simple data source, which is a URL of a SDMX-ML data or metadata message.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.DataStructure">
            <summary>
            <para>
            DataStructure is reference to a data structure definition to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields. A constraint which is attached to more than one data structure must only express key sets and/or cube regions where the identifiers of the dimensions are common across all structures to which the constraint is attached.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.QueryableDataSource">
            <summary>
            <para>
            QueryableDataSource describes a queryable data source to which the constraint is attached.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.MetadataStructure">
            <summary>
            <para>
            MetadataStructure is reference to a metadata structure definition to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields. A constraint which is attached to more than one metadata structure must only express key sets and/or target regions where the identifiers of the target objects are common across all structures to which the constraint is attached.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.Dataflow">
            <summary>
            <para>
            Dataflow is reference to a data flow to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields. A constraint can be attached to more than one dataflow, and the dataflows do not necessarily have to be usages of the same data structure. However, a constraint which is attached to more than one data structure must only express key sets and/or cube regions where the identifiers of the dimensions are common across all structures to which the constraint is attached.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.Metadataflow">
            <summary>
            <para>
            Metadataflow is reference to a metadata flow to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields. A constraint can be attached to more than one metadataflow, and the metadataflows do not necessarily have to be usages of the same metadata structure. However, a constraint which is attached to more than one metadata structure must only express key sets and/or target regions where the identifiers of the target objects are common across all structures to which the constraint is attached.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintAttachmentType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreementReference is reference to a provision agreement to which the constraint is attached. The referenced is provided as a URN and/or a full set of reference fields. A constraint can be attached to more than one provision aggreement, and the provision agreements do not necessarily have to be references structure usages based on the same structure. However, a constraint which is attached to more than one provision agreement must only express key sets and/or cube/target regions where the identifier of the components are common across all structures to which the constraint is attached.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (DataProvider | DataSet+ | MetadataSet+ | SimpleDataSource+ | (DataStructure+, QueryableDataSource*)|(MetadataStructure+, QueryableDataSource*)|(Dataflow+, QueryableDataSource*)|(Metadataflow+, QueryableDataSource*)|(ProvisionAgreement+, QueryableDataSource*))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttachmentConstraintAttachmentType">
            <summary>
            <para>
            AttachmentConstraintAttachmentType defines the structure for specifying the object to which an attachment constraints applies.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttachmentConstraintAttachmentType.#ctor">
            <summary>
            <para>
            AttachmentConstraintAttachmentType defines the structure for specifying the object to which an attachment constraints applies.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintAttachmentType">
            <summary>
            <para>
            ContentConstraintAttachmentType defines the structure for specifying the target object(s) of a content constraint.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContentConstraintAttachmentType.#ctor">
            <summary>
            <para>
            ContentConstraintAttachmentType defines the structure for specifying the target object(s) of a content constraint.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureType">
            <summary>
            <para>
            DataStructureType describes the structure of a data structure definition. A data structure definition is defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate data.
            </para>
            </summary>
            <summary>
                <para>
                    DataStructureType describes the structure of a data structure definition. A data structure definition is
                    defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate
                    data.
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureType.#ctor">
            <summary>
            <para>
            DataStructureType describes the structure of a data structure definition. A data structure definition is defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate data.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureType.DataStructureComponents">
            <summary>
                Gets or sets the DataStructureComponents. DataStructureComponents defines the grouping of the sets of metadata
                concepts that have a defined structural role in the data structure definition. Note that for any component or group
                defined in a data structure definition, its id must be unique. This applies to the identifiers explicitly defined
                by the components as well as those inherited from the concept identity of a component. For example, if two
                dimensions take their identity from concepts with same identity (regardless of whether the concepts exist in
                different schemes) one of the dimensions must be provided a different explicit identifier. Although there are XML
                schema constraints to help enforce this, these only apply to explicitly assigned identifiers. Identifiers inherited
                from a concept from which a component takes its identity cannot be validated against this constraint. Therefore,
                systems processing data structure definitions will have to perform this check outside of the XML validation. There
                are also three reserved identifiers in a data structure definition; OBS_VALUE, TIME_PERIOD, and
                REPORTING_PERIOD_START_DAY. These identifiers may not be used outside of their respective definitions
                (PrimaryMeasure, TimeDimension, and ReportingYearStartDay). This applies to both the explicit identifiers that can
                be assigned to the components or groups as well as an identifier inherited by a component from its concept
                identity. For example, if an ordinary dimension (i.e. not the time dimension) takes its concept identity from a
                concept with the identifier TIME_PERIOD, that dimension must provide a different explicit identifier.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsBaseType">
            <summary>
            <para>
            DataStructureComponentsBaseType is an abstract base type the serves as the basis for the DataStructureComponentsType. This type is necessary to allow for valid substitutions of component lists.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsBaseType.#ctor">
            <summary>
            <para>
            DataStructureComponentsBaseType is an abstract base type the serves as the basis for the DataStructureComponentsType. This type is necessary to allow for valid substitutions of component lists.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType">
            <summary>
            <para>
            DataStructureComponentsType describes the structure of the grouping to the sets of metadata concepts that have a defined structural role in the data structure definition. At a minimum at least one dimension and a primary measure must be defined.
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType.#ctor">
            <summary>
            <para>
            DataStructureComponentsType describes the structure of the grouping to the sets of metadata concepts that have a defined structural role in the data structure definition. At a minimum at least one dimension and a primary measure must be defined.
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType.DimensionList">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType.Group">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType.AttributeList">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType.MeasureList">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListBaseType">
            <summary>
            <para>
            AttributeListBaseType is an abstract base type used as the basis for the AttributeListType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListBaseType.#ctor">
            <summary>
            <para>
            AttributeListBaseType is an abstract base type used as the basis for the AttributeListType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListType">
            <summary>
            <para>
            AttributeListType describes the attribute descriptor for the data structure definition.
            </para>
            <para>
            Regular expression: (Annotations?, (Attribute | ReportingYearStartDay)+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListType.#ctor">
            <summary>
            <para>
            AttributeListType describes the attribute descriptor for the data structure definition.
            </para>
            <para>
            Regular expression: (Annotations?, (Attribute | ReportingYearStartDay)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListType.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Attribute | ReportingYearStartDay)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListType.ReportingYearStartDay">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Attribute | ReportingYearStartDay)+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeBaseType">
            <summary>
            <para>
            AttributeBaseType is an abstract base type that serves as the basis for the AttributeType. It restricts the text format base to a text format valid  for data components (that does not allow for XHTML representation). The local representation is restricted to the values defined in codelist. The concept role is restricted to the values valid for a data attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeBaseType.#ctor">
            <summary>
            <para>
            AttributeBaseType is an abstract base type that serves as the basis for the AttributeType. It restricts the text format base to a text format valid  for data components (that does not allow for XHTML representation). The local representation is restricted to the values defined in codelist. The concept role is restricted to the values valid for a data attribute.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeType">
            <summary>
            <para>
            AttributeType describes the structure of a data attribute, which is defined as a characteristic of an object or entity. The attribute takes its semantic, and in some cases it representation, from its concept identity. An attribute can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the attribute if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the attribute may take these from the referenced concept. An attribute specifies its relationship with other data structure components and is given an assignment status. These two properties dictate where in a data message the attribute will be attached, and whether or not the attribute will be required to be given a value. A set of roles defined in concept scheme can be assigned to the attribute.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*, AttributeRelationship)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeType.#ctor">
            <summary>
            <para>
            AttributeType describes the structure of a data attribute, which is defined as a characteristic of an object or entity. The attribute takes its semantic, and in some cases it representation, from its concept identity. An attribute can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the attribute if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the attribute may take these from the referenced concept. An attribute specifies its relationship with other data structure components and is given an assignment status. These two properties dictate where in a data message the attribute will be attached, and whether or not the attribute will be required to be given a value. A set of roles defined in concept scheme can be assigned to the attribute.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*, AttributeRelationship)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeType.ConceptRole">
            <summary>
            <para>
            ConceptRole references concepts which define roles which this attribute serves. If the concept from which the attribute takes its identity also defines a role the concept serves, then the isConceptRole indicator can be set to true on the concept identity rather than repeating the reference here.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*, AttributeRelationship)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeType.AttributeRelationship">
            <summary>
            <para>
            AttributeRelationship describes how the value of this attribute varies with the values of other components. These relationships will be used to determine the attachment level of the attribute in the various data formats.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*, AttributeRelationship)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeType.assignmentStatus">
            <summary>
            <para>
            The assignmentStatus attribute indicates whether a value must be provided for the attribute when sending documentation along with the data.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType">
            <summary>
            <para>
            AttributeRelationshipType defines the structure for stating the relationship between an attribute and other data structure definition components.
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType.#ctor">
            <summary>
            <para>
            AttributeRelationshipType defines the structure for stating the relationship between an attribute and other data structure definition components.
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType.None">
            <summary>
            <para>
            This means that value of the attribute will not vary with any of the other key family components. This will always be treated as a data set level attribute.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType.Dimension">
            <summary>
            <para>
            This is used to reference dimensions in the data structure definition on which the value of this attribute depends. An attribute using this relationship can be either a group, series (or section), or observation level attribute. The attachment level of the attribute will be determined by the data format and which dimensions are referenced.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType.AttachmentGroup">
            <summary>
            <para>
            This is used to specify that the attribute should always be attached to the groups referenced here. Note that if one of the referenced dimensions is the time dimension, the groups referenced here will be ignored.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType.Group">
            <summary>
            <para>
            This is used as a convenience to referencing all of the dimension defined by the referenced group. The attribute will also be attached to this group.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeRelationshipType.PrimaryMeasure">
            <summary>
            <para>
            This is used to specify that the value of the attribute is dependent upon the observed value. An attribute with this relationship will always be treated as an observation level attribute.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | (Dimension+, AttachmentGroup*)|Group | PrimaryMeasure)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayType">
            <summary>
            <para>
            ReportingYearStartDayType defines the structure of the reporting year start day attribute. The reporting year start day attribute takes its semantic from its concept identity (usually the REPORTING_YEAR_START_DAY concept), yet is always has a fixed identifier (REPORTING_YEAR_START_DAY). The reporting year start day attribute always has a fixed text format, which specifies that the format of its value is always a day and month in the ISO 8601 format of '--MM-DD'. As with any other attribute, an attribute relationship must be specified. this relationship should be carefully selected as it will determin what type of data the data structure definition will allow. For example, if an attribute relationship of none is specified, this will mean the data sets conforming to this data structure definition can only contain data with standard reporting periods where the all reporting periods have the same start day. In this case, data reported as standard reporting periods from two entities with different fiscal year start days could not be contained in the same data set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayType.#ctor">
            <summary>
            <para>
            ReportingYearStartDayType defines the structure of the reporting year start day attribute. The reporting year start day attribute takes its semantic from its concept identity (usually the REPORTING_YEAR_START_DAY concept), yet is always has a fixed identifier (REPORTING_YEAR_START_DAY). The reporting year start day attribute always has a fixed text format, which specifies that the format of its value is always a day and month in the ISO 8601 format of '--MM-DD'. As with any other attribute, an attribute relationship must be specified. this relationship should be carefully selected as it will determin what type of data the data structure definition will allow. For example, if an attribute relationship of none is specified, this will mean the data sets conforming to this data structure definition can only contain data with standard reporting periods where the all reporting periods have the same start day. In this case, data reported as standard reporting periods from two entities with different fiscal year start days could not be contained in the same data set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayRepresentationType">
            <summary>
            <para>
            ReportingYearStartDayRepresentationType defines the representation for the reporting year start day attribute. Enumerated values are not allowed and the text format is fixed to be a day and month in the ISO 8601 format of '--MM-DD'.
            </para>
            </summary>
            <summary>
                Reporting Year Start Day Representation Type class
            </summary>
            <seealso cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.SimpleDataStructureRepresentationType" />
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayRepresentationType.#ctor">
            <summary>
            <para>
            ReportingYearStartDayRepresentationType defines the representation for the reporting year start day attribute. Enumerated values are not allowed and the text format is fixed to be a day and month in the ISO 8601 format of '--MM-DD'.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayTextFormatType">
            <summary>
            <para>
            ReportingYearStartDayTextFormatType is a restricted version of the NonFacetedTextFormatType that fixes the value of the text type to be DayMonth. This type exists solely for the purpose of fixing the representation of the reporting year start day attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayTextFormatType.#ctor">
            <summary>
            <para>
            ReportingYearStartDayTextFormatType is a restricted version of the NonFacetedTextFormatType that fixes the value of the text type to be DayMonth. This type exists solely for the purpose of fixing the representation of the reporting year start day attribute.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListBaseType">
            <summary>
            <para>
            DimensionListBaseType is an abstract base type used as the basis for the DimensionListType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListBaseType.#ctor">
            <summary>
            <para>
            DimensionListBaseType is an abstract base type used as the basis for the DimensionListType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListType">
            <summary>
            <para>
            DimensionListType describes the key descriptor for a data structure definition. The order of the declaration of child dimensions is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the time dimension, which is not represented as a member of the ordered key). Any data structure definition which uses the time dimension should also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). If is not necessary to assign a time dimension, as data can be organised in any fashion required.
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListType.#ctor">
            <summary>
            <para>
            DimensionListType describes the key descriptor for a data structure definition. The order of the declaration of child dimensions is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the time dimension, which is not represented as a member of the ordered key). Any data structure definition which uses the time dimension should also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). If is not necessary to assign a time dimension, as data can be organised in any fashion required.
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListType.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListType.MeasureDimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListType.TimeDimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionBaseType">
            <summary>
            <para>
            BaseDimensionBaseType is an abstract base type that serves as the basis for any dimension. It restricts the text format base to a text format valid  for data components (that does not allow for XHTML representation).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionBaseType.#ctor">
            <summary>
            <para>
            BaseDimensionBaseType is an abstract base type that serves as the basis for any dimension. It restricts the text format base to a text format valid  for data components (that does not allow for XHTML representation).
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionType">
            <summary>
            <para>
            BaseDimensionType is an abstract base type which defines the basic structure of all dimensions.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionType.#ctor">
            <summary>
            <para>
            BaseDimensionType is an abstract base type which defines the basic structure of all dimensions.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionType.ConceptRole">
            <summary>
            <para>
            ConceptRole references concepts which define roles which this dimension serves. If the concept from which the attribute takes its identity also defines a role the concept serves, then the isConceptRole indicator can be set to true on the concept identity rather than repeating the reference here.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionType.position">
            <summary>
            <para>
            The position attribute specifies the position of the dimension in the data structure definition. It is optional an the position of the dimension in the key descriptor (DimensionList element) always takes precedence over the value supplied here. This is strictly for informational purposes only.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseDimensionType.type">
            <summary>
            <para>
            The type attribute identifies whether then dimension is a measure dimension, the time dimension, or a regular dimension. Although these are all apparent by the element names, this attribute allows for each dimension to be processed independent of its element as well as maintaining the restriction of only one measure and time dimension while still allowing dimension to occur in any order.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionType">
            <summary>
            <para>
            DimensionType describes the structure of an ordinary dimension, which is defined as a statistical concept used (most probably together with other statistical concepts) to identify a statistical series, such as a time series, e.g. a statistical concept indicating certain economic activity or a geographical reference area. The dimension takes its semantic, and in some cases it representation, from its concept identity. A dimension can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the dimension if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the dimension may take these from the referenced concept.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionType.#ctor">
            <summary>
            <para>
            DimensionType describes the structure of an ordinary dimension, which is defined as a statistical concept used (most probably together with other statistical concepts) to identify a statistical series, such as a time series, e.g. a statistical concept indicating certain economic activity or a geographical reference area. The dimension takes its semantic, and in some cases it representation, from its concept identity. A dimension can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the dimension if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the dimension may take these from the referenced concept.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimensionType">
            <summary>
            <para>
            TimeDimensionType describes the structure of a time dimension. The time dimension takes its semantic from its concept identity (usually the TIME_PERIOD concept), yet is always has a fixed identifier (TIME_PERIOD). The time dimension always has a fixed text format, which specifies that its format is always the in the value set of the observational time period (see common:ObservationalTimePeriodType). It is possible that the format may be a sub-set of the observational time period value set. For example, it is possible to state that the representation might always be a calendar year. See The enumerationerations of the textType attribute in the LocalRepresentation/TextFormat for more details of the possible sub-sets. It is also possible to facet this representation with start and end dates. The purpose of such facts is to restrict the value of the time dimension to occur within the specified range. If the time dimension is expected to allow for the standard reporting periods (see common:ReportingTimePeriodType) to be used, then it is strongly recommended that the reporting year start day attribute also be included in the data structure definition. When the reporting year start day attribute is used, any standard reporting period values will be assumed to be based on the start day contained in this attribute. If the reporting year start day attribute is not included and standard reporting periods are used, these values will be assumed to be based on a reporting year which begins January 1.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimensionType.#ctor">
            <summary>
            <para>
            TimeDimensionType describes the structure of a time dimension. The time dimension takes its semantic from its concept identity (usually the TIME_PERIOD concept), yet is always has a fixed identifier (TIME_PERIOD). The time dimension always has a fixed text format, which specifies that its format is always the in the value set of the observational time period (see common:ObservationalTimePeriodType). It is possible that the format may be a sub-set of the observational time period value set. For example, it is possible to state that the representation might always be a calendar year. See The enumerationerations of the textType attribute in the LocalRepresentation/TextFormat for more details of the possible sub-sets. It is also possible to facet this representation with start and end dates. The purpose of such facts is to restrict the value of the time dimension to occur within the specified range. If the time dimension is expected to allow for the standard reporting periods (see common:ReportingTimePeriodType) to be used, then it is strongly recommended that the reporting year start day attribute also be included in the data structure definition. When the reporting year start day attribute is used, any standard reporting period values will be assumed to be based on the start day contained in this attribute. If the reporting year start day attribute is not included and standard reporting periods are used, these values will be assumed to be based on a reporting year which begins January 1.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimensionType">
            <summary>
            <para>
            MeasureDimensionType defines the structure of the measure dimension. It is derived from the base dimension structure, but requires that a coded representation taken from a concept scheme is given.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimensionType.#ctor">
            <summary>
            <para>
            MeasureDimensionType defines the structure of the measure dimension. It is derived from the base dimension structure, but requires that a coded representation taken from a concept scheme is given.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupBaseType">
            <summary>
            <para>
            GroupBaseType is an abstract base type that forms the basis for the GroupType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupBaseType.#ctor">
            <summary>
            <para>
            GroupBaseType is an abstract base type that forms the basis for the GroupType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupType">
            <summary>
            <para>
            GroupType describes the structure of a group descriptor in a data structure definition. A group may consist of a of partial key, or collection of distinct cube regions or key sets to which attributes may be attached. The purpose of a group is to specify attributes values which have the same value based on some common dimensionality. All groups declared in the data structure must be unique - that is, you may not have duplicate partial keys. All groups must be given unique identifiers.
            </para>
            <para>
            Regular expression: (Annotations?, (GroupDimension+ | AttachmentConstraint))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupType.#ctor">
            <summary>
            <para>
            GroupType describes the structure of a group descriptor in a data structure definition. A group may consist of a of partial key, or collection of distinct cube regions or key sets to which attributes may be attached. The purpose of a group is to specify attributes values which have the same value based on some common dimensionality. All groups declared in the data structure must be unique - that is, you may not have duplicate partial keys. All groups must be given unique identifiers.
            </para>
            <para>
            Regular expression: (Annotations?, (GroupDimension+ | AttachmentConstraint))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupType.GroupDimension">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (GroupDimension+ | AttachmentConstraint))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupType.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint references an attachment constraint that defines the key sets and/or cube regions that attributes may be attached to. This is an alternative to referencing the dimensions, and allows attributes to be attached to data for given values of dimensions.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (GroupDimension+ | AttachmentConstraint))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimensionBaseType">
            <summary>
            <para>
            GroupDimensionBaseType is an abstract base type which refines the base ComponentType in order to form the basis for the GroupDimensionType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimensionBaseType.#ctor">
            <summary>
            <para>
            GroupDimensionBaseType is an abstract base type which refines the base ComponentType in order to form the basis for the GroupDimensionType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimensionType">
            <summary>
            <para>
            GroupDimensionType defines a dimension component with a group key descriptor component list. Although technically a component, this is essentially a reference to a dimension defined in the key descriptor. Therefore, the identification, name, and description, concept identity and representation properties that are typically available for a component are not allowed here, as they are all inherited from the referenced dimension.
            </para>
            <para>
            Regular expression: (DimensionReference)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimensionType.#ctor">
            <summary>
            <para>
            GroupDimensionType defines a dimension component with a group key descriptor component list. Although technically a component, this is essentially a reference to a dimension defined in the key descriptor. Therefore, the identification, name, and description, concept identity and representation properties that are typically available for a component are not allowed here, as they are all inherited from the referenced dimension.
            </para>
            <para>
            Regular expression: (DimensionReference)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimensionType.DimensionReference">
            <summary>
            <para>
            DimensionReference provides a reference to a dimension defined in the key descriptor of the data structure definition in which this group key descriptor is defined.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DimensionReference)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureListType">
            <summary>
            <para>
            MeasureListType describes the structure of the measure descriptor for a data structure definition. Only a primary may be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureListType.#ctor">
            <summary>
            <para>
            MeasureListType describes the structure of the measure descriptor for a data structure definition. Only a primary may be defined.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.PrimaryMeasureType">
            <summary>
            <para>
            PrimaryMeasureType describes the structure of the primary measure. It describes the observation values for all presentations of the data. The primary measure takes its semantic, and in some cases it representation, from its concept identity (conventionally the OBS_VALUE concept). The primary measure can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the primary measure if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the primary measure may take these from the referenced concept. Note that if the data structure declares a measure dimension, the representation of this must be a superset of all possible measure concept representations.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.PrimaryMeasureType.#ctor">
            <summary>
            <para>
            PrimaryMeasureType describes the structure of the primary measure. It describes the observation values for all presentations of the data. The primary measure takes its semantic, and in some cases it representation, from its concept identity (conventionally the OBS_VALUE concept). The primary measure can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the primary measure if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the primary measure may take these from the referenced concept. Note that if the data structure declares a measure dimension, the representation of this must be a superset of all possible measure concept representations.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureRepresentationType">
            <summary>
            <para>
            DataStructureRepresentationType is an abstract base type which defines the allowable representations for any data structure definition component. The enumeration must be restricted to the proper type for item scheme for a given component.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureRepresentationType.#ctor">
            <summary>
            <para>
            DataStructureRepresentationType is an abstract base type which defines the allowable representations for any data structure definition component. The enumeration must be restricted to the proper type for item scheme for a given component.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.SimpleDataStructureRepresentationType">
            <summary>
            <para>
            SimpleDataStructureRepresentationType defines the representation for any non-measure and non-time dimension data structure definition component.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.SimpleDataStructureRepresentationType.#ctor">
            <summary>
            <para>
            SimpleDataStructureRepresentationType defines the representation for any non-measure and non-time dimension data structure definition component.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimensionRepresentationType">
            <summary>
            <para>
            BaseDimensionRepresentationType is an abstract base which defines the representation for a measure dimension.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimensionRepresentationType.#ctor">
            <summary>
            <para>
            BaseDimensionRepresentationType is an abstract base which defines the representation for a measure dimension.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimensionRepresentationType">
            <summary>
            <para>
            TimeDimensionRepresentationType defines the representation for the time dimension. Enumerated values are not allowed.
            </para>
            </summary>
            <summary>
                <para>
                    TimeDimensionRepresentationType defines the representation for the time dimension. Enumerated values are not
                    allowed.
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimensionRepresentationType.#ctor">
            <summary>
            <para>
            TimeDimensionRepresentationType defines the representation for the time dimension. Enumerated values are not allowed.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimensionRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataflowType">
            <summary>
            <para>
            DataflowType describes the structure of a data flow. A data flow is defined as the structure of data that will provided for different reference periods. If this type is not referenced externally, then a reference to a key family definition must be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataflowType.#ctor">
            <summary>
            <para>
            DataflowType describes the structure of a data flow. A data flow is defined as the structure of data that will provided for different reference periods. If this type is not referenced externally, then a reference to a key family definition must be provided.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistBaseType">
            <summary>
            <para>
            HierarchicalCodelistBaseType is an abstract base class that is the basis for the HierarchicalCodelistType. It requires that a name be supplied.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistBaseType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistBaseType is an abstract base class that is the basis for the HierarchicalCodelistType. It requires that a name be supplied.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistType">
            <summary>
            <para>
            HierarchicalCodelistType describes the structure of a hierarchical codelist. A hierarchical code list is defined as an organised collection of codes that may participate in many parent/child relationships with other codes in the list, as defined by one or more hierarchy of the list.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, IncludedCodelist*, Hierarchy*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistType describes the structure of a hierarchical codelist. A hierarchical code list is defined as an organised collection of codes that may participate in many parent/child relationships with other codes in the list, as defined by one or more hierarchy of the list.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, IncludedCodelist*, Hierarchy*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistType.IncludedCodelist">
            <summary>
            <para>
            IndludedCodelist provides a collection of references to the code lists whose codes are arranged in this hierarchical code list.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, IncludedCodelist*, Hierarchy*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistType.Hierarchy">
            <summary>
            <para>
            Hierarchy describes a classification structure arranged in levels of detail from the broadest to the most detailed level. These levels can be formal or informal, and are not necessary to describe. If the hierarchy does contain levels, then each hierarchical code is assumed to exist in the level where the depths of nesting match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, IncludedCodelist*, Hierarchy*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyBaseType">
            <summary>
            <para>
            HierarchyBaseType is an abstract base type that serves as the basis for the HierarchyType. It requires a name and id be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyBaseType.#ctor">
            <summary>
            <para>
            HierarchyBaseType is an abstract base type that serves as the basis for the HierarchyType. It requires a name and id be provided.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyType">
            <summary>
            <para>
            The Hierarchy is an abstract type that provides for a classification structure of referenced codes arranged in levels of detail from the broadest to the most detailed level. The levels in which the code exist can be formal or informal.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, HierarchicalCode+, Level?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyType.#ctor">
            <summary>
            <para>
            The Hierarchy is an abstract type that provides for a classification structure of referenced codes arranged in levels of detail from the broadest to the most detailed level. The levels in which the code exist can be formal or informal.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, HierarchicalCode+, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyType.HierarchicalCode">
            <summary>
            <para>
            HierarchicalCode is used to assemble the codes from the codelist(s) referenced into a hierarchy.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, HierarchicalCode+, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyType.Level">
            <summary>
            <para>
            In a formally leveled hierarchy, Level describes a group of codes which are characterised by homogeneous coding, and where the parent of each code in the group is at the same higher level of the hierarchy. In a value based hierarchy Level describes information about the codes at the specified nesting level. This structure is recursive to indicate the hierarchy of the levels.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, HierarchicalCode+, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchyType.leveled">
            <summary>
            <para>
            The leveled attribute indicates that the hierarchy has formal levels. In this case, every code should have a level associated with it.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeBaseType">
            <summary>
            <para>
            HierarchicalCodeBaseType is an abstract base type the creates the basis for the HierarchicalCodeType. It removes the urn and uri.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeBaseType.#ctor">
            <summary>
            <para>
            HierarchicalCodeBaseType is an abstract base type the creates the basis for the HierarchicalCodeType. It removes the urn and uri.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType">
            <summary>
            <para>
            HierarchicalCodeType describes the structure of a hierarchical code. A hierarchical code provides for a reference to a code that is referenced within the hierarchical code list via either a complete reference to a code through either a URN or full set of reference fields, or a local reference which utilizes the included codelist reference alias and the identification of a code from the list. Codes are arranged in a hierarchy by this reference. Note that it is possible to reference a single code such that it has multiple parents within the hierarchy. Further, the hierarchy may or may not be a leveled one.
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.#ctor">
            <summary>
            <para>
            HierarchicalCodeType describes the structure of a hierarchical code. A hierarchical code provides for a reference to a code that is referenced within the hierarchical code list via either a complete reference to a code through either a URN or full set of reference fields, or a local reference which utilizes the included codelist reference alias and the identification of a code from the list. Codes are arranged in a hierarchy by this reference. Note that it is possible to reference a single code such that it has multiple parents within the hierarchy. Further, the hierarchy may or may not be a leveled one.
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.Code">
            <summary>
            <para>
            Code provides a complete, explicit reference to a code through either its URN, or a complete reference to the codelist and code.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.CodelistAliasRef">
            <summary>
            <para>
            CodelistAliasRef references an alias assigned in a IncludedCodelistReference element in the containing hierarchical codelist. This is used in conjunction with the CodeID element to reference a code from one of the included codelists.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.CodeID">
            <summary>
            <para>
            CodeID references the id of a code from the codelist that is referenced through the CodelistAliaRef element.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.HierarchicalCode">
            <summary>
            <para>
            HierarchicalCode is used to nest referenced codes into a value based hierarchy.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.Level">
            <summary>
            <para>
            Level references a formal level defined within the hierarchy which defines this hierarchical code. This is only necessary if the nesting depth of the hierarchical code does not correspond to the nesting depth of the level to which it belongs (i.e. the hieararchical code is to skip down a level). Otherwise, the code is assumed to exist at the level in which the nesting depth of the level matches the nesting depth of the code.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, (Code | (CodelistAliasRef, CodeID)), HierarchicalCode*, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.version">
            <summary>
            <para>
            The version attriubte contains a version number for the hierarchical code. A hierarchical code is not formally versionable, therefore each code must have a unique identifier. The version supplied here is for informational purposes only and is not used to uniquely identity the code.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.validFrom">
            <summary>
            <para>
            The validFrom attriubte indicates the point in time in which the hiearchical code became effective. This can be used to track the historicity of codes changing over time.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodeType.validTo">
            <summary>
            <para>
            The validTo attriubte indicates the point in time in which the hiearchical code became no longer effective. This can be used to track the historicity of codes changing over time.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.LevelBaseType">
            <summary>
            <para>
            LevelBaseType is an abstract base type that makes up the basis for the LevelType. It requires a name and id.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.LevelBaseType.#ctor">
            <summary>
            <para>
            LevelBaseType is an abstract base type that makes up the basis for the LevelType. It requires a name and id.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.LevelType">
            <summary>
            <para>
            LevelType describes a level in a hierarchical codelist. Where level is defined as a group where codes can be characterised by homogeneous coding, and where the parent of each code in the group is at the same higher level of the hierarchy.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, CodingFormat?, Level?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.LevelType.#ctor">
            <summary>
            <para>
            LevelType describes a level in a hierarchical codelist. Where level is defined as a group where codes can be characterised by homogeneous coding, and where the parent of each code in the group is at the same higher level of the hierarchy.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, CodingFormat?, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.LevelType.CodingFormat">
            <summary>
            <para>
            CodingFormat specifies the text formatting of the codes in this level. This includes facets such as the expected characters and the length of the codes.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, CodingFormat?, Level?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.LevelType.Level">
            <summary>
            <para>
            Level describes the next level down in the hierarchy.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, CodingFormat?, Level?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IncludedCodelistReferenceType">
            <summary>
            <para>
            IncludedCodelistReferenceType provides the structure for a referencing a codelist and optionally providing a local alias identification for this reference.
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IncludedCodelistReferenceType.#ctor">
            <summary>
            <para>
            IncludedCodelistReferenceType provides the structure for a referencing a codelist and optionally providing a local alias identification for this reference.
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IncludedCodelistReferenceType.alias">
            <summary>
            <para>
            The alias attribute is used to carry the identifier for the referenced codelist, so that codes from that list can be easily referenced by the hierarchical codes contained in the parent hierarchy, without having to repeat the reference to the codelist itself. The alias attribute must be unique within the parent hierarchical codelist.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.SimpleCodeDataType">
            <summary>
            <para>
            SimpleCodeDataType restricts SimpleDataType to specify the allowable data types for a simple code. The possible values are simply Alpha, AlphaNumeric, or Numeric.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataflowType">
            <summary>
            <para>
            MetadataflowType describes the structure of a metadata flow. A dataflow is defined as the structure of reference metadata that will be provided for different reference periods. If this type is not referenced externally, then a reference to a metadata structure definition must be provided
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataflowType.#ctor">
            <summary>
            <para>
            MetadataflowType describes the structure of a metadata flow. A dataflow is defined as the structure of reference metadata that will be provided for different reference periods. If this type is not referenced externally, then a reference to a metadata structure definition must be provided
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureType">
            <summary>
            <para>
            MetadataStructureType is used to describe a metadata structure definition, which is defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate reference metadata.
            </para>
            </summary>
            <summary>
                <para>
                    MetadataStructureType is used to describe a metadata structure definition, which is defined as a collection of
                    metadata concepts, their structure and usage when used to collect or disseminate reference metadata.
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureType.#ctor">
            <summary>
            <para>
            MetadataStructureType is used to describe a metadata structure definition, which is defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate reference metadata.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureType.MetadataStructureComponents">
            <summary>
                Gets or sets the MetadataStructureComponents. MetadataStructureComponents defines the grouping of the sets of the
                components that make up the metadata structure definition. All components and component list (target identifiers,
                identifier components, report structures, and metadata attributes) in the structure definition must have a unique
                identification.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsBaseType">
            <summary>
            <para>
            MetadataStructureComponentsBaseType is an abstract base type that forms the basis for the MetadataStructureComponentsType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsBaseType.#ctor">
            <summary>
            <para>
            MetadataStructureComponentsBaseType is an abstract base type that forms the basis for the MetadataStructureComponentsType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsType">
            <summary>
            <para>
            MetadataStructureComponentsType describes the structure of the grouping of the sets of the components that make up the metadata structure definition. At a minimum, a full target identifier and at least one report structure must be defined.
            </para>
            <para>
            Regular expression: (MetadataTarget+, ReportStructure+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsType.#ctor">
            <summary>
            <para>
            MetadataStructureComponentsType describes the structure of the grouping of the sets of the components that make up the metadata structure definition. At a minimum, a full target identifier and at least one report structure must be defined.
            </para>
            <para>
            Regular expression: (MetadataTarget+, ReportStructure+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsType.MetadataTarget">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (MetadataTarget+, ReportStructure+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsType.ReportStructure">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (MetadataTarget+, ReportStructure+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetBaseType">
            <summary>
            <para>
            MetadataTargetBaseType is an abstract base type which forms the basis for the MetadataTargetType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetBaseType.#ctor">
            <summary>
            <para>
            MetadataTargetBaseType is an abstract base type which forms the basis for the MetadataTargetType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType">
            <summary>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType.#ctor">
            <summary>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType.KeyDescriptorValuesTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType.DataSetTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType.ConstraintContentTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType.ReportPeriodTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTargetType.IdentifiableObjectTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TargetObject">
            <summary>
            <para>
            TargetObject is an abstract base type from which all target objects of a metadata target are derived. It is based on a component. Implementations of this will refined the local representation so that the allowed values accurately reflect the representation of the target object reference.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TargetObject.#ctor">
            <summary>
            <para>
            TargetObject is an abstract base type from which all target objects of a metadata target are derived. It is based on a component. Implementations of this will refined the local representation so that the allowed values accurately reflect the representation of the target object reference.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTargetType">
            <summary>
            <para>
            KeyDescriptorValuesTargetType defines the structure of a key descriptor values target object. The key descriptor values target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTargetType.#ctor">
            <summary>
            <para>
            KeyDescriptorValuesTargetType defines the structure of a key descriptor values target object. The key descriptor values target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTargetType">
            <summary>
            <para>
            DataSetTargetType defines the structure of a data set target object. The data set target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTargetType.#ctor">
            <summary>
            <para>
            DataSetTargetType defines the structure of a data set target object. The data set target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintContentTargetType">
            <summary>
            <para>
            ConstraintTargetType defines the structure of a constraint target object. The constraint target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintContentTargetType.#ctor">
            <summary>
            <para>
            ConstraintTargetType defines the structure of a constraint target object. The constraint target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodTargetType">
            <summary>
            <para>
            ReportPeriodTargetType defines the structure of a report period target object. The report period target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodTargetType.#ctor">
            <summary>
            <para>
            ReportPeriodTargetType defines the structure of a report period target object. The report period target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTargetBaseType">
            <summary>
            <para>
            IdentifiableObjectTargetBaseType is an abstract base type which forms the basis for the IdentifiableObjectTargetType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTargetBaseType.#ctor">
            <summary>
            <para>
            IdentifiableObjectTargetBaseType is an abstract base type which forms the basis for the IdentifiableObjectTargetType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTargetType">
            <summary>
            <para>
            IdentifiableObjectTargetType defines the structure of an identifiable target object. The identifiable target object has a fixed representation of a reference and can specify a local representation of any item scheme for the purpose of restricting which items may be referenced. The identifiable object target must specify the object type which the target object is meant to reference.
            </para>
            <para>
            Regular expression: (Annotations?, LocalRepresentation)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTargetType.#ctor">
            <summary>
            <para>
            IdentifiableObjectTargetType defines the structure of an identifiable target object. The identifiable target object has a fixed representation of a reference and can specify a local representation of any item scheme for the purpose of restricting which items may be referenced. The identifiable object target must specify the object type which the target object is meant to reference.
            </para>
            <para>
            Regular expression: (Annotations?, LocalRepresentation)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTargetType.objectType">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructureBaseType">
            <summary>
            <para>
            ReportStructureBaseType is an abstract base type that serves as the basis for the ReportStructureType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructureBaseType.#ctor">
            <summary>
            <para>
            ReportStructureBaseType is an abstract base type that serves as the basis for the ReportStructureType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructureType">
            <summary>
            <para>
            ReportStructureType describes the structure of a report structure. It comprises a set of metadata attributes that can be defined as a hierarchy, and identifies the potential attachment of these attributes to an object by referencing a target identifier.
            </para>
            <para>
            Regular expression: (Annotations?, (MetadataAttribute)+, MetadataTarget+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructureType.#ctor">
            <summary>
            <para>
            ReportStructureType describes the structure of a report structure. It comprises a set of metadata attributes that can be defined as a hierarchy, and identifies the potential attachment of these attributes to an object by referencing a target identifier.
            </para>
            <para>
            Regular expression: (Annotations?, (MetadataAttribute)+, MetadataTarget+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructureType.MetadataTarget">
            <summary>
            <para>
            MetadataTarget references a metadata target defined in the metadata structure definition. A report structure can reference multiple metadata targets which allows a report structure to be reused for attaching metadata to different types of targets.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, (MetadataAttribute)+, MetadataTarget+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeBaseType">
            <summary>
            <para>
            MetadataAttributeBaseType is an abstract base type the serves as the basis for the MetadataAttributeType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeBaseType.#ctor">
            <summary>
            <para>
            MetadataAttributeBaseType is an abstract base type the serves as the basis for the MetadataAttributeType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType">
            <summary>
            <para>
            MetadataAttributeType describes the structure of a metadata attribute. The metadata attribute takes its semantic, and in some cases it representation, from its concept identity. A metadata attribute may be coded (via the local representation), uncoded (via the text format), or take no value. In addition to this value, the metadata attribute may also specify subordinate metadata attributes. If a metadata attribute only serves the purpose of containing subordinate metadata attributes, then the isPresentational attribute should be used. Otherwise, it is assumed to also take a value. If the metadata attribute does take a value, and a representation is not defined, it will be inherited from the concept it takes its semantic from. The optional id on the metadata attribute uniquely identifies it within the metadata structured definition. If this id is not supplied, its value is assumed to be that of the concept referenced from the concept identity. Note that a metadata attribute (as identified by the id attribute) definition  must be unique across the entire metadata structure definition (including target identifier, identifier component, and report structure ids). A metadata attribute may be used in multiple report structures and at different levels, but the content (value and/or child metadata attributes and their cardinality) of the metadata attribute cannot change.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, MetadataAttribute*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType.#ctor">
            <summary>
            <para>
            MetadataAttributeType describes the structure of a metadata attribute. The metadata attribute takes its semantic, and in some cases it representation, from its concept identity. A metadata attribute may be coded (via the local representation), uncoded (via the text format), or take no value. In addition to this value, the metadata attribute may also specify subordinate metadata attributes. If a metadata attribute only serves the purpose of containing subordinate metadata attributes, then the isPresentational attribute should be used. Otherwise, it is assumed to also take a value. If the metadata attribute does take a value, and a representation is not defined, it will be inherited from the concept it takes its semantic from. The optional id on the metadata attribute uniquely identifies it within the metadata structured definition. If this id is not supplied, its value is assumed to be that of the concept referenced from the concept identity. Note that a metadata attribute (as identified by the id attribute) definition  must be unique across the entire metadata structure definition (including target identifier, identifier component, and report structure ids). A metadata attribute may be used in multiple report structures and at different levels, but the content (value and/or child metadata attributes and their cardinality) of the metadata attribute cannot change.
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, MetadataAttribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType.MetadataAttribute">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, MetadataAttribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType.minOccurs">
            <summary>
            <para>
            The minOccurs attribute indicates the minimum number of times this metadata attribute can occur within its parent object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType.maxOccurs">
            <summary>
            <para>
            The maxOccurs attribute indicates the maximum number of times this metadata attribute can occur within its parent object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType.isPresentational">
            <summary>
            <para>
            The isPresentational attribute indicates whether the metadata attribute should allow for a value. A value of true, meaning the metadata attribute is presentational means that the attribute only contains child metadata attributes, and does not contain a value. If this attribute is not set to true, and a representation (coded or uncoded) is not defined, then the representation of the metadata attribute will be inherited from the concept from which it takes its identity.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesRepresentationType">
            <summary>
            <para>
            KeyDescriptorValuesRepresentationType defines the possible local representations of a key descriptor values target object. The representation is fixed to always be a data key (KeyValues).
            </para>
            </summary>
            <summary>
                The key descriptor values representation type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesRepresentationType.#ctor">
            <summary>
            <para>
            KeyDescriptorValuesRepresentationType defines the possible local representations of a key descriptor values target object. The representation is fixed to always be a data key (KeyValues).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetRepresentationType">
            <summary>
            <para>
            DataSetRepresentationType defines the possible local representations of a data set reference target object. The representation is fixed to always be a data set reference.
            </para>
            </summary>
            <summary>
                The data set representation type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetRepresentationType.#ctor">
            <summary>
            <para>
            DataSetRepresentationType defines the possible local representations of a data set reference target object. The representation is fixed to always be a data set reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintRepresentationType">
            <summary>
            <para>
            ConstraintRepresentationType defines the possible local representations of a constraint reference target object. The representation is fixed to always be an attachment constraint reference.
            </para>
            </summary>
            <summary>
                The constraint representation type.
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintRepresentationType.#ctor">
            <summary>
            <para>
            ConstraintRepresentationType defines the possible local representations of a constraint reference target object. The representation is fixed to always be an attachment constraint reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodRepresentationType">
            <summary>
            <para>
            ReportPeriodRepresentationType defines the possible local representations of a report period target object. The reprentation must be a time period or a subset of this representation.
            </para>
            </summary>
            <summary>
                <para>
                    ReportPeriodRepresentationType defines the possible local representations of a report period target object. The
                    representation must be a time period or a subset of this representation.
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodRepresentationType.#ctor">
            <summary>
            <para>
            ReportPeriodRepresentationType defines the possible local representations of a report period target object. The reprentation must be a time period or a subset of this representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectRepresentationType">
            <summary>
            <para>
            IdentifiableObjectRepresentationType defines the possible local representations of an identifiable object target object.
            </para>
            </summary>
            <summary>
                <para>
                    IdentifiableObjectRepresentationType defines the possible local representations of an identifiable object
                    target object.
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectRepresentationType.#ctor">
            <summary>
            <para>
            IdentifiableObjectRepresentationType defines the possible local representations of an identifiable object target object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectRepresentationType.AddNewTextFormatType">
            <summary>
                Add new <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </summary>
            <returns>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TextFormatType" />.
            </returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeRepresentationType">
            <summary>
            <para>
            MetadataAttributeRepresentationType defines the possible local representations of a metadata attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeRepresentationType.#ctor">
            <summary>
            <para>
            MetadataAttributeRepresentationType defines the possible local representations of a metadata attribute.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TargetObjectTextFormatType">
            <summary>
            <para>
            TargetObjectTextFormatType is a restricted version of the TextFormatType that does not allow for any facets and only allows the text types for target objects.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TargetObjectTextFormatType.#ctor">
            <summary>
            <para>
            TargetObjectTextFormatType is a restricted version of the TextFormatType that does not allow for any facets and only allows the text types for target objects.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TargetObjectDataType">
            <summary>
            <para>
            TargetObjectDataType restricts DataType to specify the allowable data types for representing a target object value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTextFormatType">
            <summary>
            <para>
            KeyDescriptorValuesTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed KeyValues representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTextFormatType.#ctor">
            <summary>
            <para>
            KeyDescriptorValuesTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed KeyValues representation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTextFormatType">
            <summary>
            <para>
            DataSetTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed DataSetReference representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTextFormatType.#ctor">
            <summary>
            <para>
            DataSetTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed DataSetReference representation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintTextFormatType">
            <summary>
            <para>
            ConstraintTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed AttachmentConstraintReference representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintTextFormatType.#ctor">
            <summary>
            <para>
            ConstraintTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed AttachmentConstraintReference representation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTextFormatType">
            <summary>
            <para>
            IdentifiableObjectTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed IdentifiableReference representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTextFormatType.#ctor">
            <summary>
            <para>
            IdentifiableObjectTextFormatType is a restricted version of the NonFacetedTextFormatType that specifies a fixed IdentifiableReference representation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeBaseType">
            <summary>
            <para>
            OrganisationSchemeBaseType is an abstract base type for any organisation scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeBaseType.#ctor">
            <summary>
            <para>
            OrganisationSchemeBaseType is an abstract base type for any organisation scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeType">
            <summary>
            <para>
            OrganisationSchemeType describes the structure of an organisation scheme.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Organisation)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeType.#ctor">
            <summary>
            <para>
            OrganisationSchemeType describes the structure of an organisation scheme.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Organisation)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeType.Organisation">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Organisation, Agency, DataConsumer, DataProvider, OrganisationUnit
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Organisation)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseOrganisationType">
            <summary>
            <para>
            BaseOrganisationType is an abstract base type the forms the basis for the OrganisationType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.BaseOrganisationType.#ctor">
            <summary>
            <para>
            BaseOrganisationType is an abstract base type the forms the basis for the OrganisationType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationType">
            <summary>
            <para>
            OrganisationType in an abstract type which describes the structure of the details of an organisation. In addition to the basic organisation identification, contact details can be provided.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, Contact*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationType.#ctor">
            <summary>
            <para>
            OrganisationType in an abstract type which describes the structure of the details of an organisation. In addition to the basic organisation identification, contact details can be provided.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, Contact*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationType.Contact">
            <summary>
            <para>
            Contact describes a contact for the organisation,
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, Contact*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AgencySchemeType">
            <summary>
            <para>
            AgencySchemeType defines a specific type of organisation scheme which contains only maintenance agencies. The agency scheme maintained by a particular maintenance agency is always provided a fixed identifier and version, and is never final. Therefore, agencies can be added or removed without have to version the scheme. Agencies schemes have no hierarchy, meaning that no agency may define a relationship with another agency in the scheme. In fact, the actual parent agency for an agency in a scheme is the agency which defines the scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AgencySchemeType.#ctor">
            <summary>
            <para>
            AgencySchemeType defines a specific type of organisation scheme which contains only maintenance agencies. The agency scheme maintained by a particular maintenance agency is always provided a fixed identifier and version, and is never final. Therefore, agencies can be added or removed without have to version the scheme. Agencies schemes have no hierarchy, meaning that no agency may define a relationship with another agency in the scheme. In fact, the actual parent agency for an agency in a scheme is the agency which defines the scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumerSchemeType">
            <summary>
            <para>
            DataConsumerSchemeType defines a type of organisation scheme which contains only data consumers. The data consumer scheme maintained by a particular maintenance agency is always provided a fixed identifier and version, and is never final. Therefore, consumers can be added or removed without have to version the scheme. This scheme has no hierarchy, meaning that no organisation may define a relationship with another organisation in the scheme.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumerSchemeType.#ctor">
            <summary>
            <para>
            DataConsumerSchemeType defines a type of organisation scheme which contains only data consumers. The data consumer scheme maintained by a particular maintenance agency is always provided a fixed identifier and version, and is never final. Therefore, consumers can be added or removed without have to version the scheme. This scheme has no hierarchy, meaning that no organisation may define a relationship with another organisation in the scheme.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProviderSchemeType">
            <summary>
            <para>
            DataProviderSchemeType defines a type of organisation scheme which contains only data providers. The data provider scheme maintained by a particular maintenance agency is always provided a fixed identifier and version, and is never final. Therefore, providers can be added or removed without have to version the scheme. This scheme has no hierarchy, meaning that no organisation may define a relationship with another organisation in the scheme
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProviderSchemeType.#ctor">
            <summary>
            <para>
            DataProviderSchemeType defines a type of organisation scheme which contains only data providers. The data provider scheme maintained by a particular maintenance agency is always provided a fixed identifier and version, and is never final. Therefore, providers can be added or removed without have to version the scheme. This scheme has no hierarchy, meaning that no organisation may define a relationship with another organisation in the scheme
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnitSchemeType">
            <summary>
            <para>
            OrganisationUnitSchemeType defines a type of organisation scheme which simply defines organisations and there parent child relationships. Organisations in this scheme are assigned no particular role, and may in fact exist within the other type of organisation schemes as well.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnitSchemeType.#ctor">
            <summary>
            <para>
            OrganisationUnitSchemeType defines a type of organisation scheme which simply defines organisations and there parent child relationships. Organisations in this scheme are assigned no particular role, and may in fact exist within the other type of organisation schemes as well.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AgencyType">
            <summary>
            <para>
            AgencyType defines the structure of an agency description. The contacts defined for the organisation are specific to the agency role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AgencyType.#ctor">
            <summary>
            <para>
            AgencyType defines the structure of an agency description. The contacts defined for the organisation are specific to the agency role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumerType">
            <summary>
            <para>
            DataConsumerType defines the structure of a data consumer description. The contacts defined for the organisation are specific to the data consumer role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumerType.#ctor">
            <summary>
            <para>
            DataConsumerType defines the structure of a data consumer description. The contacts defined for the organisation are specific to the data consumer role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProviderType">
            <summary>
            <para>
            DataProviderType defines the structure of a data provider description. The contacts defined for the organisation are specific to the data provider role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProviderType.#ctor">
            <summary>
            <para>
            DataProviderType defines the structure of a data provider description. The contacts defined for the organisation are specific to the data provider role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnitType">
            <summary>
            <para>
            OrganisationUnitType defines the structure of an organisation unit description. In addition to general identification and contact information, an organisation unit can specify a relationship with another organisation unit from the same scheme which is its parent organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnitType.#ctor">
            <summary>
            <para>
            OrganisationUnitType defines the structure of an organisation unit description. In addition to general identification and contact information, an organisation unit can specify a relationship with another organisation unit from the same scheme which is its parent organisation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType">
            <summary>
            <para>
            ContactType describes the structure of a contact's details.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.#ctor">
            <summary>
            <para>
            ContactType describes the structure of a contact's details.
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.Department">
            <summary>
            <para>
            Department is designation of the organisational structure by a linguistic expression, within which the contact person works.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.Role">
            <summary>
            <para>
            Role is the responsibility of the contact person with respect to the object for which this person is the contact.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.Telephone">
            <summary>
            <para>
            Telephone holds the telephone number for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.Fax">
            <summary>
            <para>
            Fax holds the fax number for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.X400">
            <summary>
            <para>
            X400 holds the X.400 address for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.URI">
            <summary>
            <para>
            URI holds an information URL for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.Email">
            <summary>
            <para>
            Email holds the email address for the contact person.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Name*, Department*, Role*, (Telephone | Fax | X400 | URI | Email)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ContactType.id">
            <summary>
            <para>
            The id attribute is used to carry user id information for the contact.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementType">
            <summary>
            <para>
            ProvisionAgreementType describes the structure of a provision agreement. A provision agreement defines an agreement for a data provider to report data or reference metadata against a flow. Attributes which describe how the registry must behave when data or metadata is registered against this provision agreement are supplied.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, StructureUsage, DataProvider)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementType.#ctor">
            <summary>
            <para>
            ProvisionAgreementType describes the structure of a provision agreement. A provision agreement defines an agreement for a data provider to report data or reference metadata against a flow. Attributes which describe how the registry must behave when data or metadata is registered against this provision agreement are supplied.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, StructureUsage, DataProvider)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementType.StructureUsage">
            <summary>
            <para>
            DataflowReference provides a reference to a pre-existing structure usage (i.e. a dataflow or metadataflow) in the registry. The reference is provided via a URN and/or a full set of reference fields.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, StructureUsage, DataProvider)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementType.DataProvider">
            <summary>
            <para>
            DataProvider provides a reference to a pre-existing data (or metadata) provider in the registry. The reference is provided via a URN and/or a full set of reference fields.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, StructureUsage, DataProvider)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessType">
            <summary>
            <para>
            ProcessType describes the structure of a process, which is a scheme which defines or documents the operations performed on data in order to validate data or to derive new information according to a given set of rules. Processes occur in order, and will continue in order unless a transition dictates another step should occur.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessType.#ctor">
            <summary>
            <para>
            ProcessType describes the structure of a process, which is a scheme which defines or documents the operations performed on data in order to validate data or to derive new information according to a given set of rules. Processes occur in order, and will continue in order unless a transition dictates another step should occur.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessType.ProcessStep">
            <summary>
            <para>
            ProcessStep defines a process step, which is a specific operation, performed on data in order to validate or to derive new information according to a given set of rules.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepBaseType">
            <summary>
            <para>
            ProcessStepBaseType is an abstract base type used as the basis for the ProcessStepType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepBaseType.#ctor">
            <summary>
            <para>
            ProcessStepBaseType is an abstract base type used as the basis for the ProcessStepType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType">
            <summary>
            <para>
            ProcessStepType describes the structure of a process step. A nested process step is automatically sub-ordinate, and followed as the next step. If the following step is conditional, it should be referenced in a transition.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType.#ctor">
            <summary>
            <para>
            ProcessStepType describes the structure of a process step. A nested process step is automatically sub-ordinate, and followed as the next step. If the following step is conditional, it should be referenced in a transition.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType.Input">
            <summary>
            <para>
            Input references an object which is an input to the process step.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType.Output">
            <summary>
            <para>
            Output references an object which is an output form the process step.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType.Computation">
            <summary>
            <para>
            Computation describes the computations involved in the process, in any form desired by the user (these are informational rather than machine-actionable), and so may be supplied in multiple, parallel-language versions.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType.Transition">
            <summary>
            <para>
            Transition describes the next process steps. Each transition in a process step should be evaluated, allowing for multiple process step branches from a single process step.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessStepType.ProcessStep">
            <summary>
            <para>
            ProcessStep defines a process step, which is a specific operation, performed on data in order to validate or to derive new information according to a given set of rules.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Input*, Output*, Computation?, Transition*, ProcessStep*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TransitionType">
            <summary>
            <para>
            TransitionType describes the details of a transition, which is an expression in a textual or formalised way of the transformation of data between two specific operations performed on the data.
            </para>
            <para>
            Regular expression: (Annotations?, TargetStep, Condition+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TransitionType.#ctor">
            <summary>
            <para>
            TransitionType describes the details of a transition, which is an expression in a textual or formalised way of the transformation of data between two specific operations performed on the data.
            </para>
            <para>
            Regular expression: (Annotations?, TargetStep, Condition+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TransitionType.TargetStep">
            <summary>
            <para>
            TargetStep references a process step within the process that should be transitioned to, should the conditions described be met.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, TargetStep, Condition+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TransitionType.Condition">
            <summary>
            <para>
            Condition is a textual description of the conditions to be met in order for the target step to be proceeded to. It is informational only (not machine-actionable), and may be supplied in multiple, parallel-language form.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, TargetStep, Condition+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TransitionType.localID">
            <summary>
            <para>
            The localID attribute is an optional identification for the transition within the process.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType">
            <summary>
            <para>
            ComputationType describes a computation in a process.
            </para>
            <para>
            Regular expression: (Annotations?, Description+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType.#ctor">
            <summary>
            <para>
            ComputationType describes a computation in a process.
            </para>
            <para>
            Regular expression: (Annotations?, Description+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType.Description">
            <summary>
            <para>
            Description describe the computation in any form desired by the user (these are informational rather than machine-actionable), and so may be supplied in multiple, parallel-language versions,
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Description+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType.localID">
            <summary>
            <para>
            The localID attribute is an optional identification for the computation within the process.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType.softwarePackage">
            <summary>
            <para>
            The softwarePackage attribute holds the name of the software package that is used to perform the computation.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType.softwareLanguage">
            <summary>
            <para>
            The softwareLanguage attribute holds the coding language that the software package used to perform the computation is written in.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComputationType.softwareVersion">
            <summary>
            <para>
            The softwareVersion attribute hold the version of the software package that is used to perform that computation.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.InputOutputType">
            <summary>
            <para>
            InputOutputType describes the structure of an input or output to a process step. It provides a reference to the object that is the input or output.
            </para>
            <para>
            Regular expression: (Annotations?, ObjectReference)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.InputOutputType.#ctor">
            <summary>
            <para>
            InputOutputType describes the structure of an input or output to a process step. It provides a reference to the object that is the input or output.
            </para>
            <para>
            Regular expression: (Annotations?, ObjectReference)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.InputOutputType.ObjectReference">
            <summary>
            <para>
            ObjectReference is an abstract substitution head that references the object that is an input or output. It is substituted with a concrete reference to an explicit object type.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, ObjectReference)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.InputOutputType.localID">
            <summary>
            <para>
            The localID attribute is an optional identification for the input or output within the process.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomyType">
            <summary>
            <para>
            ReportingTaxonomyType describes the structure of a reporting taxonomy, which is a scheme which defines the composition structure of a data report where each component can be described by an independent structure or structure usage description.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomyType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyType describes the structure of a reporting taxonomy, which is a scheme which defines the composition structure of a data report where each component can be described by an independent structure or structure usage description.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryBaseType">
            <summary>
            <para>
            ReportingCategoryBaseType is an abstract base type that serves as the basis for the ReportingCategoryType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryBaseType.#ctor">
            <summary>
            <para>
            ReportingCategoryBaseType is an abstract base type that serves as the basis for the ReportingCategoryType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryType">
            <summary>
            <para>
            ReportingCategoryType describes the structure of a reporting category, which groups structure usages into useful sub-packages. Sub ordinate reporting categories can be nested within the category definition.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ((ReportingCategory)+)?, (StructuralMetadata* | ProvisioningMetadata*))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryType.#ctor">
            <summary>
            <para>
            ReportingCategoryType describes the structure of a reporting category, which groups structure usages into useful sub-packages. Sub ordinate reporting categories can be nested within the category definition.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ((ReportingCategory)+)?, (StructuralMetadata* | ProvisioningMetadata*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryType.StructuralMetadata">
            <summary>
            <para>
            StructuralMetadata provides a reference for data structure definition and metadata structure definition references which are grouped in the reporting category. It is assumed that all structural metadata objects referenced from a category will be of the same type.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ((ReportingCategory)+)?, (StructuralMetadata* | ProvisioningMetadata*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryType.ProvisioningMetadata">
            <summary>
            <para>
            ProvisioningMetadata provides a reference for dataflow and metadataflow references which are grouped in the reporting category. It is assumed that all provisioning metadata objects referenced from a category will be of the same type.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ((ReportingCategory)+)?, (StructuralMetadata* | ProvisioningMetadata*))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetBaseType">
            <summary>
            <para>
            StructureSetBaseType is an abstract base type that forms the basis for the StructureSetType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetBaseType.#ctor">
            <summary>
            <para>
            StructureSetBaseType is an abstract base type that forms the basis for the StructureSetType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType">
            <summary>
            <para>
            StructureSetType describes the structure of a structure set. It allows components in one structure, structure usage, or item scheme to be mapped to components in another structural component of the same type.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.#ctor">
            <summary>
            <para>
            StructureSetType describes the structure of a structure set. It allows components in one structure, structure usage, or item scheme to be mapped to components in another structural component of the same type.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.RelatedStructure">
            <summary>
            <para>
            RelatedStructures contains references to structures (key families and metadata structure definitions) and structure usages (data flows and metadata flows) to indicate that a semantic relationship exist between them. The details of these relationships can be found in the structure maps.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.OrganisationSchemeMap">
            <summary>
            <para>
            OrganisationSchemeMap links a source and target organisations from different schemes where there is a semantic equivalence between them. Organisations are mapped without regard to role.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.CategorySchemeMap">
            <summary>
            <para>
            CategorySchemeMap links a source and target categories from different schemes where there is a semantic equivalence between them.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.CodelistMap">
            <summary>
            <para>
            CodelistMap links a source and target codes from different lists where there is a semantic equivalence between them.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.ConceptSchemeMap">
            <summary>
            <para>
            ConceptSchemeMap links a source and target concepts from different schemes where there is a semantic equivalence between them.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.ReportingTaxonomyMap">
            <summary>
            <para>
            ReportingTaxonomyMap links a source and target reporting categories from different taxonomies where there is a semantic equivalence between them.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.HybridCodelistMap">
            <summary>
            <para>
            HybridCodelistMap links a source and target codes from different codelists, which may be hierarchical or flat, where there is a semantic equivalence between them.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetType.StructureMap">
            <summary>
            <para>
            StructureMap maps components from one structure to components to another structure, and can describe how the value of the components are related.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, RelatedStructure*, (OrganisationSchemeMap | CategorySchemeMap | CodelistMap | ConceptSchemeMap | ReportingTaxonomyMap | HybridCodelistMap | StructureMap)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapBaseType">
            <summary>
            <para>
            ItemSchemeMapBaseType is an abstract base type which forms the basis for the ItemSchemeMapType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapBaseType.#ctor">
            <summary>
            <para>
            ItemSchemeMapBaseType is an abstract base type which forms the basis for the ItemSchemeMapType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType">
            <summary>
            <para>
            ItemSchemeMapType is an abstract base type which forms the basis for mapping items between item schemes of the same type.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, (ItemAssociation)+)
            </para>
            </summary>
            <summary>
                <para>
                    ItemSchemeMapType is an abstract base type which forms the basis for mapping items between item schemes of the
                    same type.
                </para>
                <para>
                    Regular expression: (Annotations?, Name+, Description*, Source, Target, (ItemAssociation)+)
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType.#ctor">
            <summary>
            <para>
            ItemSchemeMapType is an abstract base type which forms the basis for mapping items between item schemes of the same type.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, (ItemAssociation)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType.Source">
            <summary>
            <para>
            Source provides a reference to the item scheme which items are mapped from.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, (ItemAssociation)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType.Target">
            <summary>
            <para>
            Target provides a reference to the item scheme which items are mapped to.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, (ItemAssociation)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType.ItemAssociation">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ItemAssociation, OrganisationMap, CategoryMap, CodeMap, ConceptMap, ReportingCategoryMap
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, (ItemAssociation)+)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType._source">
            <summary>
                The _source
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType._target">
            <summary>
                The _target
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType.GetTypedSource``1">
            <summary>
                Gets the typed source.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based type.</typeparam>
            <returns>he <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based instance.</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemSchemeMapType.GetTypedTarget``1">
            <summary>
                Gets the typed source.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based type.</typeparam>
            <returns>he <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based instance.</returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType">
            <summary>
            <para>
            ItemAssociationType is an abstract type which defines the relationship between two items from the source and target item schemes of an item scheme map.
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
            <summary>
                <para>
                    ItemAssociationType is an abstract type which defines the relationship between two items from the source and
                    target item schemes of an item scheme map.
                </para>
                <para>
                    Regular expression: (Annotations?, Source, Target)
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType.#ctor">
            <summary>
            <para>
            ItemAssociationType is an abstract type which defines the relationship between two items from the source and target item schemes of an item scheme map.
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType.Source">
            <summary>
            <para>
            Source provides a local reference (id only) to an item from the source item scheme in the item scheme map which is being mapped to another item.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType.Target">
            <summary>
            <para>
            Target provides a local reference (id only) to an item from the target item scheme in the item scheme map which is being mapped from another item.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType._source">
            <summary>
                The _source
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType._target">
            <summary>
                The _target
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType.GetTypedSource``1">
            <summary>
                Gets the typed source.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based type.</typeparam>
            <returns>he <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based instance.</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType.GetTypedTarget``1">
            <summary>
                Gets the typed source.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based type.</typeparam>
            <returns>he <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based instance.</returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeMapType">
            <summary>
            <para>
            OrganisationSchemeMapType defines the structure of a map which identifies relationships between organisations in different organisation schemes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemeMapType.#ctor">
            <summary>
            <para>
            OrganisationSchemeMapType defines the structure of a map which identifies relationships between organisations in different organisation schemes.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationMapType">
            <summary>
            <para>
            OrganisationMapType defines the structure for mapping two organisations. A local reference is provided both the source and target organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationMapType.#ctor">
            <summary>
            <para>
            OrganisationMapType defines the structure for mapping two organisations. A local reference is provided both the source and target organisation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemeMapType">
            <summary>
            <para>
            CategorySchemeMapType defines the structure of a map which identifies relationships between categories in different category schemes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemeMapType.#ctor">
            <summary>
            <para>
            CategorySchemeMapType defines the structure of a map which identifies relationships between categories in different category schemes.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryMapType">
            <summary>
            <para>
            CategoryMapType defines the structure for mapping two categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryMapType.#ctor">
            <summary>
            <para>
            CategoryMapType defines the structure for mapping two categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistMapType">
            <summary>
            <para>
            CodelistMapType defines the structure of a map which identifies relationships between codes in different codelists.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistMapType.#ctor">
            <summary>
            <para>
            CodelistMapType defines the structure of a map which identifies relationships between codes in different codelists.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeMapType">
            <summary>
            <para>
            CodeMapType defines the structure for mapping two codes. A local reference is provided both the source and target code.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeMapType.#ctor">
            <summary>
            <para>
            CodeMapType defines the structure for mapping two codes. A local reference is provided both the source and target code.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptSchemeMapType">
            <summary>
            <para>
            ConceptSchemeMapType defines the structure of a map which identifies relationships between concepts in different concept schemes.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptSchemeMapType.#ctor">
            <summary>
            <para>
            ConceptSchemeMapType defines the structure of a map which identifies relationships between concepts in different concept schemes.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptMapType">
            <summary>
            <para>
            ConceptMapType defines the structure for mapping two concepts. A local reference is provided both the source and target concept.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptMapType.#ctor">
            <summary>
            <para>
            ConceptMapType defines the structure for mapping two concepts. A local reference is provided both the source and target concept.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomyMapType">
            <summary>
            <para>
            ReportingTaxonomyMapType defines the structure of a map which identifies relationships between reporting categories in different reporting taxonomies.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomyMapType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyMapType defines the structure of a map which identifies relationships between reporting categories in different reporting taxonomies.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryMapType">
            <summary>
            <para>
            ReportingCategoryMapType defines the structure for mapping two reporting categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryMapType.#ctor">
            <summary>
            <para>
            ReportingCategoryMapType defines the structure for mapping two reporting categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapBaseType">
            <summary>
            <para>
            HybridCodelistMapBaseType is an abstract base type which forms the basis for the HybridCodelistMapType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapBaseType.#ctor">
            <summary>
            <para>
            HybridCodelistMapBaseType is an abstract base type which forms the basis for the HybridCodelistMapType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapType">
            <summary>
            <para>
            HybridCodelistMapType defines the structure of a map which relates codes (possibly hierarchical) from different code lists.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, HybridCodeMap+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapType.#ctor">
            <summary>
            <para>
            HybridCodelistMapType defines the structure of a map which relates codes (possibly hierarchical) from different code lists.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, HybridCodeMap+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapType.Source">
            <summary>
            <para>
            Source provides a reference to either a codelist or a hierarchical codelist, from which the codes are to be mapped.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, HybridCodeMap+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapType.Target">
            <summary>
            <para>
            Target provides a reference to either a codelist or a hierarchical codelist, to which the source codes are to be mapped.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, HybridCodeMap+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodelistMapType.HybridCodeMap">
            <summary>
            <para>
            HybridCodeMap defines the relationship of a code in the source list to code in the target list.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, HybridCodeMap+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodeMapType">
            <summary>
            <para>
            CodeMapType defines the structure for associating a code from a source codelist to a code in a target codelist. Note that either of these may come from a hierarchical codelist.
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodeMapType.#ctor">
            <summary>
            <para>
            CodeMapType defines the structure for associating a code from a source codelist to a code in a target codelist. Note that either of these may come from a hierarchical codelist.
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodeMapType.Source">
            <summary>
            <para>
            Source provides a local reference to the code which is to be mapped. If this code is from a hierarchical codelist, a reference to the hierarchy in which it is defined must also be provided.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HybridCodeMapType.Target">
            <summary>
            <para>
            Target provides a local reference to the code to which the source code is mapped. If this code is from a hierarchical codelist, a reference to the hierarchy in which it is defined must also be provided.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapBaseType">
            <summary>
            <para>
            StructureMapBaseType is an abstract base type which forms the basis for the StructureMapType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapBaseType.#ctor">
            <summary>
            <para>
            StructureMapBaseType is an abstract base type which forms the basis for the StructureMapType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType">
            <summary>
            <para>
            StructureMapType defines the structure for mapping components of one structure to components of another structure. A structure may be referenced directly meaning the map applies wherever the structure is used, or it may be a reference via a structure usage meaning the map only applies within the context of that usage. Using the related structures, one can make extrapolations between maps. For example, if key families, A, B, and C, are all grouped in a related structures container, then a map from key family A to C and a map from key family B to C could be used to infer a relation between key family A to C.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, ComponentMap)
            </para>
            </summary>
            <summary>
                <para>
                    StructureMapType defines the structure for mapping components of one structure to components of another
                    structure. A structure may be referenced directly meaning the map applies wherever the structure is used, or it
                    may be a reference via a structure usage meaning the map only applies within the context of that usage. Using
                    the related structures, one can make extrapolations between maps. For example, if key families, A, B, and C,
                    are all grouped in a related structures container, then a map from key family A to C and a map from key family
                    B to C could be used to infer a relation between key family A to C.
                </para>
                <para>
                    Regular expression: (Annotations?, Name+, Description*, Source, Target, ComponentMap)
                </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType.#ctor">
            <summary>
            <para>
            StructureMapType defines the structure for mapping components of one structure to components of another structure. A structure may be referenced directly meaning the map applies wherever the structure is used, or it may be a reference via a structure usage meaning the map only applies within the context of that usage. Using the related structures, one can make extrapolations between maps. For example, if key families, A, B, and C, are all grouped in a related structures container, then a map from key family A to C and a map from key family B to C could be used to infer a relation between key family A to C.
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, ComponentMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType.Source">
            <summary>
            <para>
            Source provides a reference to a structure (data or metadata) or a structure usage (dataflow or metadataflow) from which components defined by the actual structure are to mapped.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, ComponentMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType.Target">
            <summary>
            <para>
            Target provides a reference to a structure (data or metadata) or a structure usage (dataflow or metadataflow) to which components from the source are to mapped.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, ComponentMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType.ComponentMap">
            <summary>
            <para>
            ComponentMap defines the relationship between the components of the source and target structures, including information on how the value from the source component relates to values in the target component.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, Source, Target, ComponentMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType.isExtension">
            <summary>
            <para>
            The isExtension attribute, when true, indicates that the target structure definition inherits all properties of the referenced structure definition, and may have additional components. Note that this attribute may only be set to true if the structure map has a source structure and a target structure of either two key families or two metadata structure definitions. It is not possible inherit the underlying concepts of components between the two type of structures using this mechanism.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType._componentMaps">
            <summary>
                The _component maps
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureMapType.ComponentMapTypes">
            <summary>
                Gets or sets the component map types.
            </summary>
            <value>
                The component map types.
            </value>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentMapType">
            <summary>
            <para>
            ComponentMapType defines the structure for relating a component in a source structure to a component in a target structure.
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target, RepresentationMapping?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentMapType.#ctor">
            <summary>
            <para>
            ComponentMapType defines the structure for relating a component in a source structure to a component in a target structure.
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target, RepresentationMapping?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentMapType.Source">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target, RepresentationMapping?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentMapType.Target">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target, RepresentationMapping?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentMapType.RepresentationMapping">
            <summary>
            <para>
            RepresentationMapping describes the mapping rules to map the value of the source component to the target component. Note that is a representation mapping is not supplied, then the value of the source component is mapped directly to the value of the target component without any manipulation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target, RepresentationMapping?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationMapType">
            <summary>
            <para>
            RepresentationMapType describes the structure of the mapping of the value of a source to component to a target component. Either a reference to another map defined within the containing structure set or a description of the source and target text formats must be provided. Note that for key family components, only a reference to a codelist map is relevant, since that is the only type of coded representation allowed in a key family.
            </para>
            <para>
            Regular expression: (CodelistMap | (ToTextFormat, ToValueType)|ValueMap)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationMapType.#ctor">
            <summary>
            <para>
            RepresentationMapType describes the structure of the mapping of the value of a source to component to a target component. Either a reference to another map defined within the containing structure set or a description of the source and target text formats must be provided. Note that for key family components, only a reference to a codelist map is relevant, since that is the only type of coded representation allowed in a key family.
            </para>
            <para>
            Regular expression: (CodelistMap | (ToTextFormat, ToValueType)|ValueMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationMapType.CodelistMap">
            <summary>
            <para>
            CodelistMap references a codelist map defined in the same structure set which maps The enumeration of the representation of the source component to The enumeration of the representation of the target component.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (CodelistMap | (ToTextFormat, ToValueType)|ValueMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationMapType.ToTextFormat">
            <summary>
            <para>
            ToTextFormat describes the un-coded representation of the target to which the value of the referenced component should be transformed.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (CodelistMap | (ToTextFormat, ToValueType)|ValueMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationMapType.ToValueType">
            <summary>
            <para>
            ToValueType notes whether the value, name, or description of the source value should be used in the target value.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (CodelistMap | (ToTextFormat, ToValueType)|ValueMap)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.RepresentationMapType.ValueMap">
            <summary>
            <para>
            ValueMap provides for a simple mapping of a source value to a target value without having to define a codelist map. This is available to allow mappings in situations such as the source or target is not being formally coded, or the source and/or target being a measure dimension in which case its representation is not mappable from a codelist map.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (CodelistMap | (ToTextFormat, ToValueType)|ValueMap)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMapType">
            <summary>
            <para>
            ValueMapType contains a collection of value mappings, which give a source and target value.
            </para>
            <para>
            Regular expression: (ValueMapping+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMapType.#ctor">
            <summary>
            <para>
            ValueMapType contains a collection of value mappings, which give a source and target value.
            </para>
            <para>
            Regular expression: (ValueMapping+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMapType.ValueMapping">
            <summary>
            <para>
            ValueMapping provides a source and target value for the purpose of mapping.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ValueMapping+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMappingType">
            <summary>
            <para>
            ValueMappingType specifies the relationship between two values as a source and target.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMappingType.#ctor">
            <summary>
            <para>
            ValueMappingType specifies the relationship between two values as a source and target.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMappingType.source">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ValueMappingType.target">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ToValueTypeType">
            <summary>
            <para>
            ToValueTypeType provides an enumeration of available text-equivalents for translation of coded values into textual formats.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType">
            <summary>
            <para>
            StructuresType describes the structure of the container for all structural metadata components. The structural components may be explicitly detailed, or referenced from an external structure document or registry service. Best practices dictate that, at a minimum, any structural component that is referenced by another structural component be included by reference.
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.#ctor">
            <summary>
            <para>
            StructuresType describes the structure of the container for all structural metadata components. The structural components may be explicitly detailed, or referenced from an external structure document or registry service. Best practices dictate that, at a minimum, any structural component that is referenced by another structural component be included by reference.
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.OrganisationSchemes">
            <summary>
            <para>
            OrganisationSchemes contains a collection of organisation scheme descriptions. The organisation schemes may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Dataflows">
            <summary>
            <para>
            Dataflows contains a collection of data flow descriptions. The data flows may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Metadataflows">
            <summary>
            <para>
            Metadataflows contains a collection of metadata flow descriptions. The metadata flows may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.CategorySchemes">
            <summary>
            <para>
            CategorySchemes contains a collection of category scheme descriptions. The category schemes may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Categorisations">
            <summary>
            <para>
            Categorisations contains a collection of structural object categorisations. This container may contain categorisations for many types of objects. The categorisations may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Codelists">
            <summary>
            <para>
            Codelists contains a collection of code list descriptions. The code lists may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.HierarchicalCodelists">
            <summary>
            <para>
            HierarchicalCodelists contains a collection of hierarchical code list descriptions. The hierarchical code lists may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Concepts">
            <summary>
            <para>
            Concepts contains a collection of concept descriptions. The concepts described may be both stand-alone concepts and concepts contained within schemes. The concepts may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.MetadataStructures">
            <summary>
            <para>
            MetadataStructures contains a collection of metadata structure definition descriptions. The metadata structure definitions may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.DataStructures">
            <summary>
            <para>
            DataStructures contains a collection of data structure definitions. The data structure definitions may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.StructureSets">
            <summary>
            <para>
            StructureSets contains a collection of structure set descriptions. The structure sets may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.ReportingTaxonomies">
            <summary>
            <para>
            ReportingTaxonomies contains a collection of reporting taxonomy descriptions. The reporting taxonomies may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Processes">
            <summary>
            <para>
            Processes contains a collection of process descriptions. The processes may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.Constraints">
            <summary>
            <para>
            Constraints contains a collection of constraint descriptions. This container may contain both attachment and content constraints. The constraints may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType.ProvisionAgreements">
            <summary>
            <para>
            ProvisionAgreements contains a collection of provision agreements. The provision agreements may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemesType">
            <summary>
            <para>
            OrganisationSchemesType describes the structure of the organisation schemes container. It contains one or more organisation scheme, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (AgencyScheme | DataConsumerScheme | DataProviderScheme | OrganisationUnitScheme)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemesType.#ctor">
            <summary>
            <para>
            OrganisationSchemesType describes the structure of the organisation schemes container. It contains one or more organisation scheme, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (AgencyScheme | DataConsumerScheme | DataProviderScheme | OrganisationUnitScheme)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemesType.AgencyScheme">
            <summary>
            <para>
            AgencyScheme provides the details of an agency scheme, in which agencies are described.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyScheme | DataConsumerScheme | DataProviderScheme | OrganisationUnitScheme)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemesType.DataConsumerScheme">
            <summary>
            <para>
            DataConsumerScheme provides the details of an data consumer scheme, in which data consumers are described.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyScheme | DataConsumerScheme | DataProviderScheme | OrganisationUnitScheme)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemesType.DataProviderScheme">
            <summary>
            <para>
            DataProviderScheme provides the details of an data provider scheme, in which data providers are described.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyScheme | DataConsumerScheme | DataProviderScheme | OrganisationUnitScheme)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationSchemesType.OrganisationUnitScheme">
            <summary>
            <para>
            OrganisationUnitScheme provides the details of an organisation unit scheme, in which organisation units are described.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AgencyScheme | DataConsumerScheme | DataProviderScheme | OrganisationUnitScheme)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataflowsType">
            <summary>
            <para>
            DataflowsType describes the structure of the data flows container. It contains one or more data flow, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Dataflow+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataflowsType.#ctor">
            <summary>
            <para>
            DataflowsType describes the structure of the data flows container. It contains one or more data flow, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Dataflow+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataflowsType.Dataflow">
            <summary>
            <para>
            Dataflow provides the details of a data flow, which is defined as the structure of data that will be provided for different reference periods.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Dataflow+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataflowsType">
            <summary>
            <para>
            MetadataflowsType describes the structure of the metadata flows container. It contains one or more metadata flow, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Metadataflow+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataflowsType.#ctor">
            <summary>
            <para>
            MetadataflowsType describes the structure of the metadata flows container. It contains one or more metadata flow, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Metadataflow+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataflowsType.Metadataflow">
            <summary>
            <para>
            Metadataflow provides the details of a metadata flow, which is defined as the structure of reference metadata that will be provided for different reference periods
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Metadataflow+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemesType">
            <summary>
            <para>
            CategorySchemesType describes the structure of the category schemes container. It contains one or more category scheme, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (CategoryScheme+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemesType.#ctor">
            <summary>
            <para>
            CategorySchemesType describes the structure of the category schemes container. It contains one or more category scheme, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (CategoryScheme+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorySchemesType.CategoryScheme">
            <summary>
            <para>
            CategoryScheme provides the details of a category scheme, which is the descriptive information for an arrangement or division of categories into groups based on characteristics, which the objects have in common. This provides for a simple, leveled hierarchy or categories.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (CategoryScheme+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationsType">
            <summary>
            <para>
            CategorisationsType describes the structure of the categorisations container. It contains one or more categorisation of a specific object type, which can be explicitly detailed or referenced from an external structure document or registry service. This container may contain categorisations for multiple types of structural objects.
            </para>
            <para>
            Regular expression: (Categorisation+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationsType.#ctor">
            <summary>
            <para>
            CategorisationsType describes the structure of the categorisations container. It contains one or more categorisation of a specific object type, which can be explicitly detailed or referenced from an external structure document or registry service. This container may contain categorisations for multiple types of structural objects.
            </para>
            <para>
            Regular expression: (Categorisation+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategorisationsType.Categorisation">
            <summary>
            <para>
            Categorisation allows for the association of an identifiable object to a category, providing for the classifications of the reference identifiable object. This must either contain the full details of the categorisation, or provide a name and identification information and reference the full details from an external structure document or registry service.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Categorisation+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistsType">
            <summary>
            <para>
            CodelistsType describes the structure of the code lists container. It contains one or more code list, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Codelist+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistsType.#ctor">
            <summary>
            <para>
            CodelistsType describes the structure of the code lists container. It contains one or more code list, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Codelist+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodelistsType.Codelist">
            <summary>
            <para>
            Codelist provides the details of a code list, which is defined as a list from which some statistical concepts (coded concepts) take their values.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Codelist+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistsType">
            <summary>
            <para>
            HierarchicalCodelistsType describes the structure of the hierarchical code lists container. It contains one or more hierarchical code list, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (HierarchicalCodelist+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistsType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistsType describes the structure of the hierarchical code lists container. It contains one or more hierarchical code list, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (HierarchicalCodelist+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.HierarchicalCodelistsType.HierarchicalCodelist">
            <summary>
            <para>
            HierarchicalCodelist provides the details of a hierarchical code list, which is defined as an organised collection of codes that may participate in many parent/child relationships with other codes in the list, as defined by one or more hierarchy of the list.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (HierarchicalCodelist+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptsType">
            <summary>
            <para>
            ConceptsType describes the structure of the concepts container. It contains one or more stand-alone concept or concept scheme, which can be explicitly detailed or referenced from an external structure document or registry service. This container may contain a mix of both stand-alone concepts and concept schemes.
            </para>
            <para>
            Regular expression: (ConceptScheme*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptsType.#ctor">
            <summary>
            <para>
            ConceptsType describes the structure of the concepts container. It contains one or more stand-alone concept or concept scheme, which can be explicitly detailed or referenced from an external structure document or registry service. This container may contain a mix of both stand-alone concepts and concept schemes.
            </para>
            <para>
            Regular expression: (ConceptScheme*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptsType.ConceptScheme">
            <summary>
            <para>
            ConceptScheme provides the details of a concept scheme, which is the descriptive information for an arrangement or division of concepts into groups based on characteristics, which the objects have in common. It contains a collection of concept definitions, that may be arranged in simple hierarchies.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ConceptScheme*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructuresType">
            <summary>
            <para>
            MetadataStructuresType describes the structure of the metadata structure definitions container. It contains one or more metadata structure definition, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (MetadataStructure+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructuresType.#ctor">
            <summary>
            <para>
            MetadataStructuresType describes the structure of the metadata structure definitions container. It contains one or more metadata structure definition, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (MetadataStructure+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructuresType.MetadataStructure">
            <summary>
            <para>
            MetadataStructure provides the details of a metadata structure definition, which is defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate reference metadata. A metadata structure definition performs several functions: it groups sets of objects into "targets" against which reference metadata may be reported. Targets define the structure of the reference metadata "keys" which identify specific types of reported metadata, and describe the valid values for populating the keys. Also, metadata structure definitions provide a presentational organization of concepts for reporting purposes. The structure of a reference metadata report is derived from this presentational structure.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (MetadataStructure+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructuresType">
            <summary>
            <para>
            DataStructuresType describes the structure of the data structure definitions container. It contains one or more data structure definition, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (DataStructure+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructuresType.#ctor">
            <summary>
            <para>
            DataStructuresType describes the structure of the data structure definitions container. It contains one or more data structure definition, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (DataStructure+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructuresType.DataStructure">
            <summary>
            <para>
            DataStructure provides the details of a data structure definition, which is defined as a collection of metadata concepts, their structure and usage when used to collect or disseminate data.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (DataStructure+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetsType">
            <summary>
            <para>
            StructureSetsType describes the structure of the structure sets container. It contains one or more structure set, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (StructureSet+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetsType.#ctor">
            <summary>
            <para>
            StructureSetsType describes the structure of the structure sets container. It contains one or more structure set, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (StructureSet+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructureSetsType.StructureSet">
            <summary>
            <para>
            StructureSet provides the details or a structure set, which allows components in one structure, structure usage, or item scheme to be mapped to components in another structural component of the same type.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (StructureSet+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomiesType">
            <summary>
            <para>
            ReportingTaxonomiesType describes the structure of the reporting taxonomies container. It contains one or more reporting taxonomy, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (ReportingTaxonomy+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomiesType.#ctor">
            <summary>
            <para>
            ReportingTaxonomiesType describes the structure of the reporting taxonomies container. It contains one or more reporting taxonomy, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (ReportingTaxonomy+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingTaxonomiesType.ReportingTaxonomy">
            <summary>
            <para>
            ReportingTaxonomy provides the details of a reporting taxonomy, which is a scheme which defines the composition structure of a data report where each component can be described by an independent data or metadata flow definition.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ReportingTaxonomy+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessesType">
            <summary>
            <para>
            ProcessesType describes the structure of the processes container. It contains one or more process, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Process+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessesType.#ctor">
            <summary>
            <para>
            ProcessesType describes the structure of the processes container. It contains one or more process, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (Process+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProcessesType.Process">
            <summary>
            <para>
            Process provides the details of a process, which is a scheme which defines or documents the operations performed on data in order to validate data or to derive new information according to a given set of rules. It is not meant to support process automation, but serves as a description of how processes occur. The primary use for this structural mechanism is the attachment of reference metadata regarding statistical processing. This must either contain the full details of the category scheme, or provide a name and identification information and reference the full details from an external structure document or registry service.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Process+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintsType">
            <summary>
            <para>
            ConstraintsType describes the structure of the constraints container. It contains one or more constraint, which can be explicitly detailed or referenced from an external structure document or registry service. This container may contain both attachment and content constraints.
            </para>
            <para>
            Regular expression: (AttachmentConstraint | ContentConstraint)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintsType.#ctor">
            <summary>
            <para>
            ConstraintsType describes the structure of the constraints container. It contains one or more constraint, which can be explicitly detailed or referenced from an external structure document or registry service. This container may contain both attachment and content constraints.
            </para>
            <para>
            Regular expression: (AttachmentConstraint | ContentConstraint)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintsType.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint describes sub sets of the content of a data or metadata set in terms of the content regions or in terms of the set of key combinations to which attributes or reference metadata (as defined by structure definitions) may be attached.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AttachmentConstraint | ContentConstraint)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintsType.ContentConstraint">
            <summary>
            <para>
            ContentConstraint specifies a sub set of the definition of the allowable or available content of a data or metadata set in terms of the content or in terms of the set of key combinations.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AttachmentConstraint | ContentConstraint)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementsType">
            <summary>
            <para>
            ProvisionAgreementsType describes the structure of the provision agreements container. It contains one or more provision agreement, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (ProvisionAgreement+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementsType.#ctor">
            <summary>
            <para>
            ProvisionAgreementsType describes the structure of the provision agreements container. It contains one or more provision agreement, which can be explicitly detailed or referenced from an external structure document or registry service.
            </para>
            <para>
            Regular expression: (ProvisionAgreement+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ProvisionAgreementsType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreement provides the details of a provision agreement, which is an agreement for a data provider to report data or reference metadata against a flow.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ProvisionAgreement+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item">
            <summary>
            <para>
            ItemType is an abstract base type for all items with in an item scheme. Concrete instances of this type may or may not utilize the nested item, but if so should restrict the actual types of item allowed.
            </para>
            </summary>
            <summary>
                The Item class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item.#ctor">
            <summary>
            <para>
            ItemType is an abstract base type for all items with in an item scheme. Concrete instances of this type may or may not utilize the nested item, but if so should restrict the actual types of item allowed.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemType)">
            <summary>
            <para>
            ItemType is an abstract base type for all items with in an item scheme. Concrete instances of this type may or may not utilize the nested item, but if so should restrict the actual types of item allowed.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item.Parent">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent | (Item)+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item.Item1">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Item, Category, Code, Concept, Organisation, Agency, DataConsumer, DataProvider, OrganisationUnit, ReportingCategory
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent | (Item)+)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item.GetTypedParent``1">
            <summary>
                Gets the typed parent.
            </summary>
            <typeparam name="T">The type of the parent.</typeparam>
            <returns>The parent item of this item; otherwise null.</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Item.SetTypedParent``1(``0)">
            <summary>
                Sets the typed parent.
            </summary>
            <typeparam name="T">The type of the parent.</typeparam>
            <param name="value">The value.</param>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Grouping">
            <summary>
            <para>
            GroupType is an abstract base type for specific structure groupings. It contains a collection of component lists. Concrete instances of this should restrict to specific concrete component lists.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Grouping.#ctor">
            <summary>
            <para>
            GroupType is an abstract base type for specific structure groupings. It contains a collection of component lists. Concrete instances of this should restrict to specific concrete component lists.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Grouping.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupingType)">
            <summary>
            <para>
            GroupType is an abstract base type for specific structure groupings. It contains a collection of component lists. Concrete instances of this should restrict to specific concrete component lists.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Grouping.ComponentList">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ComponentList, AttributeList, DimensionList, Group, MeasureList, MetadataTarget, ReportStructure
            </para>
            <para>
            Regular expression: ((ComponentList)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentList">
            <summary>
            <para>
            ComponentListType is an abstract base type for all component lists. It contains a collection of components. Concrete types should restrict this to specific concrete components.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentList.#ctor">
            <summary>
            <para>
            ComponentListType is an abstract base type for all component lists. It contains a collection of components. Concrete types should restrict this to specific concrete components.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentList.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentListType)">
            <summary>
            <para>
            ComponentListType is an abstract base type for all component lists. It contains a collection of components. Concrete types should restrict this to specific concrete components.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentList.Component">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: Component, Attribute, ReportingYearStartDay, Dimension, TimeDimension, MeasureDimension, GroupDimension, PrimaryMeasure, KeyDescriptorValuesTarget, DataSetTarget, ConstraintContentTarget, ReportPeriodTarget, IdentifiableObjectTarget, MetadataAttribute
            </para>
            <para>
            Regular expression: (Annotations?, (Component)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Component">
            <summary>
            <para>
            ComponentType is an abstract base type for all components. It contains information pertaining to a component, including an optional reference to a concept, an optional role played by the concept, an optional text format description, and an optional local representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Component.#ctor">
            <summary>
            <para>
            ComponentType is an abstract base type for all components. It contains information pertaining to a component, including an optional reference to a concept, an optional role played by the concept, an optional text format description, and an optional local representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Component.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ComponentType)">
            <summary>
            <para>
            ComponentType is an abstract base type for all components. It contains information pertaining to a component, including an optional reference to a concept, an optional role played by the concept, an optional text format description, and an optional local representation.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Component.ConceptIdentity">
            <summary>
            <para>
            ConceptIdentity allows for the referencing of a concept in a concept scheme. The component takes its semantic from this concept, and if an id is not specified, it takes its identification as well. If a representation (LocalRepresentation) is not supplied, then the representation of the component is also inherited from the concept. Note that in the case of the component representation being inherited from the concept, the allowable representations for the component still apply. Therefore, if a component references a concept with a core representation that is not allowed for the concept, that representation must be locally overridden. For components which can specify a concept role, it is implied that the concept which is referenced also identifies a role for the component.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Component.LocalRepresentation">
            <summary>
            <para>
            LocalRepresentation references item schemes that may be used to create the representation of a component. The type of this must be refined such that a concrete item scheme reference is used.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity?, LocalRepresentation?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Category">
            <summary>
            <para>
            CategoryType describes the details of a category. A category is defined as an item at any level in a classification. The Category element represents a set of nested categories which are child categories.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Category.#ctor">
            <summary>
            <para>
            CategoryType describes the details of a category. A category is defined as an item at any level in a classification. The Category element represents a set of nested categories which are child categories.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Category.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryType)">
            <summary>
            <para>
            CategoryType describes the details of a category. A category is defined as an item at any level in a classification. The Category element represents a set of nested categories which are child categories.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Code">
            <summary>
            <para>
            CodeType describes the structure of a code. A code is defined as a language independent set of letters, numbers or symbols that represent a concept whose meaning is described in a natural language. Presentational information not present may be added through the use of annotations.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Code.#ctor">
            <summary>
            <para>
            CodeType describes the structure of a code. A code is defined as a language independent set of letters, numbers or symbols that represent a concept whose meaning is described in a natural language. Presentational information not present may be added through the use of annotations.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Code.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeType)">
            <summary>
            <para>
            CodeType describes the structure of a code. A code is defined as a language independent set of letters, numbers or symbols that represent a concept whose meaning is described in a natural language. Presentational information not present may be added through the use of annotations.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Concept">
            <summary>
            <para>
            ConceptType describes the details of a concept. A concept is defined as a unit of knowledge created by a unique combination of characteristics. If a concept does not specify a TextFormat or a core representation, then the representation of the concept is assumed to be represented by any set of valid characters (corresponding to the xs:string datatype of W3C XML Schema).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Concept.#ctor">
            <summary>
            <para>
            ConceptType describes the details of a concept. A concept is defined as a unit of knowledge created by a unique combination of characteristics. If a concept does not specify a TextFormat or a core representation, then the representation of the concept is assumed to be represented by any set of valid characters (corresponding to the xs:string datatype of W3C XML Schema).
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Concept.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptType)">
            <summary>
            <para>
            ConceptType describes the details of a concept. A concept is defined as a unit of knowledge created by a unique combination of characteristics. If a concept does not specify a TextFormat or a core representation, then the representation of the concept is assumed to be represented by any set of valid characters (corresponding to the xs:string datatype of W3C XML Schema).
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Concept.CoreRepresentation">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, CoreRepresentation?, ISOConceptReference?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Concept.ISOConceptReference">
            <summary>
            <para>
            Provides a reference to an ISO 11179 concept.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, CoreRepresentation?, ISOConceptReference?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents">
            <summary>
            <para>
            DataStructureComponentsType describes the structure of the grouping to the sets of metadata concepts that have a defined structural role in the data structure definition. At a minimum at least one dimension and a primary measure must be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents.#ctor">
            <summary>
            <para>
            DataStructureComponentsType describes the structure of the grouping to the sets of metadata concepts that have a defined structural role in the data structure definition. At a minimum at least one dimension and a primary measure must be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponentsType)">
            <summary>
            <para>
            DataStructureComponentsType describes the structure of the grouping to the sets of metadata concepts that have a defined structural role in the data structure definition. At a minimum at least one dimension and a primary measure must be defined.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents.DimensionList">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents.Group">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents.AttributeList">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataStructureComponents.MeasureList">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DimensionList, Group*, AttributeList?, MeasureList)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeList">
            <summary>
            <para>
            AttributeListType describes the attribute descriptor for the data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeList.#ctor">
            <summary>
            <para>
            AttributeListType describes the attribute descriptor for the data structure definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeList.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeListType)">
            <summary>
            <para>
            AttributeListType describes the attribute descriptor for the data structure definition.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeList.Attribute">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Attribute | ReportingYearStartDay)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeList.ReportingYearStartDay">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Attribute | ReportingYearStartDay)+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Attribute">
            <summary>
            <para>
            AttributeType describes the structure of a data attribute, which is defined as a characteristic of an object or entity. The attribute takes its semantic, and in some cases it representation, from its concept identity. An attribute can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the attribute if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the attribute may take these from the referenced concept. An attribute specifies its relationship with other data structure components and is given an assignment status. These two properties dictate where in a data message the attribute will be attached, and whether or not the attribute will be required to be given a value. A set of roles defined in concept scheme can be assigned to the attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Attribute.#ctor">
            <summary>
            <para>
            AttributeType describes the structure of a data attribute, which is defined as a characteristic of an object or entity. The attribute takes its semantic, and in some cases it representation, from its concept identity. An attribute can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the attribute if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the attribute may take these from the referenced concept. An attribute specifies its relationship with other data structure components and is given an assignment status. These two properties dictate where in a data message the attribute will be attached, and whether or not the attribute will be required to be given a value. A set of roles defined in concept scheme can be assigned to the attribute.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Attribute.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AttributeType)">
            <summary>
            <para>
            AttributeType describes the structure of a data attribute, which is defined as a characteristic of an object or entity. The attribute takes its semantic, and in some cases it representation, from its concept identity. An attribute can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the attribute if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the attribute may take these from the referenced concept. An attribute specifies its relationship with other data structure components and is given an assignment status. These two properties dictate where in a data message the attribute will be attached, and whether or not the attribute will be required to be given a value. A set of roles defined in concept scheme can be assigned to the attribute.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Attribute.ConceptRole">
            <summary>
            <para>
            ConceptRole references concepts which define roles which this attribute serves. If the concept from which the attribute takes its identity also defines a role the concept serves, then the isConceptRole indicator can be set to true on the concept identity rather than repeating the reference here.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*, AttributeRelationship)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Attribute.AttributeRelationship">
            <summary>
            <para>
            AttributeRelationship describes how the value of this attribute varies with the values of other components. These relationships will be used to determine the attachment level of the attribute in the various data formats.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, ConceptRole*, AttributeRelationship)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Attribute.assignmentStatus">
            <summary>
            <para>
            The assignmentStatus attribute indicates whether a value must be provided for the attribute when sending documentation along with the data.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDay">
            <summary>
            <para>
            ReportingYearStartDayType defines the structure of the reporting year start day attribute. The reporting year start day attribute takes its semantic from its concept identity (usually the REPORTING_YEAR_START_DAY concept), yet is always has a fixed identifier (REPORTING_YEAR_START_DAY). The reporting year start day attribute always has a fixed text format, which specifies that the format of its value is always a day and month in the ISO 8601 format of '--MM-DD'. As with any other attribute, an attribute relationship must be specified. this relationship should be carefully selected as it will determin what type of data the data structure definition will allow. For example, if an attribute relationship of none is specified, this will mean the data sets conforming to this data structure definition can only contain data with standard reporting periods where the all reporting periods have the same start day. In this case, data reported as standard reporting periods from two entities with different fiscal year start days could not be contained in the same data set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDay.#ctor">
            <summary>
            <para>
            ReportingYearStartDayType defines the structure of the reporting year start day attribute. The reporting year start day attribute takes its semantic from its concept identity (usually the REPORTING_YEAR_START_DAY concept), yet is always has a fixed identifier (REPORTING_YEAR_START_DAY). The reporting year start day attribute always has a fixed text format, which specifies that the format of its value is always a day and month in the ISO 8601 format of '--MM-DD'. As with any other attribute, an attribute relationship must be specified. this relationship should be carefully selected as it will determin what type of data the data structure definition will allow. For example, if an attribute relationship of none is specified, this will mean the data sets conforming to this data structure definition can only contain data with standard reporting periods where the all reporting periods have the same start day. In this case, data reported as standard reporting periods from two entities with different fiscal year start days could not be contained in the same data set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDay.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingYearStartDayType)">
            <summary>
            <para>
            ReportingYearStartDayType defines the structure of the reporting year start day attribute. The reporting year start day attribute takes its semantic from its concept identity (usually the REPORTING_YEAR_START_DAY concept), yet is always has a fixed identifier (REPORTING_YEAR_START_DAY). The reporting year start day attribute always has a fixed text format, which specifies that the format of its value is always a day and month in the ISO 8601 format of '--MM-DD'. As with any other attribute, an attribute relationship must be specified. this relationship should be carefully selected as it will determin what type of data the data structure definition will allow. For example, if an attribute relationship of none is specified, this will mean the data sets conforming to this data structure definition can only contain data with standard reporting periods where the all reporting periods have the same start day. In this case, data reported as standard reporting periods from two entities with different fiscal year start days could not be contained in the same data set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionList">
            <summary>
            <para>
            DimensionListType describes the key descriptor for a data structure definition. The order of the declaration of child dimensions is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the time dimension, which is not represented as a member of the ordered key). Any data structure definition which uses the time dimension should also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). If is not necessary to assign a time dimension, as data can be organised in any fashion required.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionList.#ctor">
            <summary>
            <para>
            DimensionListType describes the key descriptor for a data structure definition. The order of the declaration of child dimensions is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the time dimension, which is not represented as a member of the ordered key). Any data structure definition which uses the time dimension should also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). If is not necessary to assign a time dimension, as data can be organised in any fashion required.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionList.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionListType)">
            <summary>
            <para>
            DimensionListType describes the key descriptor for a data structure definition. The order of the declaration of child dimensions is significant: it is used to describe the order in which they will appear in data formats for which key values are supplied in an ordered fashion (exclusive of the time dimension, which is not represented as a member of the ordered key). Any data structure definition which uses the time dimension should also declare a frequency dimension, conventionally the first dimension in the key (the set of ordered non-time dimensions). If is not necessary to assign a time dimension, as data can be organised in any fashion required.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionList.Dimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionList.MeasureDimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionList.TimeDimension">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Dimension | MeasureDimension | TimeDimension)+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Dimension">
            <summary>
            <para>
            DimensionType describes the structure of an ordinary dimension, which is defined as a statistical concept used (most probably together with other statistical concepts) to identify a statistical series, such as a time series, e.g. a statistical concept indicating certain economic activity or a geographical reference area. The dimension takes its semantic, and in some cases it representation, from its concept identity. A dimension can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the dimension if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the dimension may take these from the referenced concept.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Dimension.#ctor">
            <summary>
            <para>
            DimensionType describes the structure of an ordinary dimension, which is defined as a statistical concept used (most probably together with other statistical concepts) to identify a statistical series, such as a time series, e.g. a statistical concept indicating certain economic activity or a geographical reference area. The dimension takes its semantic, and in some cases it representation, from its concept identity. A dimension can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the dimension if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the dimension may take these from the referenced concept.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Dimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DimensionType)">
            <summary>
            <para>
            DimensionType describes the structure of an ordinary dimension, which is defined as a statistical concept used (most probably together with other statistical concepts) to identify a statistical series, such as a time series, e.g. a statistical concept indicating certain economic activity or a geographical reference area. The dimension takes its semantic, and in some cases it representation, from its concept identity. A dimension can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the dimension if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the dimension may take these from the referenced concept.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimension">
            <summary>
            <para>
            TimeDimensionType describes the structure of a time dimension. The time dimension takes its semantic from its concept identity (usually the TIME_PERIOD concept), yet is always has a fixed identifier (TIME_PERIOD). The time dimension always has a fixed text format, which specifies that its format is always the in the value set of the observational time period (see common:ObservationalTimePeriodType). It is possible that the format may be a sub-set of the observational time period value set. For example, it is possible to state that the representation might always be a calendar year. See The enumerationerations of the textType attribute in the LocalRepresentation/TextFormat for more details of the possible sub-sets. It is also possible to facet this representation with start and end dates. The purpose of such facts is to restrict the value of the time dimension to occur within the specified range. If the time dimension is expected to allow for the standard reporting periods (see common:ReportingTimePeriodType) to be used, then it is strongly recommended that the reporting year start day attribute also be included in the data structure definition. When the reporting year start day attribute is used, any standard reporting period values will be assumed to be based on the start day contained in this attribute. If the reporting year start day attribute is not included and standard reporting periods are used, these values will be assumed to be based on a reporting year which begins January 1.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimension.#ctor">
            <summary>
            <para>
            TimeDimensionType describes the structure of a time dimension. The time dimension takes its semantic from its concept identity (usually the TIME_PERIOD concept), yet is always has a fixed identifier (TIME_PERIOD). The time dimension always has a fixed text format, which specifies that its format is always the in the value set of the observational time period (see common:ObservationalTimePeriodType). It is possible that the format may be a sub-set of the observational time period value set. For example, it is possible to state that the representation might always be a calendar year. See The enumerationerations of the textType attribute in the LocalRepresentation/TextFormat for more details of the possible sub-sets. It is also possible to facet this representation with start and end dates. The purpose of such facts is to restrict the value of the time dimension to occur within the specified range. If the time dimension is expected to allow for the standard reporting periods (see common:ReportingTimePeriodType) to be used, then it is strongly recommended that the reporting year start day attribute also be included in the data structure definition. When the reporting year start day attribute is used, any standard reporting period values will be assumed to be based on the start day contained in this attribute. If the reporting year start day attribute is not included and standard reporting periods are used, these values will be assumed to be based on a reporting year which begins January 1.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.TimeDimensionType)">
            <summary>
            <para>
            TimeDimensionType describes the structure of a time dimension. The time dimension takes its semantic from its concept identity (usually the TIME_PERIOD concept), yet is always has a fixed identifier (TIME_PERIOD). The time dimension always has a fixed text format, which specifies that its format is always the in the value set of the observational time period (see common:ObservationalTimePeriodType). It is possible that the format may be a sub-set of the observational time period value set. For example, it is possible to state that the representation might always be a calendar year. See The enumerationerations of the textType attribute in the LocalRepresentation/TextFormat for more details of the possible sub-sets. It is also possible to facet this representation with start and end dates. The purpose of such facts is to restrict the value of the time dimension to occur within the specified range. If the time dimension is expected to allow for the standard reporting periods (see common:ReportingTimePeriodType) to be used, then it is strongly recommended that the reporting year start day attribute also be included in the data structure definition. When the reporting year start day attribute is used, any standard reporting period values will be assumed to be based on the start day contained in this attribute. If the reporting year start day attribute is not included and standard reporting periods are used, these values will be assumed to be based on a reporting year which begins January 1.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimension">
            <summary>
            <para>
            MeasureDimensionType defines the structure of the measure dimension. It is derived from the base dimension structure, but requires that a coded representation taken from a concept scheme is given.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimension.#ctor">
            <summary>
            <para>
            MeasureDimensionType defines the structure of the measure dimension. It is derived from the base dimension structure, but requires that a coded representation taken from a concept scheme is given.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureDimensionType)">
            <summary>
            <para>
            MeasureDimensionType defines the structure of the measure dimension. It is derived from the base dimension structure, but requires that a coded representation taken from a concept scheme is given.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Group">
            <summary>
            <para>
            GroupType describes the structure of a group descriptor in a data structure definition. A group may consist of a of partial key, or collection of distinct cube regions or key sets to which attributes may be attached. The purpose of a group is to specify attributes values which have the same value based on some common dimensionality. All groups declared in the data structure must be unique - that is, you may not have duplicate partial keys. All groups must be given unique identifiers.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Group.#ctor">
            <summary>
            <para>
            GroupType describes the structure of a group descriptor in a data structure definition. A group may consist of a of partial key, or collection of distinct cube regions or key sets to which attributes may be attached. The purpose of a group is to specify attributes values which have the same value based on some common dimensionality. All groups declared in the data structure must be unique - that is, you may not have duplicate partial keys. All groups must be given unique identifiers.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Group.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupType)">
            <summary>
            <para>
            GroupType describes the structure of a group descriptor in a data structure definition. A group may consist of a of partial key, or collection of distinct cube regions or key sets to which attributes may be attached. The purpose of a group is to specify attributes values which have the same value based on some common dimensionality. All groups declared in the data structure must be unique - that is, you may not have duplicate partial keys. All groups must be given unique identifiers.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Group.GroupDimension">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (GroupDimension+ | AttachmentConstraint))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Group.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint references an attachment constraint that defines the key sets and/or cube regions that attributes may be attached to. This is an alternative to referencing the dimensions, and allows attributes to be attached to data for given values of dimensions.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (GroupDimension+ | AttachmentConstraint))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimension">
            <summary>
            <para>
            GroupDimensionType defines a dimension component with a group key descriptor component list. Although technically a component, this is essentially a reference to a dimension defined in the key descriptor. Therefore, the identification, name, and description, concept identity and representation properties that are typically available for a component are not allowed here, as they are all inherited from the referenced dimension.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimension.#ctor">
            <summary>
            <para>
            GroupDimensionType defines a dimension component with a group key descriptor component list. Although technically a component, this is essentially a reference to a dimension defined in the key descriptor. Therefore, the identification, name, and description, concept identity and representation properties that are typically available for a component are not allowed here, as they are all inherited from the referenced dimension.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimension.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimensionType)">
            <summary>
            <para>
            GroupDimensionType defines a dimension component with a group key descriptor component list. Although technically a component, this is essentially a reference to a dimension defined in the key descriptor. Therefore, the identification, name, and description, concept identity and representation properties that are typically available for a component are not allowed here, as they are all inherited from the referenced dimension.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.GroupDimension.DimensionReference">
            <summary>
            <para>
            DimensionReference provides a reference to a dimension defined in the key descriptor of the data structure definition in which this group key descriptor is defined.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DimensionReference)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureList">
            <summary>
            <para>
            MeasureListType describes the structure of the measure descriptor for a data structure definition. Only a primary may be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureList.#ctor">
            <summary>
            <para>
            MeasureListType describes the structure of the measure descriptor for a data structure definition. Only a primary may be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureList.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MeasureListType)">
            <summary>
            <para>
            MeasureListType describes the structure of the measure descriptor for a data structure definition. Only a primary may be defined.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.PrimaryMeasure">
            <summary>
            <para>
            PrimaryMeasureType describes the structure of the primary measure. It describes the observation values for all presentations of the data. The primary measure takes its semantic, and in some cases it representation, from its concept identity (conventionally the OBS_VALUE concept). The primary measure can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the primary measure if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the primary measure may take these from the referenced concept. Note that if the data structure declares a measure dimension, the representation of this must be a superset of all possible measure concept representations.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.PrimaryMeasure.#ctor">
            <summary>
            <para>
            PrimaryMeasureType describes the structure of the primary measure. It describes the observation values for all presentations of the data. The primary measure takes its semantic, and in some cases it representation, from its concept identity (conventionally the OBS_VALUE concept). The primary measure can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the primary measure if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the primary measure may take these from the referenced concept. Note that if the data structure declares a measure dimension, the representation of this must be a superset of all possible measure concept representations.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.PrimaryMeasure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.PrimaryMeasureType)">
            <summary>
            <para>
            PrimaryMeasureType describes the structure of the primary measure. It describes the observation values for all presentations of the data. The primary measure takes its semantic, and in some cases it representation, from its concept identity (conventionally the OBS_VALUE concept). The primary measure can be coded by referencing a code list from its coded local representation. It can also specify its text format, which is used as the representation of the primary measure if a coded representation is not defined. Neither the coded or uncoded representation are necessary, since the primary measure may take these from the referenced concept. Note that if the data structure declares a measure dimension, the representation of this must be a superset of all possible measure concept representations.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponents">
            <summary>
            <para>
            MetadataStructureComponentsType describes the structure of the grouping of the sets of the components that make up the metadata structure definition. At a minimum, a full target identifier and at least one report structure must be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponents.#ctor">
            <summary>
            <para>
            MetadataStructureComponentsType describes the structure of the grouping of the sets of the components that make up the metadata structure definition. At a minimum, a full target identifier and at least one report structure must be defined.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponents.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponentsType)">
            <summary>
            <para>
            MetadataStructureComponentsType describes the structure of the grouping of the sets of the components that make up the metadata structure definition. At a minimum, a full target identifier and at least one report structure must be defined.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponents.MetadataTarget">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (MetadataTarget+, ReportStructure+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataStructureComponents.ReportStructure">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (MetadataTarget+, ReportStructure+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTarget.KeyDescriptorValuesTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTarget.DataSetTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTarget.ConstraintContentTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTarget.ReportPeriodTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataTarget.IdentifiableObjectTarget">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (KeyDescriptorValuesTarget | DataSetTarget | ConstraintContentTarget | ReportPeriodTarget | IdentifiableObjectTarget)+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTarget">
            <summary>
            <para>
            KeyDescriptorValuesTargetType defines the structure of a key descriptor values target object. The key descriptor values target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTarget.#ctor">
            <summary>
            <para>
            KeyDescriptorValuesTargetType defines the structure of a key descriptor values target object. The key descriptor values target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.KeyDescriptorValuesTargetType)">
            <summary>
            <para>
            KeyDescriptorValuesTargetType defines the structure of a key descriptor values target object. The key descriptor values target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTarget">
            <summary>
            <para>
            DataSetTargetType defines the structure of a data set target object. The data set target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTarget.#ctor">
            <summary>
            <para>
            DataSetTargetType defines the structure of a data set target object. The data set target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataSetTargetType)">
            <summary>
            <para>
            DataSetTargetType defines the structure of a data set target object. The data set target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintContentTarget">
            <summary>
            <para>
            ConstraintTargetType defines the structure of a constraint target object. The constraint target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintContentTarget.#ctor">
            <summary>
            <para>
            ConstraintTargetType defines the structure of a constraint target object. The constraint target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintContentTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConstraintContentTargetType)">
            <summary>
            <para>
            ConstraintTargetType defines the structure of a constraint target object. The constraint target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodTarget">
            <summary>
            <para>
            ReportPeriodTargetType defines the structure of a report period target object. The report period target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodTarget.#ctor">
            <summary>
            <para>
            ReportPeriodTargetType defines the structure of a report period target object. The report period target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportPeriodTargetType)">
            <summary>
            <para>
            ReportPeriodTargetType defines the structure of a report period target object. The report period target object has a fixed representation and identifier.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTarget">
            <summary>
            <para>
            IdentifiableObjectTargetType defines the structure of an identifiable target object. The identifiable target object has a fixed representation of a reference and can specify a local representation of any item scheme for the purpose of restricting which items may be referenced. The identifiable object target must specify the object type which the target object is meant to reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTarget.#ctor">
            <summary>
            <para>
            IdentifiableObjectTargetType defines the structure of an identifiable target object. The identifiable target object has a fixed representation of a reference and can specify a local representation of any item scheme for the purpose of restricting which items may be referenced. The identifiable object target must specify the object type which the target object is meant to reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTarget.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTargetType)">
            <summary>
            <para>
            IdentifiableObjectTargetType defines the structure of an identifiable target object. The identifiable target object has a fixed representation of a reference and can specify a local representation of any item scheme for the purpose of restricting which items may be referenced. The identifiable object target must specify the object type which the target object is meant to reference.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.IdentifiableObjectTarget.objectType">
            <summary>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructure">
            <summary>
            <para>
            ReportStructureType describes the structure of a report structure. It comprises a set of metadata attributes that can be defined as a hierarchy, and identifies the potential attachment of these attributes to an object by referencing a target identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructure.#ctor">
            <summary>
            <para>
            ReportStructureType describes the structure of a report structure. It comprises a set of metadata attributes that can be defined as a hierarchy, and identifies the potential attachment of these attributes to an object by referencing a target identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructure.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructureType)">
            <summary>
            <para>
            ReportStructureType describes the structure of a report structure. It comprises a set of metadata attributes that can be defined as a hierarchy, and identifies the potential attachment of these attributes to an object by referencing a target identifier.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportStructure.MetadataTarget">
            <summary>
            <para>
            MetadataTarget references a metadata target defined in the metadata structure definition. A report structure can reference multiple metadata targets which allows a report structure to be reused for attaching metadata to different types of targets.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, (MetadataAttribute)+, MetadataTarget+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute">
            <summary>
            <para>
            MetadataAttributeType describes the structure of a metadata attribute. The metadata attribute takes its semantic, and in some cases it representation, from its concept identity. A metadata attribute may be coded (via the local representation), uncoded (via the text format), or take no value. In addition to this value, the metadata attribute may also specify subordinate metadata attributes. If a metadata attribute only serves the purpose of containing subordinate metadata attributes, then the isPresentational attribute should be used. Otherwise, it is assumed to also take a value. If the metadata attribute does take a value, and a representation is not defined, it will be inherited from the concept it takes its semantic from. The optional id on the metadata attribute uniquely identifies it within the metadata structured definition. If this id is not supplied, its value is assumed to be that of the concept referenced from the concept identity. Note that a metadata attribute (as identified by the id attribute) definition  must be unique across the entire metadata structure definition (including target identifier, identifier component, and report structure ids). A metadata attribute may be used in multiple report structures and at different levels, but the content (value and/or child metadata attributes and their cardinality) of the metadata attribute cannot change.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute.#ctor">
            <summary>
            <para>
            MetadataAttributeType describes the structure of a metadata attribute. The metadata attribute takes its semantic, and in some cases it representation, from its concept identity. A metadata attribute may be coded (via the local representation), uncoded (via the text format), or take no value. In addition to this value, the metadata attribute may also specify subordinate metadata attributes. If a metadata attribute only serves the purpose of containing subordinate metadata attributes, then the isPresentational attribute should be used. Otherwise, it is assumed to also take a value. If the metadata attribute does take a value, and a representation is not defined, it will be inherited from the concept it takes its semantic from. The optional id on the metadata attribute uniquely identifies it within the metadata structured definition. If this id is not supplied, its value is assumed to be that of the concept referenced from the concept identity. Note that a metadata attribute (as identified by the id attribute) definition  must be unique across the entire metadata structure definition (including target identifier, identifier component, and report structure ids). A metadata attribute may be used in multiple report structures and at different levels, but the content (value and/or child metadata attributes and their cardinality) of the metadata attribute cannot change.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttributeType)">
            <summary>
            <para>
            MetadataAttributeType describes the structure of a metadata attribute. The metadata attribute takes its semantic, and in some cases it representation, from its concept identity. A metadata attribute may be coded (via the local representation), uncoded (via the text format), or take no value. In addition to this value, the metadata attribute may also specify subordinate metadata attributes. If a metadata attribute only serves the purpose of containing subordinate metadata attributes, then the isPresentational attribute should be used. Otherwise, it is assumed to also take a value. If the metadata attribute does take a value, and a representation is not defined, it will be inherited from the concept it takes its semantic from. The optional id on the metadata attribute uniquely identifies it within the metadata structured definition. If this id is not supplied, its value is assumed to be that of the concept referenced from the concept identity. Note that a metadata attribute (as identified by the id attribute) definition  must be unique across the entire metadata structure definition (including target identifier, identifier component, and report structure ids). A metadata attribute may be used in multiple report structures and at different levels, but the content (value and/or child metadata attributes and their cardinality) of the metadata attribute cannot change.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute.MetadataAttribute1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, ConceptIdentity, LocalRepresentation?, MetadataAttribute*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute.minOccurs">
            <summary>
            <para>
            The minOccurs attribute indicates the minimum number of times this metadata attribute can occur within its parent object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute.maxOccurs">
            <summary>
            <para>
            The maxOccurs attribute indicates the maximum number of times this metadata attribute can occur within its parent object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.MetadataAttribute.isPresentational">
            <summary>
            <para>
            The isPresentational attribute indicates whether the metadata attribute should allow for a value. A value of true, meaning the metadata attribute is presentational means that the attribute only contains child metadata attributes, and does not contain a value. If this attribute is not set to true, and a representation (coded or uncoded) is not defined, then the representation of the metadata attribute will be inherited from the concept from which it takes its identity.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Organisation">
            <summary>
            <para>
            OrganisationType in an abstract type which describes the structure of the details of an organisation. In addition to the basic organisation identification, contact details can be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Organisation.#ctor">
            <summary>
            <para>
            OrganisationType in an abstract type which describes the structure of the details of an organisation. In addition to the basic organisation identification, contact details can be provided.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Organisation.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationType)">
            <summary>
            <para>
            OrganisationType in an abstract type which describes the structure of the details of an organisation. In addition to the basic organisation identification, contact details can be provided.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Organisation.Contact">
            <summary>
            <para>
            Contact describes a contact for the organisation,
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, (Parent)?, Contact*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Agency">
            <summary>
            <para>
            AgencyType defines the structure of an agency description. The contacts defined for the organisation are specific to the agency role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Agency.#ctor">
            <summary>
            <para>
            AgencyType defines the structure of an agency description. The contacts defined for the organisation are specific to the agency role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Agency.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.AgencyType)">
            <summary>
            <para>
            AgencyType defines the structure of an agency description. The contacts defined for the organisation are specific to the agency role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumer">
            <summary>
            <para>
            DataConsumerType defines the structure of a data consumer description. The contacts defined for the organisation are specific to the data consumer role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumer.#ctor">
            <summary>
            <para>
            DataConsumerType defines the structure of a data consumer description. The contacts defined for the organisation are specific to the data consumer role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumer.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataConsumerType)">
            <summary>
            <para>
            DataConsumerType defines the structure of a data consumer description. The contacts defined for the organisation are specific to the data consumer role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProvider">
            <summary>
            <para>
            DataProviderType defines the structure of a data provider description. The contacts defined for the organisation are specific to the data provider role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProvider.#ctor">
            <summary>
            <para>
            DataProviderType defines the structure of a data provider description. The contacts defined for the organisation are specific to the data provider role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProvider.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.DataProviderType)">
            <summary>
            <para>
            DataProviderType defines the structure of a data provider description. The contacts defined for the organisation are specific to the data provider role the organisation is serving.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnit">
            <summary>
            <para>
            OrganisationUnitType defines the structure of an organisation unit description. In addition to general identification and contact information, an organisation unit can specify a relationship with another organisation unit from the same scheme which is its parent organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnit.#ctor">
            <summary>
            <para>
            OrganisationUnitType defines the structure of an organisation unit description. In addition to general identification and contact information, an organisation unit can specify a relationship with another organisation unit from the same scheme which is its parent organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnit.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationUnitType)">
            <summary>
            <para>
            OrganisationUnitType defines the structure of an organisation unit description. In addition to general identification and contact information, an organisation unit can specify a relationship with another organisation unit from the same scheme which is its parent organisation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategory">
            <summary>
            <para>
            ReportingCategoryType describes the structure of a reporting category, which groups structure usages into useful sub-packages. Sub ordinate reporting categories can be nested within the category definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategory.#ctor">
            <summary>
            <para>
            ReportingCategoryType describes the structure of a reporting category, which groups structure usages into useful sub-packages. Sub ordinate reporting categories can be nested within the category definition.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategory.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryType)">
            <summary>
            <para>
            ReportingCategoryType describes the structure of a reporting category, which groups structure usages into useful sub-packages. Sub ordinate reporting categories can be nested within the category definition.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategory.StructuralMetadata">
            <summary>
            <para>
            StructuralMetadata provides a reference for data structure definition and metadata structure definition references which are grouped in the reporting category. It is assumed that all structural metadata objects referenced from a category will be of the same type.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ((ReportingCategory)+)?, (StructuralMetadata* | ProvisioningMetadata*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategory.ProvisioningMetadata">
            <summary>
            <para>
            ProvisioningMetadata provides a reference for dataflow and metadataflow references which are grouped in the reporting category. It is assumed that all provisioning metadata objects referenced from a category will be of the same type.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, Name+, Description*, ((ReportingCategory)+)?, (StructuralMetadata* | ProvisioningMetadata*))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation">
            <summary>
            <para>
            ItemAssociationType is an abstract type which defines the relationship between two items from the source and target item schemes of an item scheme map.
            </para>
            </summary>
            <summary>
                The Item association class
            </summary>
            <seealso cref="T:Xml.Schema.Linq.XTypedElement" />
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation.#ctor">
            <summary>
            <para>
            ItemAssociationType is an abstract type which defines the relationship between two items from the source and target item schemes of an item scheme map.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociationType)">
            <summary>
            <para>
            ItemAssociationType is an abstract type which defines the relationship between two items from the source and target item schemes of an item scheme map.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation.Source">
            <summary>
            <para>
            Source provides a local reference (id only) to an item from the source item scheme in the item scheme map which is being mapped to another item.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation.Target">
            <summary>
            <para>
            Target provides a local reference (id only) to an item from the target item scheme in the item scheme map which is being mapped from another item.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Source, Target)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation.GetTypedSource``1">
            <summary>
                Gets the typed source.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based type.</typeparam>
            <returns>he <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based instance.</returns>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ItemAssociation.GetTypedTarget``1">
            <summary>
                Gets the typed source.
            </summary>
            <typeparam name="T">The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based type.</typeparam>
            <returns>he <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Common.ItemSchemeReferenceBaseType" /> based instance.</returns>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationMap">
            <summary>
            <para>
            OrganisationMapType defines the structure for mapping two organisations. A local reference is provided both the source and target organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationMap.#ctor">
            <summary>
            <para>
            OrganisationMapType defines the structure for mapping two organisations. A local reference is provided both the source and target organisation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.OrganisationMapType)">
            <summary>
            <para>
            OrganisationMapType defines the structure for mapping two organisations. A local reference is provided both the source and target organisation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryMap">
            <summary>
            <para>
            CategoryMapType defines the structure for mapping two categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryMap.#ctor">
            <summary>
            <para>
            CategoryMapType defines the structure for mapping two categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CategoryMapType)">
            <summary>
            <para>
            CategoryMapType defines the structure for mapping two categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeMap">
            <summary>
            <para>
            CodeMapType defines the structure for mapping two codes. A local reference is provided both the source and target code.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeMap.#ctor">
            <summary>
            <para>
            CodeMapType defines the structure for mapping two codes. A local reference is provided both the source and target code.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.CodeMapType)">
            <summary>
            <para>
            CodeMapType defines the structure for mapping two codes. A local reference is provided both the source and target code.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptMap">
            <summary>
            <para>
            ConceptMapType defines the structure for mapping two concepts. A local reference is provided both the source and target concept.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptMap.#ctor">
            <summary>
            <para>
            ConceptMapType defines the structure for mapping two concepts. A local reference is provided both the source and target concept.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ConceptMapType)">
            <summary>
            <para>
            ConceptMapType defines the structure for mapping two concepts. A local reference is provided both the source and target concept.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryMap">
            <summary>
            <para>
            ReportingCategoryMapType defines the structure for mapping two reporting categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryMap.#ctor">
            <summary>
            <para>
            ReportingCategoryMapType defines the structure for mapping two reporting categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryMap.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ReportingCategoryMapType)">
            <summary>
            <para>
            ReportingCategoryMapType defines the structure for mapping two reporting categories. A local reference is provided both the source and target category.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures">
            <summary>
            <para>
            StructuresType describes the structure of the container for all structural metadata components. The structural components may be explicitly detailed, or referenced from an external structure document or registry service. Best practices dictate that, at a minimum, any structural component that is referenced by another structural component be included by reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.#ctor">
            <summary>
            <para>
            StructuresType describes the structure of the container for all structural metadata components. The structural components may be explicitly detailed, or referenced from an external structure document or registry service. Best practices dictate that, at a minimum, any structural component that is referenced by another structural component be included by reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.StructuresType)">
            <summary>
            <para>
            StructuresType describes the structure of the container for all structural metadata components. The structural components may be explicitly detailed, or referenced from an external structure document or registry service. Best practices dictate that, at a minimum, any structural component that is referenced by another structural component be included by reference.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.OrganisationSchemes">
            <summary>
            <para>
            OrganisationSchemes contains a collection of organisation scheme descriptions. The organisation schemes may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Dataflows">
            <summary>
            <para>
            Dataflows contains a collection of data flow descriptions. The data flows may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Metadataflows">
            <summary>
            <para>
            Metadataflows contains a collection of metadata flow descriptions. The metadata flows may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.CategorySchemes">
            <summary>
            <para>
            CategorySchemes contains a collection of category scheme descriptions. The category schemes may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Categorisations">
            <summary>
            <para>
            Categorisations contains a collection of structural object categorisations. This container may contain categorisations for many types of objects. The categorisations may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Codelists">
            <summary>
            <para>
            Codelists contains a collection of code list descriptions. The code lists may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.HierarchicalCodelists">
            <summary>
            <para>
            HierarchicalCodelists contains a collection of hierarchical code list descriptions. The hierarchical code lists may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Concepts">
            <summary>
            <para>
            Concepts contains a collection of concept descriptions. The concepts described may be both stand-alone concepts and concepts contained within schemes. The concepts may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.MetadataStructures">
            <summary>
            <para>
            MetadataStructures contains a collection of metadata structure definition descriptions. The metadata structure definitions may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.DataStructures">
            <summary>
            <para>
            DataStructures contains a collection of data structure definitions. The data structure definitions may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.StructureSets">
            <summary>
            <para>
            StructureSets contains a collection of structure set descriptions. The structure sets may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.ReportingTaxonomies">
            <summary>
            <para>
            ReportingTaxonomies contains a collection of reporting taxonomy descriptions. The reporting taxonomies may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Processes">
            <summary>
            <para>
            Processes contains a collection of process descriptions. The processes may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.Constraints">
            <summary>
            <para>
            Constraints contains a collection of constraint descriptions. This container may contain both attachment and content constraints. The constraints may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.Structures.ProvisionAgreements">
            <summary>
            <para>
            ProvisionAgreements contains a collection of provision agreements. The provision agreements may be detailed in full, or referenced from an external structure document or registry service.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (OrganisationSchemes?, Dataflows?, Metadataflows?, CategorySchemes?, Categorisations?, Codelists?, HierarchicalCodelists?, Concepts?, MetadataStructures?, DataStructures?, StructureSets?, ReportingTaxonomies?, Processes?, Constraints?, ProvisionAgreements?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ToValueTypeTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ToValueTypeType" /> constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ToValueTypeTypeConstants.Description">
            <summary>
                The description.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ToValueTypeTypeConstants.Name">
            <summary>
                The name.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.ToValueTypeTypeConstants.Value">
            <summary>
                The value.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.UsageStatusTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.UsageStatusType" /> constants.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.UsageStatusTypeConstants.Conditional">
            <summary>
                The conditional.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Structure.UsageStatusTypeConstants.Mandatory">
            <summary>
                The mandatory.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusTypeConstants">
            <summary>
                The <see cref="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusType" /> constants. The auto-generated code doesn't provide them.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusTypeConstants.Failure">
            <summary>
                The failure.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusTypeConstants.Success">
            <summary>
                The success.
            </summary>
        </member>
        <member name="F:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusTypeConstants.Warning">
            <summary>
                The warning.
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType">
            <summary>
            <para>
            Registration provides the information needed for data and reference metadata set registration. A data source must be supplied here if not already provided in the provision agreement. The data set or metadata set must be associated with a provision agreement,  a metadata flow, or a dataflow definition. If possible, the provision agreement should be specified. Only in cases where this is not possible should the dataflow or metadata flow be used.
            </para>
            <para>
            Regular expression: (ProvisionAgreement, Datasource)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.#ctor">
            <summary>
            <para>
            Registration provides the information needed for data and reference metadata set registration. A data source must be supplied here if not already provided in the provision agreement. The data set or metadata set must be associated with a provision agreement,  a metadata flow, or a dataflow definition. If possible, the provision agreement should be specified. Only in cases where this is not possible should the dataflow or metadata flow be used.
            </para>
            <para>
            Regular expression: (ProvisionAgreement, Datasource)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreement provides a reference to the provision agreement that the data is being registered against.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ProvisionAgreement, Datasource)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.Datasource">
            <summary>
            <para>
            Datasource identifies the data source(s) where the registered data can be retrieved.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ProvisionAgreement, Datasource)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.id">
            <summary>
            <para>
            The id attribute holds a registry assigned identification for the registration. This must be provided in a response message (unless an error occurred while submitting a new registration), and should be included when updating or deleting a registration.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.validFrom">
            <summary>
            <para>
            The validFrom attribute provides an inclusive start date for providing supplemental validity information about the registration, so that data visibility from the registry can be controlled by the registrant.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.validTo">
            <summary>
            <para>
            The validFrom attribute provides an inclusive end date for providing supplemental validity information about the registration, so that data visibility from the registry can be controlled by the registrant.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.lastUpdated">
            <summary>
            <para>
            The lastUpdated attribute provides a timestamp for the last time the data source was updated.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.indexTimeSeries">
            <summary>
            <para>
            The indexTimeSeries, if true, indicates that the registry must index all time series for the registered data. The default value is false, and the attribute will always be assumed false when the provision agreement references a metadata flow.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.indexDataSet">
            <summary>
            <para>
            The indexDataSet, if true, indicates that the registry must index the range of actual (present) values for each dimension of the data set or identifier component of the metadata set (as indicated in the set's structure definition). The default value is false.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.indexAttributes">
            <summary>
            <para>
            The indexAttributes, if true, indicates that the registry must index the range of actual (present) values for each attribute of the data set or the presence of the metadata attributes of the metadata set (as indicated in the set's structure definition). The default value is false.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationType.indexReportingPeriod">
            <summary>
            <para>
            The indexReportingPeriod, if true, indicates that the registry must index the time period ranges for which data is present for the data source. The default value is false, and the attribute will always be assumed false when the provision agreement references a metadata flow.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataSourceType">
            <summary>
            <para>
            DataSourceType specifies the properties of a data or metadata source. Either a simple data source, a queryable data source, or both must be specified.
            </para>
            <para>
            Regular expression: (SimpleDataSource | QueryableDataSource)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataSourceType.#ctor">
            <summary>
            <para>
            DataSourceType specifies the properties of a data or metadata source. Either a simple data source, a queryable data source, or both must be specified.
            </para>
            <para>
            Regular expression: (SimpleDataSource | QueryableDataSource)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataSourceType.SimpleDataSource">
            <summary>
            <para>
            SimpleDatasource describes a data source that is an SDMX-ML data or metadata message. It requires only the URL of the data.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (SimpleDataSource | QueryableDataSource)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataSourceType.QueryableDataSource">
            <summary>
            <para>
            QueryableDatasource describes a data source that must be able to accept an SDMX-ML Query Message, and respond appropriately.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (SimpleDataSource | QueryableDataSource)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SimpleDataSourceType">
            <summary>
            <para>
            SimpleDataSourceType describes a simple data source. The URL of the data is contained in the content.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SimpleDataSourceType.#ctor">
            <summary>
            <para>
            SimpleDataSourceType describes a simple data source. The URL of the data is contained in the content.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SimpleDataSourceType.TYPE">
            <summary>
            <para>
            TYPE is a fixed attribute that is used to ensure only one simple data source may be provided, when it is referenced in a uniqueness constraint.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryableDataSourceType">
            <summary>
            <para>
            QueryableDataSourceType describes a queryable data source, and add a fixed attribute for ensuring only one queryable source can be provided.
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryableDataSourceType.#ctor">
            <summary>
            <para>
            QueryableDataSourceType describes a queryable data source, and add a fixed attribute for ensuring only one queryable source can be provided.
            </para>
            <para>
            Regular expression: (DataURL, WSDLURL?, WADLURL?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryableDataSourceType.TYPE">
            <summary>
            <para>
            TYPE is a fixed attribute that is used to ensure only one queryable data source may be provided, when it is referenced in a uniqueness constraint.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IDQueryType">
            <summary>
            <para>
            IDQueryType is a simple type that allows for an identifier to be substituted with a wild card character ("%").
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NestedIDQueryType">
            <summary>
            <para>
            NestedIDQueryType is a simple type that allows for a nested identifier to be substituted with a wild card character ("%").
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionQueryType">
            <summary>
            <para>
            VersionQueryType is a simple type that allows for a version number to be substituted with a wild card character ("%") or a late bound character ("*").
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableQueryType">
            <summary>
            <para>
            IdentifiableQueryType describes the structure of a query for an identifiable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableQueryType.#ctor">
            <summary>
            <para>
            IdentifiableQueryType describes the structure of a query for an identifiable object.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableQueryType.id">
            <summary>
            <para>
            The id attribute is used to query for an object based on its identifier. This is either an explicit value, or completely wild cared with the "%" value.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableQueryType">
            <summary>
            <para>
            VersionableQueryType describes the structure of a query for a versionable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableQueryType.#ctor">
            <summary>
            <para>
            VersionableQueryType describes the structure of a query for a versionable object.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableQueryType.version">
            <summary>
            <para>
            The version attribute is used to query for an object based on its version. This can be and explicit value, wild-carded ("%"), or late-bound ("*"). A wild carded version will match any version of the object where as a late-bound version will only match the latest version.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableQueryType">
            <summary>
            <para>
            MaintainableQueryType describes the structure of a query for a maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableQueryType.#ctor">
            <summary>
            <para>
            MaintainableQueryType describes the structure of a query for a maintainable object.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableQueryType.agencyID">
            <summary>
            <para>
            The agencyID attribute is used to query for an object based on its maintenance agency's identifier. This is either an explicit value, or completely wild cared with the "%" value.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusMessageType">
            <summary>
            <para>
            StatusMessageType carries the text of error messages and/or warnings in response to queries or requests.
            </para>
            <para>
            Regular expression: (MessageText*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusMessageType.#ctor">
            <summary>
            <para>
            StatusMessageType carries the text of error messages and/or warnings in response to queries or requests.
            </para>
            <para>
            Regular expression: (MessageText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusMessageType.MessageText">
            <summary>
            <para>
            MessageText contains the text of the error and/or warning message. It can occur multiple times to communicate message for multiple warnings or errors.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MessageText*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusMessageType.status">
            <summary>
            <para>
            The status attribute carries the status of the query or request.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StatusType">
            <summary>
            <para>
            StatusType provides an enumeration of values that detail the status of queries or requests.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitRegistrationsRequestType">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the payload of a request message used to submit addtions, updates, or deletions of data/metadata set registrations.
            </para>
            <para>
            Regular expression: (RegistrationRequest+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitRegistrationsRequestType.#ctor">
            <summary>
            <para>
            SubmitRegistrationsRequestType defines the payload of a request message used to submit addtions, updates, or deletions of data/metadata set registrations.
            </para>
            <para>
            Regular expression: (RegistrationRequest+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitRegistrationsRequestType.RegistrationRequest">
            <summary>
            <para>
            RegistrationRequest provides the details of a requested registration and the action to take on it. A reference to a provision agreement that exists in the registry must be provide along with a simple and/or queryable data source. The id should only be provided when updating or deleting a registration.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (RegistrationRequest+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationRequestType">
            <summary>
            <para>
            RegistrationRequestType describes the structure of a single registration request. It contains the details of a registation and an action field to indicate the action to be taken on the contained registration.
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationRequestType.#ctor">
            <summary>
            <para>
            RegistrationRequestType describes the structure of a single registration request. It contains the details of a registation and an action field to indicate the action to be taken on the contained registration.
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationRequestType.Registration">
            <summary>
            <para>
            Registration contains the details of the data/metadata set registration to be added, updated, or deleted.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationRequestType.action">
            <summary>
            <para>
            The action attribute indicates whether this is an addition, a modification, or a deletion of a registration.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitRegistrationsResponseType">
            <summary>
            <para>
            SubmitRegistrationsResponseType describes the structure of a registration response. For each submitted registration in the request, a registration status is provided. The status elements should be provided in the same order as the submitted registrations, although each status will echo the request to ensure accurate processing of the responses.
            </para>
            <para>
            Regular expression: (RegistrationStatus+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitRegistrationsResponseType.#ctor">
            <summary>
            <para>
            SubmitRegistrationsResponseType describes the structure of a registration response. For each submitted registration in the request, a registration status is provided. The status elements should be provided in the same order as the submitted registrations, although each status will echo the request to ensure accurate processing of the responses.
            </para>
            <para>
            Regular expression: (RegistrationStatus+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitRegistrationsResponseType.RegistrationStatus">
            <summary>
            <para>
            RegistrationStatus provided the status details for the submitted registration. It echoes the original submission and provides status information about the request.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (RegistrationStatus+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationStatusType">
            <summary>
            <para>
            RegistrationStatusType describes the structure of a registration status.
            </para>
            <para>
            Regular expression: (Registration, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationStatusType.#ctor">
            <summary>
            <para>
            RegistrationStatusType describes the structure of a registration status.
            </para>
            <para>
            Regular expression: (Registration, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationStatusType.Registration">
            <summary>
            <para>
            Registration, at the very least echoes the submitted registration. It the request was to create a new registration and it was successful, an id must be supplied.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Registration, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationStatusType.StatusMessage">
            <summary>
            <para>
            StatusMessage provides that status for the registration request, and if necessary, any error or warning information.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Registration, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType">
            <summary>
            <para>
            QueryRegistrationRequestType describes the structure of a registration query request. The type of query (data, reference metadata, or both) must be specified. It is possible to query for registrations for a particular provision agreement, data provider, or structure usage, or to query for all registrations in the registry. In addition the search can be refined by providing constraints in the form of explicit time periods, constraint regions, and key sets. When constraint regions and key sets are provided they will be effectively processed by first matching all data for the included keys and regions (all available data if there are none) and then removing any data matching the excluded keys or regions.
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.#ctor">
            <summary>
            <para>
            QueryRegistrationRequestType describes the structure of a registration query request. The type of query (data, reference metadata, or both) must be specified. It is possible to query for registrations for a particular provision agreement, data provider, or structure usage, or to query for all registrations in the registry. In addition the search can be refined by providing constraints in the form of explicit time periods, constraint regions, and key sets. When constraint regions and key sets are provided they will be effectively processed by first matching all data for the included keys and regions (all available data if there are none) and then removing any data matching the excluded keys or regions.
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.QueryType">
            <summary>
            <para>
            QueryType defines the type of sets (data, metadata, or both) that are being queried for.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.All">
            <summary>
            <para>
            All indicates that all registrations meeting the other criteria of the query should be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreement provides a reference to a provision agreement in the registry, for which all registered sets meeting the other criteria of this query should be returned. The reference is provided as a URN and/or a complete set of reference fields.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.DataProvider">
            <summary>
            <para>
            DataProvider provides a reference to a data provider in the registry, for which all registered sets meeting the other criteria of this query should be returned. The reference is provided as a URN and/or a complete set of reference fields.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.Dataflow">
            <summary>
            <para>
            Dataflow provides a reference to a data flow in the registry, for which all registered sets meeting the other criteria of this query should be returned. The reference is provided as a URN and/or a complete set of reference fields.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.Metadataflow">
            <summary>
            <para>
            Metadataflow provides a reference to a metadata flow in the registry, for which all registered sets meeting the other criteria of this query should be returned. The reference is provided as a URN and/or a complete set of reference fields
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.ReferencePeriod">
            <summary>
            <para>
            ReferencePeriod provides an inclusive start and end date for the data or metadata being sought.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.DataKeySet">
            <summary>
            <para>
            DataKeySet is used to provide a set of included or excluded keys which serves to refine the data being sought.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.MetadataKeySet">
            <summary>
            <para>
            MetadataKeySet is used to provide a set of included or excluded keys which serves to refine the data being sought.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.CubeRegion">
            <summary>
            <para>
            CubeRegion is used to provide sets of include or excluded values for dimensions when querying for data.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.MetadataTargetRegion">
            <summary>
            <para>
            MetadataTargetRegion is used to provide sets of included or excluded values for identifier components when querying for metadata.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (QueryType, (All | ProvisionAgreement | DataProvider | Dataflow | Metadataflow), ReferencePeriod?, (DataKeySet | MetadataKeySet | CubeRegion | MetadataTargetRegion)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationRequestType.returnConstraints">
            <summary>
            <para>
            The returnConstraints attribute determines whether information about the constraints on the data or metadata sets returned should also be sent the results.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationResponseType">
            <summary>
            <para>
            QueryRegistrationResponseType describes the structure of a registration query response. It provides a status for the request, and if successful, the resulting data and/or metadata results.
            </para>
            <para>
            Regular expression: (StatusMessage, QueryResult*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationResponseType.#ctor">
            <summary>
            <para>
            QueryRegistrationResponseType describes the structure of a registration query response. It provides a status for the request, and if successful, the resulting data and/or metadata results.
            </para>
            <para>
            Regular expression: (StatusMessage, QueryResult*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationResponseType.StatusMessage">
            <summary>
            <para>
            StatusMessage provides that status for the registration query request, and if necessary, any error or warning information.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StatusMessage, QueryResult*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryRegistrationResponseType.QueryResult">
            <summary>
            <para>
            QueryResult contains a result for a successful registration query. It can occur multiple times, for each registration the meets the conditions specified in the query.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (StatusMessage, QueryResult*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryResultType">
            <summary>
            <para>
            QueryResultType describes the structure of a query result for a single data source. Either a data result or metadata result is detailed, depending on the data source.
            </para>
            <para>
            Regular expression: ((DataResult | MetadataResult))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryResultType.#ctor">
            <summary>
            <para>
            QueryResultType describes the structure of a query result for a single data source. Either a data result or metadata result is detailed, depending on the data source.
            </para>
            <para>
            Regular expression: ((DataResult | MetadataResult))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryResultType.DataResult">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DataResult | MetadataResult))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryResultType.MetadataResult">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((DataResult | MetadataResult))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryResultType.timeSeriesMatch">
            <summary>
            <para>
            The timeSeriesMatch attribute is true when the result is an exact match with the key found in the registry - that is, when the registered data source provides a matching key. It is set to false when the data source is registered with cube-region constraints, or in any other circumstance when it cannot be established that the sought-for keys have been exactly matched. This is always true when the resulting data source is the source of a metadata set.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ResultType">
            <summary>
            <para>
            ResultType contains the details about a data or metadata source, through the complete registration information. In addition, a reference to the content constraints for the data source may be provided, if the query requested this information.
            </para>
            <para>
            Regular expression: (Registration, ContentConstraint*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ResultType.#ctor">
            <summary>
            <para>
            ResultType contains the details about a data or metadata source, through the complete registration information. In addition, a reference to the content constraints for the data source may be provided, if the query requested this information.
            </para>
            <para>
            Regular expression: (Registration, ContentConstraint*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ResultType.Registration">
            <summary>
            <para>
            Registration provides the details of a matching registration. In addition to the data source and provision agreement information, the id of the registration must also be provided.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Registration, ContentConstraint*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ResultType.ContentConstraint">
            <summary>
            <para>
            ContentConstraint provides a reference to a content constraint in the registry for the resulting data source (or possibly constraints base on the registration provision agreement, data provider, structure usage, or structure). The reference is provided for by a URN and/or a complete set of reference fields.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Registration, ContentConstraint*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QueryTypeType">
            <summary>
            <para>
            QueryType provides an enumeration of values which specify the objects in the result-set for a registry query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType">
            <summary>
            <para>
            SubmitStructureRequestType describes the structure of a structure submission. Structural components are provided either in-line or referenced via a SDMX-ML Structure message external to the registry. A default action and external reference resolution action are all provided for each of the contained components, but can be overridden on a per component basis.
            </para>
            <para>
            Regular expression: ((StructureLocation | Structures), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType.#ctor">
            <summary>
            <para>
            SubmitStructureRequestType describes the structure of a structure submission. Structural components are provided either in-line or referenced via a SDMX-ML Structure message external to the registry. A default action and external reference resolution action are all provided for each of the contained components, but can be overridden on a per component basis.
            </para>
            <para>
            Regular expression: ((StructureLocation | Structures), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType.StructureLocation">
            <summary>
            <para>
            StructureLocation provides the location of a SDMX-ML Structure message, external to the repository that can be retrieved by the repository submission service.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StructureLocation | Structures), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType.Structures">
            <summary>
            <para>
            Structures allows for the inline definition of structural components for submission.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: ((StructureLocation | Structures), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType.SubmittedStructure">
            <summary>
            <para>
            SubmittedStructure contains a reference to one of the structural maintainable artefacts detailed in the external SDMX-ML Structure message or in-line and provides an override for the default action. This should only be used if the action to be performed on the referenced structural object is different than the default action. For example, one may want to append all structural components of a structure message, save one codelist. This codelist could be referenced in a submitted structure element and given an action of Informational.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: ((StructureLocation | Structures), SubmittedStructure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType.action">
            <summary>
            <para>
            The action attribute indicates the default action (append-add, replace-update, delete, or no action-informational) to be taken on all structural components in either the external SDMX-ML Structure message or the in-line components. The default action is Append. The Replace action is not applicable to final structures in the repository, and will produce an error condition, as these can be versioned but not modified. To submit a later version of a structural object, the object should include the incremented version number.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureRequestType.externalDependencies">
            <summary>
            <para>
            The externalDependencies attribute indicates the default resolution of external dependencies. This should be set to true if the repository is expected to use external reference URLs in the structural components to retrieve any externally referenced objects that is used by a non-external object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmittedStructureType">
            <summary>
            <para>
            SubmittedStructureType generally references a submitted structural object. When used in a submit structure request, its purpose is to override the default action or external dependency resolution behavior. If neither of these indicators are set, then it will be ignored. In a submit structure response, it is used to reference a submitted object for the purpose of providing a status for the submission. In this case, the action attribute should be populated in order to echo the requested action.
            </para>
            <para>
            Regular expression: (MaintainableObject)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmittedStructureType.#ctor">
            <summary>
            <para>
            SubmittedStructureType generally references a submitted structural object. When used in a submit structure request, its purpose is to override the default action or external dependency resolution behavior. If neither of these indicators are set, then it will be ignored. In a submit structure response, it is used to reference a submitted object for the purpose of providing a status for the submission. In this case, the action attribute should be populated in order to echo the requested action.
            </para>
            <para>
            Regular expression: (MaintainableObject)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmittedStructureType.MaintainableObject">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MaintainableObject)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmittedStructureType.action">
            <summary>
            <para>
            The action attribute will indicate the action to be taken on the referenced structural object. This should be provided when this structure is used in a submit structure response.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmittedStructureType.externalDependencies">
            <summary>
            <para>
            The externalDependencies attribute should be set to true if the repository is expected to use external reference URLs in the structural components to retrieve objects on which the referenced object has dependencies. (Thus, if a key family referenced here is being submitted to the repository, and the structure message has URLs which point to the locations of the codelists it uses, then this attribute should be set to true). This should not be provided when this structure is used in a submit structure response.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureResponseType">
            <summary>
            <para>
            SubmitStructureResponseType describes the structure of a response to a structure submission. For each submitted structure, a Result will be returned.
            </para>
            <para>
            Regular expression: (SubmissionResult+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureResponseType.#ctor">
            <summary>
            <para>
            SubmitStructureResponseType describes the structure of a response to a structure submission. For each submitted structure, a Result will be returned.
            </para>
            <para>
            Regular expression: (SubmissionResult+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitStructureResponseType.SubmissionResult">
            <summary>
            <para>
            SubmissionResult provides a status for each submitted structural object.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (SubmissionResult+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmissionResultType">
            <summary>
            <para>
            SubmissionResultType provides the status of the structural object submission request. It will identify the object submitted, report back the action requested, and convey the status and any error messages which are relevant to the submission.
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmissionResultType.#ctor">
            <summary>
            <para>
            SubmissionResultType provides the status of the structural object submission request. It will identify the object submitted, report back the action requested, and convey the status and any error messages which are relevant to the submission.
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmissionResultType.SubmittedStructure">
            <summary>
            <para>
            SubmittedStructure provides a reference to the submitted structural object and echoes back the action requested for it.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmissionResultType.StatusMessage">
            <summary>
            <para>
            StatusMessage provides that status for the submission of the structural object, and if necessary, any error or warning information.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SubmittedStructure, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitSubscriptionsRequestType">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the payload of a request message used to submit addtions, updates, or deletions of subscriptions. Subscriptions are submitted to the registry to subscribe to registration and change events for specific registry resources.
            </para>
            <para>
            Regular expression: (SubscriptionRequest+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitSubscriptionsRequestType.#ctor">
            <summary>
            <para>
            SubmitSubscriptionsRequestType defines the payload of a request message used to submit addtions, updates, or deletions of subscriptions. Subscriptions are submitted to the registry to subscribe to registration and change events for specific registry resources.
            </para>
            <para>
            Regular expression: (SubscriptionRequest+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitSubscriptionsRequestType.SubscriptionRequest">
            <summary>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (SubscriptionRequest+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType">
            <summary>
            <para>
            SubscriptionType describes the details of a subscription to a registration or change event for registry resources. When it occurs as the content of a response message, the registry URN must be provide, unless the response is a failure notification for the creation of a new subscription.
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.#ctor">
            <summary>
            <para>
            SubscriptionType describes the details of a subscription to a registration or change event for registry resources. When it occurs as the content of a response message, the registry URN must be provide, unless the response is a failure notification for the creation of a new subscription.
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.Organisation">
            <summary>
            <para>
            Organisation provides a reference to the organisation that owns this subscription. The reference is provided via a URN and/or a complete set of reference fields.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.RegistryURN">
            <summary>
            <para>
            RegistryURN is used to identify the subscription in the case of deletion or modification. This should be provided in all response messages, unless the response it a notification of the failure to create a newly submitted subscription - in which case there will be no registry assigned URN.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.NotificationMailTo">
            <summary>
            <para>
            NotificationMailTo holds an e-mail address (the "mailto:" protocol). Multiple email address can be notified for a single subscription.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.NotificationHTTP">
            <summary>
            <para>
            NotificationHTTP holds an http address to which notifications can be addressed as POSTs. Multiple http address may be notified for a single subscription event.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.SubscriberAssignedID">
            <summary>
            <para>
            SubscriberAssignedID allows the subscriber to specify an identification which will be returned as part of the notification for the subscribed events. This should be used if multiple new requests are made, so that the responses can be accurately correlated to the requests.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.ValidityPeriod">
            <summary>
            <para>
            Validity period sets a start and end date for the subscription.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionType.EventSelector">
            <summary>
            <para>
            EventSelector indicates an event or events for the subscription.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Organisation, RegistryURN?, NotificationMailTo*, NotificationHTTP*, SubscriberAssignedID?, ValidityPeriod, EventSelector)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionRequestType">
            <summary>
            <para>
            SubscriptionRequestType describes the structure of a single subscription request. It contains subscription details and an action field to indicate the action to be taken on the contained subscription. Note that if the action is update or delete, then the registry supplied URN for the subscription must be included.
            </para>
            <para>
            Regular expression: (Subscription)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionRequestType.#ctor">
            <summary>
            <para>
            SubscriptionRequestType describes the structure of a single subscription request. It contains subscription details and an action field to indicate the action to be taken on the contained subscription. Note that if the action is update or delete, then the registry supplied URN for the subscription must be included.
            </para>
            <para>
            Regular expression: (Subscription)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionRequestType.Subscription">
            <summary>
            <para>
            Subscription contains the details of the subscription to be added, updated, or deleted.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Subscription)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionRequestType.action">
            <summary>
            <para>
            The action attribute indicates whether this is an addition, a modification, or a deletion of a subscription.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitSubscriptionsResponseType">
            <summary>
            <para>
            SubmitSubscriptionsResponseType describes the structure of the response to a new subscription submission. A status is provided for each subscription in the request.
            </para>
            <para>
            Regular expression: (SubscriptionStatus+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitSubscriptionsResponseType.#ctor">
            <summary>
            <para>
            SubmitSubscriptionsResponseType describes the structure of the response to a new subscription submission. A status is provided for each subscription in the request.
            </para>
            <para>
            Regular expression: (SubscriptionStatus+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubmitSubscriptionsResponseType.SubscriptionStatus">
            <summary>
            <para>
            SubscriptionStatus contains information which describes the success or failure of a subscription request, providing any error messages in the event of failure. The statuses should occur in the same order as the requests when responding to a message with multiple subscription requests. If a subscriber-assigned identification for the subscription is provided, it will be returned to allow for accurate matching of the responses to the requests. A registry assigned URN will be returned for any successfully created, updated, or deleted subscription.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (SubscriptionStatus+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionStatusType">
            <summary>
            <para>
            SubscriptionStatusType describes the structure a status for a single subscription request.
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionStatusType.#ctor">
            <summary>
            <para>
            SubscriptionStatusType describes the structure a status for a single subscription request.
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionStatusType.SubscriptionURN">
            <summary>
            <para>
            SubscriptionURN contains the registry generated URN for the subscription, and will be returned for any successfully created, updated, or deleted subscription. 
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionStatusType.SubscriberAssignedID">
            <summary>
            <para>
            SubscriberAssignedID is the id assigned by the subscriber to the subscription. If it existed in the subscription request, it will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.SubscriptionStatusType.StatusMessage">
            <summary>
            <para>
            StatusMessage provides that status for the subscription request, and if necessary, any error or warning information.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (SubscriptionURN?, SubscriberAssignedID?, StatusMessage)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionRequestType">
            <summary>
            <para>
            QuerySubscriptionRequestType describes the structure of a query for subscriptions. Subscriptions for a given organisation may be retrieved.
            </para>
            <para>
            Regular expression: (Organisation)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionRequestType.#ctor">
            <summary>
            <para>
            QuerySubscriptionRequestType describes the structure of a query for subscriptions. Subscriptions for a given organisation may be retrieved.
            </para>
            <para>
            Regular expression: (Organisation)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionRequestType.Organisation">
            <summary>
            <para>
            Organisation provides a reference to the data consumer for which the subscription details should be returned.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Organisation)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionResponseType">
            <summary>
            <para>
            QuerySubscriptionResponseType describes the structure of a subscription query response. A status will describe the success or failure of the request (and provide error or warning messages if necessary). If the query was successful, details of all of the organisation's subscriptions will be provided.
            </para>
            <para>
            Regular expression: (StatusMessage, Subscription*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionResponseType.#ctor">
            <summary>
            <para>
            QuerySubscriptionResponseType describes the structure of a subscription query response. A status will describe the success or failure of the request (and provide error or warning messages if necessary). If the query was successful, details of all of the organisation's subscriptions will be provided.
            </para>
            <para>
            Regular expression: (StatusMessage, Subscription*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionResponseType.StatusMessage">
            <summary>
            <para>
            StatusMessage provides that status for the query subscription request, and if necessary, any error or warning information.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StatusMessage, Subscription*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.QuerySubscriptionResponseType.Subscription">
            <summary>
            <para>
            Subscription contains the details of a subscription for the organisation. This may occur multiple times for each subscription.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (StatusMessage, Subscription*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType">
            <summary>
            <para>
            NotifyRegistryEventType describes the structure a registry notification, in response to a subscription to a registry event. At a minimum, the event time, a reference to the change object, a reference to the underlying subscription triggering the notification, and the action that took place on the object are sent. In addition, the full details of the object may be provided at the discretion of the registry. In the event that the details are not sent, it will be possible to query for the details of the changed object using the reference provided.
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.#ctor">
            <summary>
            <para>
            NotifyRegistryEventType describes the structure a registry notification, in response to a subscription to a registry event. At a minimum, the event time, a reference to the change object, a reference to the underlying subscription triggering the notification, and the action that took place on the object are sent. In addition, the full details of the object may be provided at the discretion of the registry. In the event that the details are not sent, it will be possible to query for the details of the changed object using the reference provided.
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.EventTime">
            <summary>
            <para>
            EventTime specifies the time of the triggering event.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.ObjectURN">
            <summary>
            <para>
            ObjectURN provides the URN of the object on which the event occurred, unless the event is related to a registration, in which case the RegistrationID element should be used.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.RegistrationID">
            <summary>
            <para>
            RegistrationID provides the id of the registration that underwent an event.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.SubscriptionURN">
            <summary>
            <para>
            SubscriptionURN provides the registry/repository URN of the subscription that is the cause of this notification being sent.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.EventAction">
            <summary>
            <para>
            EventAction indicates the nature of the event - whether the action was an addition, a modification, or a deletion.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.StructuralEvent">
            <summary>
            <para>
            StructuralEvent is used to provide the details of the structural object that has changed.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotifyRegistryEventType.RegistrationEvent">
            <summary>
            <para>
            RegistrationEvent is used to provide the details or the registration object that has changed.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (EventTime, (ObjectURN | RegistrationID), SubscriptionURN, EventAction, (StructuralEvent | RegistrationEvent)?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotificationURLType">
            <summary>
            <para>
            NotificationURLType describes the structure of an http or email address. The content holds the addresses while an attribute indicates whether or not is expects the contents in a SOAP message.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotificationURLType.#ctor">
            <summary>
            <para>
            NotificationURLType describes the structure of an http or email address. The content holds the addresses while an attribute indicates whether or not is expects the contents in a SOAP message.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.NotificationURLType.isSOAP">
            <summary>
            <para>
            The isSOAP attribute, if true, indicates the provided URL expects the notification to be sent in a SOAP message.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ValidityPeriodType">
            <summary>
            <para>
            ValidityPeriodType specifies inclusive start and end-dates for the subscription period.
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ValidityPeriodType.#ctor">
            <summary>
            <para>
            ValidityPeriodType specifies inclusive start and end-dates for the subscription period.
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ValidityPeriodType.StartDate">
            <summary>
            <para>
            StartDate is an inclusive start date for the subscription.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.ValidityPeriodType.EndDate">
            <summary>
            <para>
            EndDate is an inclusive end date for the subscription.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (StartDate, EndDate)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.EventSelectorType">
            <summary>
            <para>
            EventSelectorType describes the details of the events for a subscription. It allows subscribers to specify registry and repository events for which they wish to receive notifications.
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents | DataRegistrationEvents | MetadataRegistrationEvents)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.EventSelectorType.#ctor">
            <summary>
            <para>
            EventSelectorType describes the details of the events for a subscription. It allows subscribers to specify registry and repository events for which they wish to receive notifications.
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents | DataRegistrationEvents | MetadataRegistrationEvents)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.EventSelectorType.StructuralRepositoryEvents">
            <summary>
            <para>
            StructuralRepositoryEvents details structural events for the subscription.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents | DataRegistrationEvents | MetadataRegistrationEvents)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.EventSelectorType.DataRegistrationEvents">
            <summary>
            <para>
            DataRegistrationEvents details the data registration events for the subscription.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents | DataRegistrationEvents | MetadataRegistrationEvents)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.EventSelectorType.MetadataRegistrationEvents">
            <summary>
            <para>
            MetadataRegistrationEvents details the metadata registration events for the subscription.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (StructuralRepositoryEvents | DataRegistrationEvents | MetadataRegistrationEvents)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType">
            <summary>
            <para>
            StructuralRepositoryEventsType details the structural events for the subscription. At least one maintenance agency must be specified, although it may be given a wildcard value (meaning the subscription is for the structural events of all agencies). This can also be a list of agencies to allow the subscription to subscribe the events of more than one agency. It should be noted that when doing so, all of the subsequent objects are assumed to apply to every agency in the list. The subscription is then refined by detailing the structural objects maintained by the agency for which the subscription should apply. It is possible to explicitly select all object events, all objects of given types, or to individually list out specific objects. Note that for any object, it is also possible to provide an explicit URN to reference a distinct object. In this case, the reference to maintenance agency described above is ignored. Although it is not required, if specific objects are being referenced by explicit URNs, it is good practice to list the agencies.
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.#ctor">
            <summary>
            <para>
            StructuralRepositoryEventsType details the structural events for the subscription. At least one maintenance agency must be specified, although it may be given a wildcard value (meaning the subscription is for the structural events of all agencies). This can also be a list of agencies to allow the subscription to subscribe the events of more than one agency. It should be noted that when doing so, all of the subsequent objects are assumed to apply to every agency in the list. The subscription is then refined by detailing the structural objects maintained by the agency for which the subscription should apply. It is possible to explicitly select all object events, all objects of given types, or to individually list out specific objects. Note that for any object, it is also possible to provide an explicit URN to reference a distinct object. In this case, the reference to maintenance agency described above is ignored. Although it is not required, if specific objects are being referenced by explicit URNs, it is good practice to list the agencies.
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.AgencyID">
            <summary>
            <para>
            AgencyID specifies a maintenance agency for the object or objects indicated in the other fields. This can be either a specific ID, or a single wildcard character ("%"). A wild card character can be used to select all agencies, allowing a subscription to all events for particular object types. This can occur multiple times to list a of group of maintenance agencies, creating event subscriptions for all of the subsequent objects for each agency in the group. Note that if multiple agencies are supplied, then the wildcard character should not be used for any of them.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.AllEvents">
            <summary>
            <para>
            AllEvents creates a subscription to structural events for all structural objects maintained by the agencies referenced.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.AgencyScheme">
            <summary>
            <para>
            AgencyScheme is used to subscribe to changes of agency schemes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.DataConsmerScheme">
            <summary>
            <para>
            DataConsmerScheme is used to subscribe to changes of data consumer schemes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.DataProviderScheme">
            <summary>
            <para>
            DataProviderScheme is used to subscribe to changes of data provider schemes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.OrganisationUnitScheme">
            <summary>
            <para>
            OrganisationUnitScheme is used to subscribe to changes of organisation unit schemes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.Dataflow">
            <summary>
            <para>
            Dataflow is used to subscribe to changes of data flows. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.Metadataflow">
            <summary>
            <para>
            Metadataflow is used to subscribe to changes of metadata flows. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.CategoryScheme">
            <summary>
            <para>
            CategoryScheme is used to subscribe to changes of category schemes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.Categorisation">
            <summary>
            <para>
            Categorisation is used to subscribe to changes of categorizations. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id field can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.Codelist">
            <summary>
            <para>
            Codelist is used to subscribe to changes of code lists. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.HierarchicalCodelist">
            <summary>
            <para>
            HierarchicalCodelist is used to subscribe to changes of hierarchical code lists. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.ConceptScheme">
            <summary>
            <para>
            ConceptScheme is used to subscribe to changes of concept schemes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.MetadataStructureDefinition">
            <summary>
            <para>
            MetadataStructureDefinition is used to subscribe to changes of metadata structure definitions. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.KeyFamily">
            <summary>
            <para>
            KeyFamily is used to subscribe to changes of key families. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.StructureSet">
            <summary>
            <para>
            StructureSet is used to subscribe to changes of structure sets. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.ReportingTaxonomy">
            <summary>
            <para>
            ReportingTaxonomy is used to subscribe to changes of reporting taxonomies. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.Process">
            <summary>
            <para>
            Process is used to subscribe to changes of processes. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint is used to subscribe to changes of attachment constraints. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.ContentConstraint">
            <summary>
            <para>
            ContentConstraint is used to subscribe to changes of content constraints. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreement is used to subscribe to changes of a provision agreement. The maintenance agencies of the object are those identified in the AgencyID collection, effectively making separate version of this query for each agency specified. The agency is ignored if the content of this is a URN, which references an explicit object. Otherwise, either all objects of this type or specific object according to the id and version fields can be selected.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AgencyID+, (AllEvents | (AgencyScheme | DataConsmerScheme | DataProviderScheme | OrganisationUnitScheme | Dataflow | Metadataflow | CategoryScheme | Categorisation | Codelist | HierarchicalCodelist | ConceptScheme | MetadataStructureDefinition | KeyFamily | StructureSet | ReportingTaxonomy | Process | AttachmentConstraint | ContentConstraint | ProvisionAgreement)+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralRepositoryEventsType.TYPE">
            <summary>
            <para>
            TYPE is a fixed attribute that is used to ensure only of each event selector may be provided, when it is referenced in a uniqueness constraint.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableObjectEventType">
            <summary>
            <para>
            IdentifiableObjectEventType describes the structure of a reference to an identifiable object's events. Either all instances of the object matching the inherited criteria, a specific instance, or specific instances of the object may be selected.
            </para>
            <para>
            Regular expression: (All | URN | ID)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableObjectEventType.#ctor">
            <summary>
            <para>
            IdentifiableObjectEventType describes the structure of a reference to an identifiable object's events. Either all instances of the object matching the inherited criteria, a specific instance, or specific instances of the object may be selected.
            </para>
            <para>
            Regular expression: (All | URN | ID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableObjectEventType.All">
            <summary>
            <para>
            All subscribes to the events all instances of the containing object meeting the other criteria specified.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (All | URN | ID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableObjectEventType.URN">
            <summary>
            <para>
            URN subscribes to the events of the specific instance of the object type referenced by this URN. Note that when this field is used, the agency information inherited from the structural repository event container is ignored.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (All | URN | ID)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.IdentifiableObjectEventType.ID">
            <summary>
            <para>
            ID subscribes to the events of the specific instance of the object type where the value provided here matches the id of the object. The default value is the wildcard character("%").
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (All | URN | ID)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableObjectEventType">
            <summary>
            <para>
            VersionableObjectEventType describes the structure of a reference to a versionable object's events. Either all instances of the object matching the inherited criteria, a specific instance, or specific instances of the object may be selected.
            </para>
            <para>
            Regular expression: (All | URN | (ID, Version))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableObjectEventType.#ctor">
            <summary>
            <para>
            VersionableObjectEventType describes the structure of a reference to a versionable object's events. Either all instances of the object matching the inherited criteria, a specific instance, or specific instances of the object may be selected.
            </para>
            <para>
            Regular expression: (All | URN | (ID, Version))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableObjectEventType.All">
            <summary>
            <para>
            All subscribes to the events all instances of the containing object meeting the other criteria specified.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (All | URN | (ID, Version))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableObjectEventType.URN">
            <summary>
            <para>
            URN subscribes to the events of the specific instance of the object type referenced by this URN. Note that when this field is used, the agency information inherited from the structural repository event container is ignored.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (All | URN | (ID, Version))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableObjectEventType.ID">
            <summary>
            <para>
            ID subscribes to the events of the specific instance of the object type where the value provided here matches the id of the object and the value provided in the version field matches the version of the object. The default value is the wildcard character("%").
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (All | URN | (ID, Version))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.VersionableObjectEventType.Version">
            <summary>
            <para>
            Version subscribes to the events of the specific instance of the object type where the value provided in the id field matches the id of the object and the value here matches the version of the object. The default value is the wildcard character("%"). Note that in addition to being wild-carded, this can also be bound to the latest version of the object with the late-bound character("*").
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (All | URN | (ID, Version))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType">
            <summary>
            <para>
            DataRegistrationEventsType details the data registration events for the subscription. It is possible to subscribe to all data registration events in the repository, or specific events for; single registrations, provision agreements, data providers, data flows, key families, and categories that categorize data flows or key families.
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.#ctor">
            <summary>
            <para>
            DataRegistrationEventsType details the data registration events for the subscription. It is possible to subscribe to all data registration events in the repository, or specific events for; single registrations, provision agreements, data providers, data flows, key families, and categories that categorize data flows or key families.
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.AllEvents">
            <summary>
            <para>
            AllEvents subscribes to all data registration events in the repository.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.RegistrationID">
            <summary>
            <para>
            RegistrationID subscribes to all the data registration events for the unique registration referenced.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreementReference subscribes to all data registration events for the explicitly referenced provision agreement.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.DataProvider">
            <summary>
            <para>
            DataProviderReference subscribes to all data registration events for the explicitly referenced data provider.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.DataflowReference">
            <summary>
            <para>
            DataflowReference subscribes to all data registration events for the data flows referenced by this object. This may reference one or more data flows, as the specific references fields allow for a wild-carded value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.KeyFamilyReference">
            <summary>
            <para>
            KeyFamilyReference subscribes to all data registration events for the key families referenced by this object. This may reference one or more key families, as the specific references fields allow for a wild-carded value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.Category">
            <summary>
            <para>
            Category subscribes to all data registration events for any data flows or key families that are categorized by the referenced category.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | DataflowReference | KeyFamilyReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.DataRegistrationEventsType.TYPE">
            <summary>
            <para>
            TYPE is a fixed attribute that is used to ensure only of each event selector may be provided, when it is referenced in a uniqueness constraint.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType">
            <summary>
            <para>
            MetadataRegistrationEventsType details the metadata registration events for the subscription. It is possible to subscribe to all metadata registration events in the repository, or specific events for; single registrations, provision agreements, data providers, metadata flows, metadata structure definitions, and categories that categorize metadata flows or metadata structure definitions.
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.#ctor">
            <summary>
            <para>
            MetadataRegistrationEventsType details the metadata registration events for the subscription. It is possible to subscribe to all metadata registration events in the repository, or specific events for; single registrations, provision agreements, data providers, metadata flows, metadata structure definitions, and categories that categorize metadata flows or metadata structure definitions.
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.AllEvents">
            <summary>
            <para>
            AllEvents subscribes to all metadata registration events in the repository.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.RegistrationID">
            <summary>
            <para>
            RegistrationID subscribes to all the metadata registration events for the unique registration referenced.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreementReference subscribes to all metadata registration events for the explicitly referenced provision agreement.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.DataProvider">
            <summary>
            <para>
            DataProvider subscribes to all metadata registration events for the explicitly referenced data provider.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.MetadataflowReference">
            <summary>
            <para>
            MetadataflowReference subscribes to all metadata registration events for the metadata flows referenced by this object. This may reference one or more metadata flows, as the specific references fields allow for a wild-carded value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.MetadataStructureDefinitionReference">
            <summary>
            <para>
            MetadataStructureDefinitionReference subscribes to all metadata registration events for the metadata structure definitions referenced by this object. This may reference one or more metadata structure definitions, as the specific references fields allow for a wild-carded value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.Category">
            <summary>
            <para>
            Category subscribes to all metadata registration events for any metadata flows or metadata structure definitions that are categorized by the referenced category.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (AllEvents | (RegistrationID | ProvisionAgreement | DataProvider | MetadataflowReference | MetadataStructureDefinitionReference | Category)+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MetadataRegistrationEventsType.TYPE">
            <summary>
            <para>
            TYPE is a fixed attribute that is used to ensure only of each event selector may be provided, when it is referenced in a uniqueness constraint.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableEventType">
            <summary>
            <para>
            MaintainableEventType provides a reference to a maintainable object's event with either the URN of the specific object, or a set of potentially wild-carded reference fields.
            </para>
            <para>
            Regular expression: (URN | @Ref)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableEventType.#ctor">
            <summary>
            <para>
            MaintainableEventType provides a reference to a maintainable object's event with either the URN of the specific object, or a set of potentially wild-carded reference fields.
            </para>
            <para>
            Regular expression: (URN | @Ref)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableEventType.URN">
            <summary>
            <para>
            URN provides an explicit reference to a single object.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (URN | @Ref)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.MaintainableEventType.Ref">
            <summary>
            <para>
            Ref provides a reference to potentially many object through the use of possible wild-carded reference fields.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (URN | @Ref)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralEventType">
            <summary>
            <para>
            StructuralEventType provides the details of a structure event, specifically the object that changed.
            </para>
            <para>
            Regular expression: (Structures)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralEventType.#ctor">
            <summary>
            <para>
            StructuralEventType provides the details of a structure event, specifically the object that changed.
            </para>
            <para>
            Regular expression: (Structures)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.StructuralEventType.Structures">
            <summary>
            <para>
            Structures contains the details of the structural object that has triggered the event. Although this container allows for multiple structural object, it should only contain the one changed object.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (Structures)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationEventType">
            <summary>
            <para>
            This provides the details of a data or metadata registration event for the purposes of notification.
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationEventType.#ctor">
            <summary>
            <para>
            This provides the details of a data or metadata registration event for the purposes of notification.
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Registry.RegistrationEventType.Registration">
            <summary>
            <para>
            Registration provides the changed details of the data or metadata registration.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Registration)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReturnDetailsBaseType">
            <summary>
            <para>
            ReturnDetailsBaseType is an abstract type that forms the basis for any query return details.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReturnDetailsBaseType.#ctor">
            <summary>
            <para>
            ReturnDetailsBaseType is an abstract type that forms the basis for any query return details.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReturnDetailsBaseType.defaultLimit">
            <summary>
            <para>
            The defaultLimit attribute is the suggested maximum response size in kilobytes.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReturnDetailsBaseType.detail">
            <summary>
            <para>
            >The detail attribute is used to indicate how much of the matched object should be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataQueryType">
            <summary>
            <para>
            StructureWhereQueryType is an abstract base type that serves as the basis for any structural metadata query. Concrete instances of this type are implied to be an and-query. A structural object will be returned for any object where all of the conditions are met.
            </para>
            <para>
            Regular expression: (ReturnDetails, StructuralMetadataWhere)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataQueryType.#ctor">
            <summary>
            <para>
            StructureWhereQueryType is an abstract base type that serves as the basis for any structural metadata query. Concrete instances of this type are implied to be an and-query. A structural object will be returned for any object where all of the conditions are met.
            </para>
            <para>
            Regular expression: (ReturnDetails, StructuralMetadataWhere)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataQueryType.ReturnDetails">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ReturnDetails, StructuralMetadataWhere)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataQueryType.StructuralMetadataWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Substitution members: StructuralMetadataWhere, CategorisationWhere, CategorySchemeWhere, CodelistWhere, ConceptSchemeWhere, ConstraintWhere, DataflowWhere, DataStructureWhere, HierarchicalCodelistWhere, MetadataflowWhere, MetadataStructureWhere, OrganisationSchemeWhere, ProcessWhere, ProvisionAgreementWhere, ReportingTaxonomyWhere, StructureSetWhere, StructuresWhere
            </para>
            <para>
            Regular expression: (ReturnDetails, StructuralMetadataWhere)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailsBaseType">
            <summary>
            <para>
            StructureReturnDetailsBaseType is an abstract base type which forms the basis of StructureReturnDetailsType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailsBaseType.#ctor">
            <summary>
            <para>
            StructureReturnDetailsBaseType is an abstract base type which forms the basis of StructureReturnDetailsType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailsType">
            <summary>
            <para>
            StructureReturnDetailsType defines the structure of the return details for any structural metadata query.
            </para>
            <para>
            Regular expression: (References)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailsType.#ctor">
            <summary>
            <para>
            StructureReturnDetailsType defines the structure of the return details for any structural metadata query.
            </para>
            <para>
            Regular expression: (References)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailsType.References">
            <summary>
            <para>
            References is used to communicate how objects that reference or are referenced by the object(s) being queried should be returned.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (References)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailsType.returnMatchedArtefact">
            <summary>
            <para>
            The returnMatchedArtefact attribute indicates whether the object(s) match by the query should be returned. If this is set to false, only the reference objects from the match object(s) will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableReturnDetailsType">
            <summary>
            <para>
            MaintainableReturnDetailsType defines the structure for the return details of a non-item scheme maintainable object. It eliminates the detail options that are specific to searching an item scheme
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableReturnDetailsType.#ctor">
            <summary>
            <para>
            MaintainableReturnDetailsType defines the structure for the return details of a non-item scheme maintainable object. It eliminates the detail options that are specific to searching an item scheme
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType">
            <summary>
            <para>
            ReferencesType defines the structure for indicating which referenced objects should be returned in a structural metadata query. It is possible to return both objects which reference the object(s) matched by the query and objects referenced from the match object(s). The type(s) of reference objects to be returned consists of a choice between None, All, Default, or an explicit list of object types.
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.#ctor">
            <summary>
            <para>
            ReferencesType defines the structure for indicating which referenced objects should be returned in a structural metadata query. It is possible to return both objects which reference the object(s) matched by the query and objects referenced from the match object(s). The type(s) of reference objects to be returned consists of a choice between None, All, Default, or an explicit list of object types.
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.None">
            <summary>
            <para>
            None indicates that no reference objects should be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.All">
            <summary>
            <para>
            All is a convenience to indicate that the sets indicated by the ParentsAndSiblings and Descendants should be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.Parents">
            <summary>
            <para>
            Parents is a convenience to indicate that any object that refers to the matched object should be returned. This is typically used when the query the goal is to find object refer to a set of unknown objects.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.ParentsAndSiblings">
            <summary>
            <para>
            ParentsAndSiblings is a convenience to indicate that any object that refers to the matched object should be returned, along with any other objects referenced by those referring objects.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.Children">
            <summary>
            <para>
            Children is a convenience to indicate that all object referred to by the matched object should be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.Descendants">
            <summary>
            <para>
            Descendants is a convenience to indicate that all object referred to by the matched object should be returned, along with any objects referenced by the referred objects, and so on. This is a deep resolution, where all outgoing references starting at the matched object are resolved.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.SpecificObjects">
            <summary>
            <para>
            SpecificObjects is used to enumerate specific types of object to be returned. Theses objects will either refer to or are referred by the matched object. Only the maintainable objects listed here will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (None | All | Parents | ParentsAndSiblings | Children | Descendants | SpecificObjects)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.processConstraints">
            <summary>
            <para>
            The processConstraints attribute is used to request that the query process any relevant constraints for the match object(s) in order to return only the applicable portion of any referenced codelists. A value of "true" indicates that constraints should be processed.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReferencesType.detail">
            <summary>
            <para>
            The detail attribute indicates the amount of detail that should be returned for reference objects.  A value of "Full" indicates that the full details of all reference objects should be returned. A value of "CompleteStub" indicates that the identification information, name, description, and annotations for the reference object should be returned. A value of "Stub" indicates that just the identification information and name should be returned for the reference objects.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureReturnDetailType">
            <summary>
            <para>
            StructureReturnDetailType contains a set of enumerations that indicate how much detail should be returned for an object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableReturnDetailType">
            <summary>
            <para>
            MaintainableReturnDetailType contains a sub set of The enumerationerations defined in the ReturnDetailType. Enumerations relating specifically to item schemes are not included
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotableWhereType">
            <summary>
            <para>
            AnnotableWhereType is an abstract base type for querying an annotable artefact.
            </para>
            <para>
            Regular expression: (Annotation?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotableWhereType.#ctor">
            <summary>
            <para>
            AnnotableWhereType is an abstract base type for querying an annotable artefact.
            </para>
            <para>
            Regular expression: (Annotation?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotableWhereType.Annotation">
            <summary>
            <para>
            Annotation is a parameter for matching the details of an annotatable object's annotations. It allows for querying based on the details of an annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotationWhereType">
            <summary>
            <para>
            AnnotationWhereType defines the structure for querying the details of an annotation.
            </para>
            <para>
            Regular expression: (Type?, Title?, Text?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotationWhereType.#ctor">
            <summary>
            <para>
            AnnotationWhereType defines the structure for querying the details of an annotation.
            </para>
            <para>
            Regular expression: (Type?, Title?, Text?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotationWhereType.Type">
            <summary>
            <para>
            Type is a parameter for matching the type field of an annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Type?, Title?, Text?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotationWhereType.Title">
            <summary>
            <para>
            Title is a parameter for matching the title field of an annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Type?, Title?, Text?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnnotationWhereType.Text">
            <summary>
            <para>
            Text is a parameter for matching the text field of an annotation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Type?, Title?, Text?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.IdentifiableWhereType">
            <summary>
            <para>
            IdentifiableWhereType is an abstract base type that serves as the basis for any query for an identifiable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.IdentifiableWhereType.#ctor">
            <summary>
            <para>
            IdentifiableWhereType is an abstract base type that serves as the basis for any query for an identifiable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.IdentifiableWhereType.URN">
            <summary>
            <para>
            URN is used to match the urn of any SDMX object.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.IdentifiableWhereType.ID">
            <summary>
            <para>
            ID is used to match the id of the identified object.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NameableWhereType">
            <summary>
            <para>
            NameableWhereType is an abstract base type that serves as the basis for any query for a nameable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NameableWhereType.#ctor">
            <summary>
            <para>
            NameableWhereType is an abstract base type that serves as the basis for any query for a nameable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NameableWhereType.Name">
            <summary>
            <para>
            Name is used to match the name of the identified object. It may occur multiple times for its usage within an or-query or for multi-lingual searches, however if multiple values are supplied in an and-query (explicit or implicit), each name search will have to be found in order to constitute a match. The value here can either be an explicit value (exact match) or a regular expression pattern on which to match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NameableWhereType.Description">
            <summary>
            <para>
            Description is used to match the description of the identified object. It may occur multiple times for its usage within an or-query or for multi-lingual searches, however if multiple values are supplied in an and-query (explicit or implicit), each description search will have to be found in order to constitute a match. The value here can either be an explicit value (exact match) or a regular expression pattern on which to match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.VersionableWhereType">
            <summary>
            <para>
            VersionableQueryType is an abstract base type that serves as the basis for any query for a versionable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.VersionableWhereType.#ctor">
            <summary>
            <para>
            VersionableQueryType is an abstract base type that serves as the basis for any query for a versionable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.VersionableWhereType.Version">
            <summary>
            <para>
            Version is used to match the version of the versioned object. The version can be specified as either an explicit version number, or a late bound query where the latest version of an object will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.VersionableWhereType.VersionTo">
            <summary>
            <para>
            VersionTo is used to specify a range which the start date of the validity period of version should fall within to create a successful match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.VersionableWhereType.VersionFrom">
            <summary>
            <para>
            VersionFrom is used to specify a range which the end date of the validity period of version should fall within to create a successful match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.VersionableWhereType.VersionActive">
            <summary>
            <para>
            VersionActive is used to request object with active or inactive versions, base on the version validity dates. A value of true indicates that only objects where the current date is within the validity period of the version will be matched.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableWhereType">
            <summary>
            <para>
            MaintainableQueryType is an abstract base type that serves as the basis for any query for a maintainable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableWhereType.#ctor">
            <summary>
            <para>
            MaintainableQueryType is an abstract base type that serves as the basis for any query for a maintainable object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableWhereType.AgencyID">
            <summary>
            <para>
            AgencyID is used to match the agency id of the maintained object.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableWhereType.type">
            <summary>
            <para>
            The type attribute optionally defines the type of object being queried. For queries for distinct types of objects, a fixed value should be specified in the derived queries. For queries that serve to query for like types of objects, this should be required.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemSchemeWhereType">
            <summary>
            <para>
            ItemSchemeQueryType is an abstract base type that serves as the basis for any query for an item scheme.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, (ItemWhere)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemSchemeWhereType.#ctor">
            <summary>
            <para>
            ItemSchemeQueryType is an abstract base type that serves as the basis for any query for an item scheme.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, (ItemWhere)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemSchemeWhereType.ItemWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ItemWhere, CategoryWhere, CodeWhere, ConceptWhere, OrganisationWhere, ReportingCategoryWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, (ItemWhere)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhereType">
            <summary>
            <para>
            ItemQueryType is an abstract base type that serves as the basis for a query for an item within an item scheme query. A nested item where is provided to query for items nested within other items. The conditions within an item query are implied to be in an and-query. If an id and a child item where condition are supplied, then both conditions will have to met in order for the item query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, (Parent | (ItemWhere)+)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhereType.#ctor">
            <summary>
            <para>
            ItemQueryType is an abstract base type that serves as the basis for a query for an item within an item scheme query. A nested item where is provided to query for items nested within other items. The conditions within an item query are implied to be in an and-query. If an id and a child item where condition are supplied, then both conditions will have to met in order for the item query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, (Parent | (ItemWhere)+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhereType.Parent">
            <summary>
            <para>
            Parent is used to query for an item where it declares the item referenced here as its parent. This is used for items that are not nested in a hierarchy. If child items are sought for an item that is contained in a nested hierarchy (e.g. a category) on can query directly for the parent category and request that the child items be returned by specifying cascadeMatchedItems in the detail field of the return details.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, (Parent | (ItemWhere)+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhereType.ItemWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ItemWhere, CategoryWhere, CodeWhere, ConceptWhere, OrganisationWhere, ReportingCategoryWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, (Parent | (ItemWhere)+)?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureWhereType">
            <summary>
            <para>
            StructureWhereType is an abstract base type that serves as the basis for a query for a structure object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (ComponentListWhere)*, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureWhereType.#ctor">
            <summary>
            <para>
            StructureWhereType is an abstract base type that serves as the basis for a query for a structure object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (ComponentListWhere)*, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureWhereType.UsedConcept">
            <summary>
            <para>
            UsedConcept is used to query for a structure that uses the referenced concept as the basis of one of its components.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (ComponentListWhere)*, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureWhereType.UsedRepresentation">
            <summary>
            <para>
            UsedRepresentation is used to query for a structure that uses the referenced item scheme for the representation of one of its components.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (ComponentListWhere)*, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureWhereType.ComponentListWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ComponentListWhere, GroupWhere, MetadataTargetWhere, ReportStructureWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (ComponentListWhere)*, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureWhereType.ComponentWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ComponentWhere, GroupDimensionWhere, AttributeWhere, DimensionWhere, TimeDimensionWhere, PrimaryMeasureWhere, MeasureDimensionWhere, TargetObjectWhere, MetadataAttributeWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (ComponentListWhere)*, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhereType">
            <summary>
            <para>
            ComponentListWhereType is an abstract base type that serves as the basis for a query for a component list within a structure query. A list of component where children are provided to query for the list's child components. The conditions within a component list query are implied to be in an and-query. If an id and a child component where condition are supplied, then both conditions will have to met in order for the component list query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhereType.#ctor">
            <summary>
            <para>
            ComponentListWhereType is an abstract base type that serves as the basis for a query for a component list within a structure query. A list of component where children are provided to query for the list's child components. The conditions within a component list query are implied to be in an and-query. If an id and a child component where condition are supplied, then both conditions will have to met in order for the component list query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhereType.ComponentWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ComponentWhere, GroupDimensionWhere, AttributeWhere, DimensionWhere, TimeDimensionWhere, PrimaryMeasureWhere, MeasureDimensionWhere, TargetObjectWhere, MetadataAttributeWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhereType">
            <summary>
            <para>
            ComponentWhereType is an abstract base type that serves as the basis for a query for a component within a component list where or a structure query. A concept identity and a local representation condition are available to seek a component that utilizes a particular concept or representation scheme. The conditions within a component query are implied to be in an and-query. If an id and a concept identity condition are supplied, then both conditions will have to met in order for the component query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, ConceptIdentity?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhereType.#ctor">
            <summary>
            <para>
            ComponentWhereType is an abstract base type that serves as the basis for a query for a component within a component list where or a structure query. A concept identity and a local representation condition are available to seek a component that utilizes a particular concept or representation scheme. The conditions within a component query are implied to be in an and-query. If an id and a concept identity condition are supplied, then both conditions will have to met in order for the component query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, ConceptIdentity?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhereType.ConceptIdentity">
            <summary>
            <para>
            ConceptIdentity is used to query for a structure component based on the concept from which it takes its semantic.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, ConceptIdentity?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhereType.Enumeration">
            <summary>
            <para>
            Enumeration is used to query for a structure component based on the item scheme that is used as The enumeration for its representation. This enumeration may be explicit defined by the component (i.e. its local representation), or inherited from the concept from which the component takes its semantic (i.e. the concept core representation).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, ConceptIdentity?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureUsageWhereType">
            <summary>
            <para>
            StructureUsageWhereType is an abstract base type that serves as the basis for a query for a structure usage object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, Structure?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureUsageWhereType.#ctor">
            <summary>
            <para>
            StructureUsageWhereType is an abstract base type that serves as the basis for a query for a structure usage object.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, Structure?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureUsageWhereType.Structure">
            <summary>
            <para>
            Structure is used to match the structure referenced by a structure usage object. Only structure usages which reference the supplied structure will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, Structure?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType">
            <summary>
            <para>
            ConceptValueType describes the structure of a query for the value of the underlying concept of a component. It provides a reference to a concept in a concept scheme via a URN and/or a complete set of reference fields, as well as a numeric, text, or un-typed value.
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType.#ctor">
            <summary>
            <para>
            ConceptValueType describes the structure of a query for the value of the underlying concept of a component. It provides a reference to a concept in a concept scheme via a URN and/or a complete set of reference fields, as well as a numeric, text, or un-typed value.
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType.Concept">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType.NumericValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType.TextValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType.TimeValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptValueType.Value">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Concept, (NumericValue+ | TextValue+ | TimeValue+ | Value))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeValueType">
            <summary>
            <para>
            CodeValueType is used to query for data or reference metadata where a component which uses the referenced codelist as its representation enumeration has the value provided. Note that this is only applicable when the value is a coded value, which is to say that it does not apply to a codelist which is specified as the representation or an identifiable object target in a metadata target.
            </para>
            <para>
            Regular expression: (Codelist)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeValueType.#ctor">
            <summary>
            <para>
            CodeValueType is used to query for data or reference metadata where a component which uses the referenced codelist as its representation enumeration has the value provided. Note that this is only applicable when the value is a coded value, which is to say that it does not apply to a codelist which is specified as the representation or an identifiable object target in a metadata target.
            </para>
            <para>
            Regular expression: (Codelist)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeValueType.Codelist">
            <summary>
            <para>
            Codelist references the codelist for which the coded value is being sought.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Codelist)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeValueType.value">
            <summary>
            <para>
            The value attribute indicates the coded value that is to be queried for.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.SimpleValueType">
            <summary>
            <para>
            SimpleValueType describes the structure of a simple value query. A value is provided as the content in string format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.SimpleValueType.#ctor">
            <summary>
            <para>
            SimpleValueType describes the structure of a simple value query. A value is provided as the content in string format.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.SimpleValueType.operator">
            <summary>
            <para>
            The operator attribute indicates the operator to apply to the string value query. The options are equal and notEqual.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValueType">
            <summary>
            <para>
            NumericValueType describes the structure of a numeric query. A value is provided as the content in decimal format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValueType.#ctor">
            <summary>
            <para>
            NumericValueType describes the structure of a numeric query. A value is provided as the content in decimal format.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValueType.operator">
            <summary>
            <para>
            The operator attribute indicates the operator to apply to the numeric value query, such as equal to or greater than.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryStringType">
            <summary>
            <para>
            QueryStringType defines the structure of a string query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryStringType.#ctor">
            <summary>
            <para>
            QueryStringType defines the structure of a string query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryStringType.operator">
            <summary>
            <para>
            The operator attribute indicates how the supplied value should be applied to the objects being searched in order to constitute a match. For example, a value of "EqualTo" means the value of the field being search should exactly match the value supplied. See the defining type for further details.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryIDType">
            <summary>
            <para>
            QueryIDType defines the structure of a query for an identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryIDType.#ctor">
            <summary>
            <para>
            QueryIDType defines the structure of a query for an identifier.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryIDType.operator">
            <summary>
            <para>
            The operator attribute indicates how the supplied value should be applied to the objects being searched in order to constitute a match. For example, a value of "EqualTo" means the value of the field being search should exactly match the value supplied. See the defining type for further details.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryNestedIDType">
            <summary>
            <para>
            QueryNestedIDType defines the structure of a query for a nested identifier.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryNestedIDType.#ctor">
            <summary>
            <para>
            QueryNestedIDType defines the structure of a query for a nested identifier.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryNestedIDType.operator">
            <summary>
            <para>
            The operator attribute indicates how the supplied value should be applied to the objects being searched in order to constitute a match. For example, a value of "EqualTo" means the value of the field being search should exactly match the value supplied. See the defining type for further details.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryTextType">
            <summary>
            <para>
            QueryTextType describes the structure of a textual query value. A language must be specified if parallel multi-lingual values are available, otherwise it is ignored.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryTextType.#ctor">
            <summary>
            <para>
            QueryTextType describes the structure of a textual query value. A language must be specified if parallel multi-lingual values are available, otherwise it is ignored.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryTextType.operator">
            <summary>
            <para>
            The operator attribute indicates how the supplied value should be applied to the objects being searched in order to constitute a match. For example, a value of "EqualTo" means the value of the field being search should exactly match the value supplied. See the defining type for further details.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimePeriodValueType">
            <summary>
            <para>
            TimePeriodValueType describes the structure of a time period query. A value is provided as the content in the SDMX time period format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimePeriodValueType.#ctor">
            <summary>
            <para>
            TimePeriodValueType describes the structure of a time period query. A value is provided as the content in the SDMX time period format.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimePeriodValueType.operator">
            <summary>
            <para>
            The operator attribute indicates the operator to apply to the value query, such as equal to or greater than.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimePeriodValueType.reportingYearStartDay">
            <summary>
            <para>
            The reportingYearStartDay attribute allows a reporting year start day to be specified for the reporting period time value. If this time value provided is not a report period, this value can be ignored. If an explicit value is provided, this will effectively turn the time parameter into a distinct time range. For example if the time parameter value is "2010-Q1" and this attribute has a value of "--04-01", the parameter will be treated as "2010-04-01/2010-06-30". If a value of "Any" is provided, then data will be matched regardless of its reporting year start day. For example, a query of 2011-A1 would return all data that belongs to a reporting year of 2011, regardless of the start day of the reporting year. For the puroses of matching data reporting against a Gregorian period against a time parameter value that is a reporting period, a value of "Any" will be treated as a start day of January 1. Therefore, if the time paramter value was 2011-A1, data reported against 2011 would be matched but data reporting against '2011-06/P1Y' would not be matched.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingYearStartDayQueryType">
            <summary>
            <para>
            ReportingYearStartDayQueryType is a simple type for specifying the reporting year start day in a time query parameter. An explicit value or "Any" can be provided.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AnyQueryType">
            <summary>
            <para>
            AnyQueryType is a single enumeration of the value "Any" which is meant to be used in union with other simple types when a query allows for any of the possible values.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationQueryType">
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query. The parameters for the query are contained in the CategorisationWhere element. The References element is used to indicate how objects that are referenced from the matched categorisations should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationQueryType.#ctor">
            <summary>
            <para>
            CategorisationQueryType defines the structure of a categorisation query. The parameters for the query are contained in the CategorisationWhere element. The References element is used to indicate how objects that are referenced from the matched categorisations should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereBaseType">
            <summary>
            <para>
            CategorisationWhereBaseType is an abstract base type which forms the basis for the CategorisationWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereBaseType.#ctor">
            <summary>
            <para>
            CategorisationWhereBaseType is an abstract base type which forms the basis for the CategorisationWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType">
            <summary>
            <para>
            CategorisationWhereType contains a set of parameters for a categorisation query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType.#ctor">
            <summary>
            <para>
            CategorisationWhereType contains a set of parameters for a categorisation query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType.CategoryScheme">
            <summary>
            <para>
            CategoryScheme references a category scheme for which categorisations or sought for any of the scheme's categories. Any categorisation which has a target of a category defined in the scheme will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType.TargetCategory">
            <summary>
            <para>
            TargetCategory references the category that defines the target of the categorisation (the category which an object is categorized against). Only categorisations which refence the category supplied here will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType.ObjectReference">
            <summary>
            <para>
            ObjectReference references the object that is the source of the categorisation (the object which is categorized). Only categorisations which reference the object supplied here will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType.CategorisedObjectType">
            <summary>
            <para>
            CategorisedObjectType is used to specify the type of objects that are categorised by the categorisations being sought. For example, this could be used to find an caategorisation which classifies a code list.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeQueryType">
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query. The parameters for the query are contained in the CategorySchemeWhere element. The References element is used to indicate how objects that reference the matched category scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeQueryType.#ctor">
            <summary>
            <para>
            CategorySchemeQueryType defines the structure of a category scheme query. The parameters for the query are contained in the CategorySchemeWhere element. The References element is used to indicate how objects that reference the matched category scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeWhereType">
            <summary>
            <para>
            CategorySchemeWhereType defines the parameters of a category scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeWhereType.#ctor">
            <summary>
            <para>
            CategorySchemeWhereType defines the parameters of a category scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategoryWhereType">
            <summary>
            <para>
            CategoryQueryWhereType contains a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategoryWhereType.#ctor">
            <summary>
            <para>
            CategoryQueryWhereType contains a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistQueryType">
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query. The parameters for the query are contained in the CodelistWhere element. The References element is used to indicate how objects that reference the matched codelist should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistQueryType.#ctor">
            <summary>
            <para>
            CodelistQueryType defines the structure of a codelist query. The parameters for the query are contained in the CodelistWhere element. The References element is used to indicate how objects that reference the matched codelist should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistWhereType">
            <summary>
            <para>
            CodelistWhereType contains the parameters of a codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistWhereType.#ctor">
            <summary>
            <para>
            CodelistWhereType contains the parameters of a codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeWhereType">
            <summary>
            <para>
            CodeWhereType defines a set of parameters for matching a code. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeWhereType.#ctor">
            <summary>
            <para>
            CodeWhereType defines a set of parameters for matching a code. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeQueryType">
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a category scheme query. The parameters for the query are contained in the ConceptSchemeWhere element. The References element is used to indicate how objects that reference or are referenced from the matched concept scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeQueryType.#ctor">
            <summary>
            <para>
            ConceptSchemeQueryType defines the structure of a category scheme query. The parameters for the query are contained in the ConceptSchemeWhere element. The References element is used to indicate how objects that reference or are referenced from the matched concept scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeWhereType">
            <summary>
            <para>
            ConceptSchemeWhereType contains the parameters of a concept scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeWhereType.#ctor">
            <summary>
            <para>
            ConceptSchemeWhereType contains the parameters of a concept scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhereBaseType">
            <summary>
            <para>
            ConceptWhereBaseType is an abstract base type that forms the basis for the ConceptWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhereBaseType.#ctor">
            <summary>
            <para>
            ConceptWhereBaseType is an abstract base type that forms the basis for the ConceptWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhereType">
            <summary>
            <para>
            ConceptWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base parameters for an item, a concept can be queried based on the item scheme that is used as a core representation.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, (Parent)?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhereType.#ctor">
            <summary>
            <para>
            ConceptWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base parameters for an item, a concept can be queried based on the item scheme that is used as a core representation.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, (Parent)?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhereType.Enumeration">
            <summary>
            <para>
            Enumeration is used to query for a concept based on the codelist that is uses as The enumeration for its core representation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, (Parent)?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintQueryType">
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query. The parameters for the query are contained in the ConstraintWhere element. The References element is used to indicate how objects that are referenced from the matched constraint should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintQueryType.#ctor">
            <summary>
            <para>
            ConstraintQueryType defines the structure of a constraint query. The parameters for the query are contained in the ConstraintWhere element. The References element is used to indicate how objects that are referenced from the matched constraint should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereBaseType">
            <summary>
            <para>
            ConstraintWhereBaseType is an abstract base type which forms the basis for the ConstraintWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereBaseType.#ctor">
            <summary>
            <para>
            ConstraintWhereBaseType is an abstract base type which forms the basis for the ConstraintWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereType">
            <summary>
            <para>
            ConstraintWhereType contains the parameters of a constraint query. All supplied parameters must be matched in order for an object to stratify the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ConstraintAttachmentWhere?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereType.#ctor">
            <summary>
            <para>
            ConstraintWhereType contains the parameters of a constraint query. All supplied parameters must be matched in order for an object to stratify the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ConstraintAttachmentWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereType.ConstraintAttachmentWhere">
            <summary>
            <para>
            ConstraintAttachmentWhere identifies a collection of objects to which a constraint may be attached. This container is an implicit and-query, meaning all of the objects referenced in here must be part of the constraint attachment in order for a constraint to match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ConstraintAttachmentWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereType.allowable">
            <summary>
            <para>
            The allowable attribute indicates whether the returned search should be limited to only allowable constraints. This only applies to content constraint. If this attribute has a value  of true, this indicates that only matching allowable content constraints should be returned. If this is false, than only actual content constraints returned. If no value is provided, all matching content constraints will be returned, regardless of whether they are stating actual or allowable content.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType">
            <summary>
            <para>
            ConstraintAttachmentWhereType describes the structure for querying for a constraint based on the objects it is attached to. A constraint attachment query is implicitly an and-query meaning all of the referenced objects must be part of a constraints attachment in order to return a match. It is treated as a condition within its parent query.
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.#ctor">
            <summary>
            <para>
            ConstraintAttachmentWhereType describes the structure for querying for a constraint based on the objects it is attached to. A constraint attachment query is implicitly an and-query meaning all of the referenced objects must be part of a constraints attachment in order to return a match. It is treated as a condition within its parent query.
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.DataProvider">
            <summary>
            <para>
            DataProviderReference references a data provider to which a constraint is attached. It is referenced via a URN and/or a full set of reference fields. If a constraint is attached to the data provider referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.Dataflow">
            <summary>
            <para>
            DataflowReference references a data flow to which a constraint is attached. It is referenced via a URN and/or a full set of reference fields. If a constraint is attached to the data flow referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.DataStructure">
            <summary>
            <para>
            DataStructureReference references a data structure definition to which a constraint is attached. It is referenced via a URN and/or a full set of reference fields. If a constraint is attached to the data structure definition referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.Metadataflow">
            <summary>
            <para>
            MetadataflowReference references a metadata flow to which a constraint is attached. It is referenced via a URN and/or a full set of reference fields. If a constraint is attached to the metadata flow referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.MetadataStructure">
            <summary>
            <para>
            MetadataStructureReference references a metadata structure definition to which a constraint is attached. It is referenced via a URN and/or a full set of reference fields. If a constraint is attached to the metadata structure definition referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreementReference references a provision agreement to which a constraint is attached. It is referenced via a URN and/or a full set of reference fields. If a constraint is attached to the provision agreement referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.DataSet">
            <summary>
            <para>
            DataSetReference references a data set to which a constraint is attached. If a constraint is attached to the data set referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.MetadataSet">
            <summary>
            <para>
            MetadataSetReference references a reference metadata set to which a constraint is attached. If a constraint is attached to the metadata set referenced, a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintAttachmentWhereType.DataSourceURL">
            <summary>
            <para>
            DataSourceURL references a queryable data source to which a constraint it attached. The data source is referenced by its data URL. If a constraint is attached to the data source described (by matching the data URL), a match will be returned.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (DataProvider | Dataflow | DataStructure | Metadataflow | MetadataStructure | ProvisionAgreement | DataSet | MetadataSet | DataSourceURL)+
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintTypeCodelistType">
            <summary>
            <para>
            ConstraintTypeCodelistType defines a list of types for a constraint for the purpose of querying.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataQueryType">
            <summary>
            <para>
            DataQueryType defines the structure of a query for data. This is generally appliable for any data request, but can be refined depending on the type of data being queried (generic or structured, time series specific or not) to the requirements of the requested format.
            </para>
            <para>
            Regular expression: (ReturnDetails, DataWhere)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataQueryType.#ctor">
            <summary>
            <para>
            DataQueryType defines the structure of a query for data. This is generally appliable for any data request, but can be refined depending on the type of data being queried (generic or structured, time series specific or not) to the requirements of the requested format.
            </para>
            <para>
            Regular expression: (ReturnDetails, DataWhere)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataQueryType.ReturnDetails">
            <summary>
            <para>
            ReturnDetails contains the details of how the returned data should be structured, what type of data (e.g. active or deleted observations), and the limit of the amount of observations to be returned.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ReturnDetails, DataWhere)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataQueryType.DataWhere">
            <summary>
            <para>
            DataWhere contains the details of the data query.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ReturnDetails, DataWhere)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeSeriesDataQueryType">
            <summary>
            <para>
            TimeSeriesDataQueryType defines the structure of a query for data. This specifically applies to requesting time series only structured data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeSeriesDataQueryType.#ctor">
            <summary>
            <para>
            TimeSeriesDataQueryType defines the structure of a query for data. This specifically applies to requesting time series only structured data.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericDataQueryType">
            <summary>
            <para>
            GenericDataQueryType defines the structure of a query for data formatted in the generic format. This structure generally applies to any type of generic data request, but can be refined to request time series only data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericDataQueryType.#ctor">
            <summary>
            <para>
            GenericDataQueryType defines the structure of a query for data formatted in the generic format. This structure generally applies to any type of generic data request, but can be refined to request time series only data.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericTimeSeriesDataQueryType">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a query for time series only data formatted in the generic format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericTimeSeriesDataQueryType.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataQueryType defines the structure of a query for time series only data formatted in the generic format.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsBaseType">
            <summary>
            <para>
            DataReturnDetailsBaseType is an abstract base type which forms the basis of the DataReturnDetailsType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsBaseType.#ctor">
            <summary>
            <para>
            DataReturnDetailsBaseType is an abstract base type which forms the basis of the DataReturnDetailsType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsType">
            <summary>
            <para>
            DataReturnDetailsType specifies the specifics of the how data should be returned, including how it should be structured and how many and what type (e.g. active or deleted) observations should be returned.
            </para>
            <para>
            Regular expression: (FirstNObservations?, LastNObservations?, Structure*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsType.#ctor">
            <summary>
            <para>
            DataReturnDetailsType specifies the specifics of the how data should be returned, including how it should be structured and how many and what type (e.g. active or deleted) observations should be returned.
            </para>
            <para>
            Regular expression: (FirstNObservations?, LastNObservations?, Structure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsType.FirstNObservations">
            <summary>
            <para>
            FirstNObservations specifies that number of observations indicated should be returned, starting from the earliest observation. Note that this can be used in conjunction with the LastNObservations. For example, if both FirstNObservations and LastNObservations had a value of 1, then the first and the last observation would be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (FirstNObservations?, LastNObservations?, Structure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsType.LastNObservations">
            <summary>
            <para>
            LastNObservations specifies that number of observations indicated should be returned, starting from the latest observation and working back. Note that this can be used in conjunction with the FirstNObservations. For example, if both FirstNObservations and LastNObservations had a value of 1, then the first and the last observation would be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (FirstNObservations?, LastNObservations?, Structure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsType.Structure">
            <summary>
            <para>
            Structure defines how the is requested to be oriented in the returned message. For each data structure, dataflow, or provision agreement, a dimension at the observation level can be specified, and in the case that the dimension is a measure and the query is for structured data, the measure can be specified as being explicit. For any matched data in which there is not a structure specification, the query service can orient that data in any manner, although it is recommended that time be used as the observation dimension.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (FirstNObservations?, LastNObservations?, Structure*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailsType.observationAction">
            <summary>
            <para>
            The observationAction attribute specifies the type of observations (added, deleted, udpated, or current) to be returned. In the absence of the Updated parameter, this will return all observations that have ever existed for Added, any observations that have ever been updated for Updated, and any observations that have ever been deleted for Deleted. Note that since observations themselves contain no status in the data messages, it is only possible to query for active observations or deleted observations, but not both. It is possible to subset active observation into recently added and recently updated, however it is only possible to retrieve on or the other. If active observations are returned, there will be no distinction as to whether an individual observation was updated or added during the requested Update parameter.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataReturnDetailType">
            <summary>
            <para>
            DataReturnDetailType contains a set of enumerations that indicate how much detail should be returned for a data set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericDataReturnDetailsType">
            <summary>
            <para>
            GenericDataReturnDetailsType specifies the specifics of the how data should be returned as it pertains to a request for generic data.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericDataReturnDetailsType.#ctor">
            <summary>
            <para>
            GenericDataReturnDetailsType specifies the specifics of the how data should be returned as it pertains to a request for generic data.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericTimeSeriesDataReturnDetailsType">
            <summary>
            <para>
            GenericTimeSeriesDataReturnDetailsType specifies the specifics of the how data should be returned as it pertains to a request for time series only oriented data in the generic format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GenericTimeSeriesDataReturnDetailsType.#ctor">
            <summary>
            <para>
            GenericTimeSeriesDataReturnDetailsType specifies the specifics of the how data should be returned as it pertains to a request for time series only oriented data in the generic format.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeSeriesDataReturnDetailsType">
            <summary>
            <para>
            TimeSeriesDataReturnDetailsType specifies the specifics of the how data should be returned as it pertains to a request for time series only oriented data in the structured format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeSeriesDataReturnDetailsType.#ctor">
            <summary>
            <para>
            TimeSeriesDataReturnDetailsType specifies the specifics of the how data should be returned as it pertains to a request for time series only oriented data in the structured format.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType">
            <summary>
            <para>
            DataParametersType defines the parameters for querying for data. This structure is refined by separate And/Or constructs which make logical restrictions on which parameters apply in such cases.
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.#ctor">
            <summary>
            <para>
            DataParametersType defines the parameters for querying for data. This structure is refined by separate And/Or constructs which make logical restrictions on which parameters apply in such cases.
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.DataSetID">
            <summary>
            <para>
            DataSetID is used to match the id of the data set. Only data from data sets with an identifier satisfying these conditions will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.DataProvider">
            <summary>
            <para>
            DataProvider is used to match the provider of data to the referenced data provider. Only data from data sets provided by the referenced data provider will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.DataStructure">
            <summary>
            <para>
            DataStructure is used to match the underlying structure of the data. Only data from data sets that conform to referenced data structure definition will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.Dataflow">
            <summary>
            <para>
            Dataflow is used to match the flow which data is reported against. Only data from data sets report against referenced dataflow will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreement is used to match the provision agreement which data is reported against. Only data from data sets report against the referenced provision agreement will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.Category">
            <summary>
            <para>
            Category is used to match a data based on the categorization of its underlying structure (data structure definition), or the usage of that structure (data flow). Only data whose underlying structure or structure usage are categorized against the referenced category will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.Updated">
            <summary>
            <para>
            Updated is used to match data based on when it was last updated (including additions and deletions). Only data which satisfies the conditions for the last update parameters supplied here will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.ConceptValue">
            <summary>
            <para>
            ConceptValue is used to match data based on the value of a particular concept. This concept may be used as a dimension, attribute, or measure for the data. So long as the referenced concept has the specified value for a given data point, it will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.RepresentationValue">
            <summary>
            <para>
            RepresentationValue is used to match data based on a representation scheme having a particular value. This representation scheme may be used as the representation of a dimension, attribute, or measure. So long as the value of the concept using the referenced codelist has the value specified, any data point for the concept will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.DimensionValue">
            <summary>
            <para>
            DimensionValue is used to match data based on the value of a dimension. Any data with the dimension with the supplied identifier satisfies the conditions supplied will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.TimeDimensionValue">
            <summary>
            <para>
            TimeDimensionValue is used to match data based on the value of the time dimension. Any data with a time value satisfying the conditions supplied will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.AttributeValue">
            <summary>
            <para>
            AttributeValue is used to match data based on the value of an attribute. Any data with an attribute with the supplied identifier satisfies the conditions supplied will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.PrimaryMeasureValue">
            <summary>
            <para>
            PrimaryMeasureValue is used to match data based on the value of the primary measure. Any data with its value satisfying the conditions supplied will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint references an attachment constraint in order to match data which matches the effective data keys or cube regions defined in the constraint. Data will be returned by first matching data on the keys and cube regions that are marked as included (or all data if none), and then excluding the data that satisfies the conditions of the excluded keys and cube regions.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.TimeFormat">
            <summary>
            <para>
            TimeFormat is used to match data when a frequency dimension is not explicitly defined. Only data reported against the supplied time data type will be returned.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.Or">
            <summary>
            <para>
            Or contains a collection of additional parameters, any one of which can be satisfied to result in a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersType.And">
            <summary>
            <para>
            And contains a collection of additional parameters, all of which must be satisfied to result in a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (DataSetID*, DataProvider*, DataStructure*, Dataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, DimensionValue*, TimeDimensionValue*, AttributeValue*, PrimaryMeasureValue*, AttachmentConstraint*, TimeFormat*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersOrType">
            <summary>
            <para>
            DataParametersOrType refines the base data parameters to define a set of parameters joined by an "or" condition. Only one of the parameters supplied in an instance of this type can be satisfied to result in a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersOrType.#ctor">
            <summary>
            <para>
            DataParametersOrType refines the base data parameters to define a set of parameters joined by an "or" condition. Only one of the parameters supplied in an instance of this type can be satisfied to result in a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersAndType">
            <summary>
            <para>
            DataParametersAndType refines the base data parameters to define a set of parameters joined by an "and" conditions. All of the parameters supplied in an instance of this type must be satisfied to result in a match. As a result of this condition, the maximum occurrence of some parameters has been reduced so as to not allow for impossible conditions to be specified (for example data cannot be matched is it is specified that the data set identifier should be "xyz" and the data identifier should be "abc".
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataParametersAndType.#ctor">
            <summary>
            <para>
            DataParametersAndType refines the base data parameters to define a set of parameters joined by an "and" conditions. All of the parameters supplied in an instance of this type must be satisfied to result in a match. As a result of this condition, the maximum occurrence of some parameters has been reduced so as to not allow for impossible conditions to be specified (for example data cannot be matched is it is specified that the data set identifier should be "xyz" and the data identifier should be "abc".
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType">
            <summary>
            <para>
            DataStructureComponentValueQueryType is an abstract base type that is the basis for query a data structure definition component for a particular value. Multiple values may be supplied, but the component value must match all of the value conditions supplied in order to return a match.
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType.#ctor">
            <summary>
            <para>
            DataStructureComponentValueQueryType is an abstract base type that is the basis for query a data structure definition component for a particular value. Multiple values may be supplied, but the component value must match all of the value conditions supplied in order to return a match.
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType.ID">
            <summary>
            <para>
            ID provides the identifier for component for which the value is sought.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType.NumericValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType.TextValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType.TimeValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentValueQueryType.Value">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID?, (NumericValue+ | TextValue+ | TimeValue+ | Value)?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionValueType">
            <summary>
            <para>
            DimensionValueType is used to query for data where a given dimension has a particular value.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionValueType.#ctor">
            <summary>
            <para>
            DimensionValueType is used to query for data where a given dimension has a particular value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeValueType">
            <summary>
            <para>
            AttributeValueType is used to query for data where a given attribute has a particular value.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeValueType.#ctor">
            <summary>
            <para>
            AttributeValueType is used to query for data where a given attribute has a particular value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureValueType">
            <summary>
            <para>
            PrimaryMeasureValueType is used to query for data where the primary measure (i.e. the observed value) has a particular value.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureValueType.#ctor">
            <summary>
            <para>
            PrimaryMeasureValueType is used to query for data where the primary measure (i.e. the observed value) has a particular value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionValueType">
            <summary>
            <para>
            TimeDimensionValueType is used to query for data where the time dimension has a particular value.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionValueType.#ctor">
            <summary>
            <para>
            TimeDimensionValueType is used to query for data where the time dimension has a particular value.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ObservationActionCodeType">
            <summary>
            <para>
            ObservationActionCodeType enumerates the type of observations to be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowQueryType">
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query. The parameters for the query are contained in the DataflowWhere element. The References element is used to indicate how objects that reference or are referenced from the matched dataflow should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowQueryType.#ctor">
            <summary>
            <para>
            DataflowQueryType defines the structure of a dataflow query. The parameters for the query are contained in the DataflowWhere element. The References element is used to indicate how objects that reference or are referenced from the matched dataflow should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowWhereType">
            <summary>
            <para>
            DataflowWhereType contains the parameters of a dataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowWhereType.#ctor">
            <summary>
            <para>
            DataflowWhereType contains the parameters of a dataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureQueryType">
            <summary>
            <para>
            DataStructureQueryType defines the structure of a data structure definition query. The parameters for the query are contained in the DataStructureWhere element. The References element is used to indicate how objects that reference or are referenced from the matched data structure definition should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureQueryType.#ctor">
            <summary>
            <para>
            DataStructureQueryType defines the structure of a data structure definition query. The parameters for the query are contained in the DataStructureWhere element. The References element is used to indicate how objects that reference or are referenced from the matched data structure definition should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereBaseType">
            <summary>
            <para>
            DataStructureWhereBaseType is an abstract base type that forms the basis of the DataStructureWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereBaseType.#ctor">
            <summary>
            <para>
            DataStructureWhereBaseType is an abstract base type that forms the basis of the DataStructureWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType">
            <summary>
            <para>
            DataStructureWhereType defines the parameters of a data structure definition query. In addition to querying based on the identification, it is also possible to search for data structure definitions based on information about its components.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType.#ctor">
            <summary>
            <para>
            DataStructureWhereType defines the parameters of a data structure definition query. In addition to querying based on the identification, it is also possible to search for data structure definitions based on information about its components.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType.AttributeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType.DimensionWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType.MeasureDimensionWhere">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType.TimeDimensionWhere">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType.PrimaryMeasureWhere">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhereBaseType">
            <summary>
            <para>
            GroupWhereBaseType is an abstract base type that forms the basis for the GroupWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhereBaseType.#ctor">
            <summary>
            <para>
            GroupWhereBaseType is an abstract base type that forms the basis for the GroupWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhereType">
            <summary>
            <para>
            GroupWhereType defines the parameters querying for a data structure definition based a group meeting the conditions detailed. Parameters include identification, dimensions used in the group, and the group's referenced attachment constraint. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, (GroupDimensionWhere)*, AttachmentConstraint?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhereType.#ctor">
            <summary>
            <para>
            GroupWhereType defines the parameters querying for a data structure definition based a group meeting the conditions detailed. Parameters include identification, dimensions used in the group, and the group's referenced attachment constraint. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, (GroupDimensionWhere)*, AttachmentConstraint?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhereType.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint queries for a group where the referenced attachment constraint defines the contents of the group.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, ID?, (GroupDimensionWhere)*, AttachmentConstraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentWhereType">
            <summary>
            <para>
            DataStructureComponentWhereType defines the basic information for querying for a data structure definition component. The component can be queried based on its identification, the concept from which it takes its semantic, and the code list it uses as its representation,. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureComponentWhereType.#ctor">
            <summary>
            <para>
            DataStructureComponentWhereType defines the basic information for querying for a data structure definition component. The component can be queried based on its identification, the concept from which it takes its semantic, and the code list it uses as its representation,. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhereType">
            <summary>
            <para>
            AttributeWhereType describes the structure of an attribute query. An attribute can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhereType.#ctor">
            <summary>
            <para>
            AttributeWhereType describes the structure of an attribute query. An attribute can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhereType.Role">
            <summary>
            <para>
            Role is used to specify the role of the attribute.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhereType">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhereType.#ctor">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhereType.Role">
            <summary>
            <para>
            Role is used to specify the role of the dimension.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionWhereType">
            <summary>
            <para>
            TimeDimensionWhereType describes the structure of a time dimension query. The time dimension can be queried based on the concept from which it takes its semantic. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionWhereType.#ctor">
            <summary>
            <para>
            TimeDimensionWhereType describes the structure of a time dimension query. The time dimension can be queried based on the concept from which it takes its semantic. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhereBaseType">
            <summary>
            <para>
            MeasureDimensionWhereBaseType is an abstract base type which forms the basis for a measure dimension query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhereBaseType.#ctor">
            <summary>
            <para>
            MeasureDimensionWhereBaseType is an abstract base type which forms the basis for a measure dimension query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhereType">
            <summary>
            <para>
            MeasureDimensionWhereType describes the structure of a measure dimension query. A measure dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the concept scheme which defines its measure concepts. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhereType.#ctor">
            <summary>
            <para>
            MeasureDimensionWhereType describes the structure of a measure dimension query. A measure dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the concept scheme which defines its measure concepts. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhereType.Role">
            <summary>
            <para>
            Role is used to specify the role of the dimension.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureWhereType">
            <summary>
            <para>
            MeasureWhereType describes the structure of a measure query. The primary measure can be queried based on the concept from which it takes its semantic, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureWhereType.#ctor">
            <summary>
            <para>
            MeasureWhereType describes the structure of a measure query. The primary measure can be queried based on the concept from which it takes its semantic, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistQueryType">
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query. The parameters for the query are contained in the HierarchicalCodelistWhere element. The References element is used to indicate how objects that are referenced from the matched hierarchical codelist should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistQueryType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistQueryType defines the structure of a hierarchical codelist query. The parameters for the query are contained in the HierarchicalCodelistWhere element. The References element is used to indicate how objects that are referenced from the matched hierarchical codelist should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhereBaseType">
            <summary>
            <para>
            HierarchicalCodelistWhereBaseType is an abstract base type which forms the basis for the HierarchicalCodelistWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhereBaseType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistWhereBaseType is an abstract base type which forms the basis for the HierarchicalCodelistWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhereType">
            <summary>
            <para>
            HierarchicalCodelistWhereType contains the parameters of a hierarchical codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, IncludedCodelist*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhereType.#ctor">
            <summary>
            <para>
            HierarchicalCodelistWhereType contains the parameters of a hierarchical codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, IncludedCodelist*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhereType.IncludedCodelist">
            <summary>
            <para>
            IncludedCodelist is used to reference a codelist which the hierarchical codelist to be matched references.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, IncludedCodelist*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataQueryType">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query. Reference metadata is queried as individual reports. The result of this query will be a collection of metadata sets, with only the relevant metadata reports contained within them. If no report level parameters are specified, then the query will result in entire metadata sets being returned.
            </para>
            <para>
            Regular expression: (ReturnDetails, MetadataParameters)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataQueryType.#ctor">
            <summary>
            <para>
            MetadataQueryType defines the structure of a reference metadata query. Reference metadata is queried as individual reports. The result of this query will be a collection of metadata sets, with only the relevant metadata reports contained within them. If no report level parameters are specified, then the query will result in entire metadata sets being returned.
            </para>
            <para>
            Regular expression: (ReturnDetails, MetadataParameters)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataQueryType.ReturnDetails">
            <summary>
            <para>
            ReturnDetails specifies the details of how the reference metadata should be returned.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ReturnDetails, MetadataParameters)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataQueryType.MetadataParameters">
            <summary>
            <para>
            MetadataParameters contains the parameters that are to be matched in order to determine which metadata reports are to be returned as the result of the query.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ReturnDetails, MetadataParameters)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataReturnDetailsType">
            <summary>
            <para>
            MetadataReturnDetailsType is a structure for detailing how reference metadata should be returned. Only a default size limit can be specified.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataReturnDetailsType.#ctor">
            <summary>
            <para>
            MetadataReturnDetailsType is a structure for detailing how reference metadata should be returned. Only a default size limit can be specified.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType">
            <summary>
            <para>
            MetadataParametersType defines the parameters for querying for reference metadata. This structure is refined by separate And/Or constructs which make logical restrictions on which parameters apply in such cases.
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.#ctor">
            <summary>
            <para>
            MetadataParametersType defines the parameters for querying for reference metadata. This structure is refined by separate And/Or constructs which make logical restrictions on which parameters apply in such cases.
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.MetadataSetID">
            <summary>
            <para>
            MetadataSetID is used to match the id of the metadata set. Only metadata reports from data sets with an identifier satisfying these conditions will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.DataProvider">
            <summary>
            <para>
            DataProviderReference is used to match the provider of reference metadata to the referenced data provider. Only metadata reports from metadata sets provided by the referenced data provider will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.MetadataStructure">
            <summary>
            <para>
            MetadataStructureReference is used to match the underlying structure of the data. Only metadata reports from metadata sets that conform to referenced metadata structure definition will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.Metadataflow">
            <summary>
            <para>
            MetadataflowReference is used to match the flow which reference metadata is reported against. Only metadata reports from metadata sets report against referenced metadata flow will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.ProvisionAgreement">
            <summary>
            <para>
            ProvisionAgreement is used to match the provision agreement which metadata is reported against. Only metadata from metadata sets report against the referenced provision agreement will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.Category">
            <summary>
            <para>
            CategoryReference is used to match a reference metadata based on the categorization of its underlying structure (metadata structure definition), or the usage of that structure (metadata flow). Only metadata reports whose underlying structure or structure usage are categorized against the referenced category will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.Updated">
            <summary>
            <para>
            Updated is used to match reference metadata based on when it was last updated. Only metadata reports which satisfy the conditions for the last update parameters supplied here will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.ConceptValue">
            <summary>
            <para>
            ConceptValue is used to match reference metadata based on the value of a particular concept which defines a metadata attribute. So long as the referenced concept has the specified value for a metadata attribute anywhere within the report structure, the metadata report which contains that attribute will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.RepresentationValue">
            <summary>
            <para>
            RepresentationValue is used to match reference metadata based on a codelist having a particular value. This codelist only applies in the context of the representation of a metadata attribute. So long as the value of any metadata attribute within the report structure which uses the referenced codelist has the value specified, any metadata report containing the attribute will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.MetadataTargetValue">
            <summary>
            <para>
            MetadataTargetValue is used to match reference metadata based on the target object values of a particular metadata target. If not report structure is specified in the query, this will result in a search across all metadata reports which may use this metadata target. If a value is not given for a target object which is part of this metadata target, it is assumed that all values are allowed for that target object. Thus, if no target object values are given in the entire metadata target, the query will simply match ant report where the reference metadata target is used. All target object value conditions must be met to constitute a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.ReportStructureValue">
            <summary>
            <para>
            ReportStructureValue is used to match particular reference metadata reports. Only metadata reports based on the referenced report structure will be matched. It is also possible to detail the values of the metadata attributes contained within the reference report. In this case, only metadata reports based on the referenced report structure which have the metadata attribute values specified will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint references an attachment constraint in order to match reference metadata which matches the effective metadata keys or metadata target regions defined in the constraint. Metadata will be returned by first matching metadata on the keys and metadata target regions that are marked as included (or all metadata if none), and then excluding the metadata that satisfies the conditions of the excluded keys and metadata target regions.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.AttachedObject">
            <summary>
            <para>
            AttachedObject is used to match reference metadata based on an object which it is attached to, regardless of the report structure or metadata target in which the object is referenced. Any metadata reports attached to the referenced objects will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.AttachedDataKey">
            <summary>
            <para>
            AttachedDataKey is used to match reference metadata based on a data key it is attached to, regardless of the report structure or metadata target in which the data key is referenced. Any metadata reports attached to the supplied data key will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.AttachedDataSet">
            <summary>
            <para>
            AttachedDataSet is used to query for reference metadata based on a data set it is attached to, regardless of the report structure or metadata target in which the data set is referenced. Any metadata reports attached to the supplied metadata key will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.AttachedReportingPeriod">
            <summary>
            <para>
            AttachedReportingPeriod is used to query for reference metadata based on the reporting period to which it is attached, regardless of the report structure or metadata target in which the reference period is referenced. Any metadata reports attached to a reporting period which falls within the range specified will be matched.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.Or">
            <summary>
            <para>
            Or contains a collection of additional parameters, any one of which can be satisfied to result in a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersType.And">
            <summary>
            <para>
            And contains a collection of additional parameters, all of which must be satisfied to result in a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (MetadataSetID*, DataProvider*, MetadataStructure*, Metadataflow*, ProvisionAgreement*, Category*, Updated*, ConceptValue*, RepresentationValue*, MetadataTargetValue*, ReportStructureValue*, AttachmentConstraint*, AttachedObject*, AttachedDataKey*, AttachedDataSet*, AttachedReportingPeriod*, Or*, And*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersOrType">
            <summary>
            <para>
            MetadataParametersOrType refines the base data parameters to define a set of parameters joined by an "or" condition. Only one of the parameters supplied in an instance of this type can be satisfied to result in a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersOrType.#ctor">
            <summary>
            <para>
            MetadataParametersOrType refines the base data parameters to define a set of parameters joined by an "or" condition. Only one of the parameters supplied in an instance of this type can be satisfied to result in a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersAndType">
            <summary>
            <para>
            MetadataParametersAndType refines the base data parameters to define a set of parameters joined by an "and" conditions. All of the parameters supplied in an instance of this type must be satisfied to result in a match. As a result of this condition, the maximum occurrence of some parameters has been reduced so as to not allow for impossible conditions to be specified (for example data cannot be matched is it is specified that the data set identifier should be "xyz" and the data identifier should be "abc".
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataParametersAndType.#ctor">
            <summary>
            <para>
            MetadataParametersAndType refines the base data parameters to define a set of parameters joined by an "and" conditions. All of the parameters supplied in an instance of this type must be satisfied to result in a match. As a result of this condition, the maximum occurrence of some parameters has been reduced so as to not allow for impossible conditions to be specified (for example data cannot be matched is it is specified that the data set identifier should be "xyz" and the data identifier should be "abc".
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetValueType">
            <summary>
            <para>
            MetadataTargetValueType describes the structure that is used to match reference metadata where a given metadata target's target object have particular values. If a value is not given for a target object which is part of the metadata target, it is assumed that all values are allowed for that target object. Thus, if no target object values are given in the entire metadata target, the query will simply match ant report where the reference metadata target is used. All target object value conditions must be met to constitute a match.
            </para>
            <para>
            Regular expression: (ID, TargetObjectValue*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetValueType.#ctor">
            <summary>
            <para>
            MetadataTargetValueType describes the structure that is used to match reference metadata where a given metadata target's target object have particular values. If a value is not given for a target object which is part of the metadata target, it is assumed that all values are allowed for that target object. Thus, if no target object values are given in the entire metadata target, the query will simply match ant report where the reference metadata target is used. All target object value conditions must be met to constitute a match.
            </para>
            <para>
            Regular expression: (ID, TargetObjectValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetValueType.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, TargetObjectValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetValueType.TargetObjectValue">
            <summary>
            <para>
            TargetObjectValue is used to match reference metadata where a given target object in a metadata target references a particular object or time period.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, TargetObjectValue*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType">
            <summary>
            <para>
            IdentifierComponentValueType describes the structure that is used to match reference metadata where a given identifier component has a particular value.
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType.#ctor">
            <summary>
            <para>
            IdentifierComponentValueType describes the structure that is used to match reference metadata where a given identifier component has a particular value.
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType.ID">
            <summary>
            <para>
            ID identifies the metadata target object.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType.DataSet">
            <summary>
            <para>
            DataSet provides a reference to a data set which the target object should reference to result in a match.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType.DataKey">
            <summary>
            <para>
            DataKey provides a data key (set of dimension values) which the target object should reference to result in a match.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType.Object">
            <summary>
            <para>
            Object provides a reference to any SDMX identifiable object which the target object should reference to result in a match.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectValueType.TimeValue">
            <summary>
            <para>
            TimeValue is used to provide a time value or range for matching a reporting period which the target object should reference to result in a match.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (DataSet | DataKey | @Object | TimeValue+))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureValueType">
            <summary>
            <para>
            ReportStructureValueType describes the structure that is used to match reference metadata where the metadata attributes of a report structure have particular values. All metadata attribute value conditions must be met to constitute a match.
            </para>
            <para>
            Regular expression: (ID, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureValueType.#ctor">
            <summary>
            <para>
            ReportStructureValueType describes the structure that is used to match reference metadata where the metadata attributes of a report structure have particular values. All metadata attribute value conditions must be met to constitute a match.
            </para>
            <para>
            Regular expression: (ID, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureValueType.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureValueType.MetadataAttributeValue">
            <summary>
            <para>
            MetadataAttributeValue is used to match reference metadata where a metadata attribute has a particular value within the referenced report structure.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType">
            <summary>
            <para>
            MetadataAttributeValueType describes the structure that is used to match reference metadata where a metadata attribute has a particular value. Metadata attribute value queries can be nested for querying nested metadata attributes. If no value is provided, then simply the presence of the metadata attribute within the given context will result in a match. All nested metadata attribute value conditions must be met to constitute a match.
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.#ctor">
            <summary>
            <para>
            MetadataAttributeValueType describes the structure that is used to match reference metadata where a metadata attribute has a particular value. Metadata attribute value queries can be nested for querying nested metadata attributes. If no value is provided, then simply the presence of the metadata attribute within the given context will result in a match. All nested metadata attribute value conditions must be met to constitute a match.
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.ID">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.Value">
            <summary>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.TextValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.NumericValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.TimeValue">
            <summary>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeValueType.MetadataAttributeValue">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (ID, (Value | TextValue+ | NumericValue+ | TimeValue+)?, MetadataAttributeValue*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowQueryType">
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadataflow query. The parameters for the query are contained in the MetadataflowWhere element. The References element is used to indicate how objects that reference or are referenced from the matched metadataflow should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowQueryType.#ctor">
            <summary>
            <para>
            MetadataflowQueryType defines the structure of a metadataflow query. The parameters for the query are contained in the MetadataflowWhere element. The References element is used to indicate how objects that reference or are referenced from the matched metadataflow should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowWhereType">
            <summary>
            <para>
            MetadataflowWhereType contains the parameters of a metadataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowWhereType.#ctor">
            <summary>
            <para>
            MetadataflowWhereType contains the parameters of a metadataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureQueryType">
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure definition query. The parameters for the query are contained in the MetadataStructureDefinitionWhere element. The References element is used to indicate how objects that reference or are referenced from the matched metadata structure definition should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureQueryType.#ctor">
            <summary>
            <para>
            MetadataStructureQueryType defines the structure of a metadata structure definition query. The parameters for the query are contained in the MetadataStructureDefinitionWhere element. The References element is used to indicate how objects that reference or are referenced from the matched metadata structure definition should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereBaseType">
            <summary>
            <para>
            MetadataStructureWhereBaseType is an abstract base type the forms the basis for the MetadataStructureWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereBaseType.#ctor">
            <summary>
            <para>
            MetadataStructureWhereBaseType is an abstract base type the forms the basis for the MetadataStructureWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType">
            <summary>
            <para>
            MetadataStructureWhereType defines the parameters of a metadata structure definition query. In addition to querying based on the identification, it is also possible to search for metadata structure definitions based on information about its components.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType.#ctor">
            <summary>
            <para>
            MetadataStructureWhereType defines the parameters of a metadata structure definition query. In addition to querying based on the identification, it is also possible to search for metadata structure definitions based on information about its components.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType.MetadataTargetWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType.TargetObjectWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType.ReportStructureWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType.MetadataAttributeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetWhereType">
            <summary>
            <para>
            MetadataTargetWhereType describes the structure that is used to query for metadata structure definitions containing a metadata target meeting the conditions detailed. Conditions include the identification and the details of the target objects which make up the metadata target.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetWhereType.#ctor">
            <summary>
            <para>
            MetadataTargetWhereType describes the structure that is used to query for metadata structure definitions containing a metadata target meeting the conditions detailed. Conditions include the identification and the details of the target objects which make up the metadata target.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereBaseType">
            <summary>
            <para>
            TargetObjectWhereBaseType is an abstract base type that forms the basis for the TargetObjectWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereBaseType.#ctor">
            <summary>
            <para>
            TargetObjectWhereBaseType is an abstract base type that forms the basis for the TargetObjectWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereType">
            <summary>
            <para>
            TargetObjectWhereType describes the structure of a target object query. A target object can be queried based on its identification, its type (i.e. data set target, key descriptor values target, report period target, or identifiable object target), and in the case of an identifiable object target, an item scheme which enumerates the possible values and/or the class of the target object reference.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereType.#ctor">
            <summary>
            <para>
            TargetObjectWhereType describes the structure of a target object query. A target object can be queried based on its identification, its type (i.e. data set target, key descriptor values target, report period target, or identifiable object target), and in the case of an identifiable object target, an item scheme which enumerates the possible values and/or the class of the target object reference.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereType.type">
            <summary>
            <para>
            The type attribute is used to query for a target object of a given type (i.e. data set target, key descriptor values target, report period target, or identifiable object target)
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereType.targetClass">
            <summary>
            <para>
            The targetClass attribute is used to query for an identifiable object target based on the class its target object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureWhereType">
            <summary>
            <para>
            ReportStructureWhereType defines the parameters for matching based on the details of a report structure. This is used to query for metadata structure definitions where a given report structure meets the conditions specified. A report structure can be queried based on identification and details about its metadata attributes. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureWhereType.#ctor">
            <summary>
            <para>
            ReportStructureWhereType defines the parameters for matching based on the details of a report structure. This is used to query for metadata structure definitions where a given report structure meets the conditions specified. A report structure can be queried based on identification and details about its metadata attributes. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhereBaseType">
            <summary>
            <para>
            MetadataAttributeWhereBaseType is an abstract base type that forms the basis for the MetadataAttributeWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhereBaseType.#ctor">
            <summary>
            <para>
            MetadataAttributeWhereBaseType is an abstract base type that forms the basis for the MetadataAttributeWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhereType">
            <summary>
            <para>
            MetadataAttributeWhereType describes the parameters for a metadata attribute. A metadata attribute can be queried based on its identification, the concept from which it takes its semantic, and an item scheme it uses as its representation. Nested metadata attributes allow for the querying of metadata attributes explicitly at nested level, although a top level metadata attribute query will be processed by querying metadata attributes at any level. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Enumeration?, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhereType.#ctor">
            <summary>
            <para>
            MetadataAttributeWhereType describes the parameters for a metadata attribute. A metadata attribute can be queried based on its identification, the concept from which it takes its semantic, and an item scheme it uses as its representation. Nested metadata attributes allow for the querying of metadata attributes explicitly at nested level, although a top level metadata attribute query will be processed by querying metadata attributes at any level. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Enumeration?, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhereType.MetadataAttributeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Enumeration?, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeQueryType">
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query. The parameters for the query are contained in the OrganisationSchemeWhere element. The References element is used to indicate how objects that reference the matched organisation scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeQueryType.#ctor">
            <summary>
            <para>
            OrganisationSchemeQueryType defines the structure of an organisation scheme query. The parameters for the query are contained in the OrganisationSchemeWhere element. The References element is used to indicate how objects that reference the matched organisation scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeWhereType">
            <summary>
            <para>
            OrganisationSchemeWhereType contains the parameters of an organisation scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeWhereType.#ctor">
            <summary>
            <para>
            OrganisationSchemeWhereType contains the parameters of an organisation scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationWhereType">
            <summary>
            <para>
            OrganisationWhereType defines a set of parameters for matching an organisation. In addition to the base parameters for any item, there is an additional parameter for matching an organisation based on the roles it serves. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationWhereType.#ctor">
            <summary>
            <para>
            OrganisationWhereType defines a set of parameters for matching an organisation. In addition to the base parameters for any item, there is an additional parameter for matching an organisation based on the roles it serves. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeTypeCodeType">
            <summary>
            <para>
            OrganisationSchemeTypeCodeType enumerates the possible types of organisation schemes that can be queried for.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessQueryType">
            <summary>
            <para>
            ProcessQueryType defines the structure of a process query. The parameters for the query are contained in the ProcessWhere element. The References element is used to indicate how objects that are referenced from the matched process scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessQueryType.#ctor">
            <summary>
            <para>
            ProcessQueryType defines the structure of a process query. The parameters for the query are contained in the ProcessWhere element. The References element is used to indicate how objects that are referenced from the matched process scheme should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhereBaseType">
            <summary>
            <para>
            ProcessWhereBaseType is an abstract base type which forms the basis for the ProcessWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhereBaseType.#ctor">
            <summary>
            <para>
            ProcessWhereBaseType is an abstract base type which forms the basis for the ProcessWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhereType">
            <summary>
            <para>
            ProcessWhereType defines the parameters of a process query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhereType.#ctor">
            <summary>
            <para>
            ProcessWhereType defines the parameters of a process query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhereType.ProcessStepWhere">
            <summary>
            <para>
            ProcessStepWhere is used to query for process steps matching the parameters supplied. It allows for nested process step queries so that hierarchical steps can be queried explicitly by their nested level, although a top level step will always result in a search for process steps at any level. This is an implicit set of "and" parameters, meaning all of the conditions must be met in order to return a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessStepWhereType">
            <summary>
            <para>
            ProcessStepWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base item parameters, there are also parameters for matching based on the objects which serve as the input or output to the process step.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, InputOrOutputObject*, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessStepWhereType.#ctor">
            <summary>
            <para>
            ProcessStepWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base item parameters, there are also parameters for matching based on the objects which serve as the input or output to the process step.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, InputOrOutputObject*, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessStepWhereType.InputOrOutputObject">
            <summary>
            <para>
            InputOrOutputObject is a parameter for matching a process step based on the referenced object, and whether it is an input or an output to the step.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, InputOrOutputObject*, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessStepWhereType.ProcessStepWhere">
            <summary>
            <para>
            ProcessStepWhere is used to query for process steps within a the particular process step. This is an implicit set of "and" parameters, meaning all of the conditions must be met in order to return a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, InputOrOutputObject*, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.InputOrOutputObjectType">
            <summary>
            <para>
            InputOrOutputObjectType describes the structure of input or output condition for a process step query. It contains reference to an object, as will as an attribute indicates whether the object should be an input, output, or either of the two to the step.
            </para>
            <para>
            Regular expression: (ObjectReference)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.InputOrOutputObjectType.#ctor">
            <summary>
            <para>
            InputOrOutputObjectType describes the structure of input or output condition for a process step query. It contains reference to an object, as will as an attribute indicates whether the object should be an input, output, or either of the two to the step.
            </para>
            <para>
            Regular expression: (ObjectReference)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.InputOrOutputObjectType.ObjectReference">
            <summary>
            <para>
            ObjectReference is used to query for a process containing process steps where the referenced object is input or output to the process step.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (ObjectReference)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.InputOrOutputObjectType.type">
            <summary>
            <para>
            The type attribute is used to indicate whether the referenced object should be an input, output, or either of the two to the process step. The default for this is Any.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.InputOutputTypeCodeType">
            <summary>
            <para>
            InputOutputTypeCodeType enumerates the role an object plays in a process step.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementQueryType">
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query. The parameters for the query are contained in the ProvisionAgreementWhere element. The References element is used to indicate how objects that reference or are referenced from the matched provision agreement should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementQueryType.#ctor">
            <summary>
            <para>
            ProvisionAgreementQueryType defines the structure of a provision agreement query. The parameters for the query are contained in the ProvisionAgreementWhere element. The References element is used to indicate how objects that reference or are referenced from the matched provision agreement should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereBaseType">
            <summary>
            <para>
            ProvisionAgreementWhereBaseType is an abstract base type which forms the basis for the ProvisionAgreementWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereBaseType.#ctor">
            <summary>
            <para>
            ProvisionAgreementWhereBaseType is an abstract base type which forms the basis for the ProvisionAgreementWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereType">
            <summary>
            <para>
            ProvisionAgreementWhereType defines the parameters of a provision agreement query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, StructureUsage?, DataProvider?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereType.#ctor">
            <summary>
            <para>
            ProvisionAgreementWhereType defines the parameters of a provision agreement query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, StructureUsage?, DataProvider?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereType.StructureUsage">
            <summary>
            <para>
            StructureUsage is used to indicate which structure usage the provision agreement must reference in order to constitute a match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, StructureUsage?, DataProvider?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereType.DataProvider">
            <summary>
            <para>
            DataProvider is used to indicate which data provider the provision agreement must reference in order to constitute a match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, StructureUsage?, DataProvider?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyQueryType">
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query. The parameters for the query are contained in the ReportingTaxonomyWhere element. The References element is used to indicate how objects that are referenced from the reporting taxonomy should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyQueryType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyQueryType defines the structure of a reporting taxonomy query. The parameters for the query are contained in the ReportingTaxonomyWhere element. The References element is used to indicate how objects that are referenced from the reporting taxonomy should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyWhereType">
            <summary>
            <para>
            ReportingTaxonomyWhereType defines the parameters of a reporting taxonomy query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search for taxonomies that contain particular reporting categories, and on the root level structure definitions of the taxonomy.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyWhereType.#ctor">
            <summary>
            <para>
            ReportingTaxonomyWhereType defines the parameters of a reporting taxonomy query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search for taxonomies that contain particular reporting categories, and on the root level structure definitions of the taxonomy.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereBaseType">
            <summary>
            <para>
            ReportingCategoryWhereBaseType is an abstract base type that forms the basis for the ReportingCategoryQueryType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereBaseType.#ctor">
            <summary>
            <para>
            ReportingCategoryWhereBaseType is an abstract base type that forms the basis for the ReportingCategoryQueryType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereType">
            <summary>
            <para>
            ReportingCategoryWhereType contains a set of parameters for matching a reporting category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, ((ReportingCategoryWhere)+)?, (ProvisioningMetadata* | StructuralMetadata*))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereType.#ctor">
            <summary>
            <para>
            ReportingCategoryWhereType contains a set of parameters for matching a reporting category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, ((ReportingCategoryWhere)+)?, (ProvisioningMetadata* | StructuralMetadata*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereType.ProvisioningMetadata">
            <summary>
            <para>
            ProvisioningMetadata is used to query for a reporting category where the structure usages referenced are referenced by the reporting category.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, ((ReportingCategoryWhere)+)?, (ProvisioningMetadata* | StructuralMetadata*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereType.StructuralMetadata">
            <summary>
            <para>
            StructuralMetadata is used to query for a reporting category where the structures referenced are referenced by the reporting category.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, ((ReportingCategoryWhere)+)?, (ProvisioningMetadata* | StructuralMetadata*))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataSchemaQueryType">
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a query for a structured data schema. This query consists of a single data structure which provides the full details of what type of structured data schema should be returned.
            </para>
            <para>
            Regular expression: (DataStructure)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataSchemaQueryType.#ctor">
            <summary>
            <para>
            DataSchemaQueryType defines the structure of a query for a structured data schema. This query consists of a single data structure which provides the full details of what type of structured data schema should be returned.
            </para>
            <para>
            Regular expression: (DataStructure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataSchemaQueryType.DataStructure">
            <summary>
            <para>
            DataStructure references a data structure either explicitly or through a usage (dataflow) or agreement based on the flow (provision agreement). An observation dimension must be specifies as well as indicators for using explicit measures, deriving the type from the time series specific data set, and processing constraints. The explicit measure option is only applicable if the observation dimension is the measure dimension; otherwise the value provided will be ignored. The time series option is only applicable  if the observation dimension is the time dimension; otherwise the value provided will be ignored. Constraints will only be applied in the returned schemas if specifically requested. This means that even if the request specifies a provision agreement, the returned schema will not take into account the constraints on that agreement unless the request explicitly requests this.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (DataStructure)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataSchemaQueryType">
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a query for a structured metadata schema. This query consists of a single metadata structure which simply provides a reference to a metadata structure.
            </para>
            <para>
            Regular expression: (MetadataStructure)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataSchemaQueryType.#ctor">
            <summary>
            <para>
            MetadataSchemaQueryType defines the structure of a query for a structured metadata schema. This query consists of a single metadata structure which simply provides a reference to a metadata structure.
            </para>
            <para>
            Regular expression: (MetadataStructure)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataSchemaQueryType.MetadataStructure">
            <summary>
            <para>
            MetadataStructure references a metadata structure either explicitly or through it usage (metadataflow) or an application of that usage (provision agreement).
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (MetadataStructure)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureRequestType">
            <summary>
            <para>
            DataStructureRequestType extends the base DataStructureRequestType to add additional parameters that are necessary when querying for a schema.
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureRequestType.#ctor">
            <summary>
            <para>
            DataStructureRequestType extends the base DataStructureRequestType to add additional parameters that are necessary when querying for a schema.
            </para>
            <para>
            Regular expression: ((ProvisionAgrement | StructureUsage | Structure))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureRequestType.timeSeries">
            <summary>
            <para>
            The timeSeries attribute indicates that the requested schema should derived from the time series specific data set. If the observation dimension is anything but the time dimension, this field will be ignored.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureRequestType.processConstraints">
            <summary>
            <para>
            The processConstraints attribute indicates that constraints should be processed when returning the schema. If this value is false, then the schema will be based on the data structure deflation, regardless of whether the reference was specified as a provision agreement, dataflow, or data structure. If this is true, then the constraints at the requested level will be processed and the returned schema will take these constraints into account (i.e. the appropriate code lists will be sub-setted
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetQueryType">
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query. The parameters for the query are contained in the StructureSetWhere element. The References element is used to indicate how objects that are referenced from the structure set should be returned.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetQueryType.#ctor">
            <summary>
            <para>
            StructureSetQueryType defines the structure of a structure set query. The parameters for the query are contained in the StructureSetWhere element. The References element is used to indicate how objects that are referenced from the structure set should be returned.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereBaseType">
            <summary>
            <para>
            StructureSetWhereBaseType is an abstract base type which forms the basis for the StructureSetWhereType.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereBaseType.#ctor">
            <summary>
            <para>
            StructureSetWhereBaseType is an abstract base type which forms the basis for the StructureSetWhereType.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereType">
            <summary>
            <para>
            StructureSetWhereType defines the parameters of a structure set query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search based on the structures that are related by the set or the objects which are mapped by the set's maps.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, RelatedStructures*, MappedObject*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereType.#ctor">
            <summary>
            <para>
            StructureSetWhereType defines the parameters of a structure set query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search based on the structures that are related by the set or the objects which are mapped by the set's maps.
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, RelatedStructures*, MappedObject*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereType.RelatedStructures">
            <summary>
            <para>
            RelatedStructure is used to query for structure sets where the referenced key families, metadata structure definitions, dataflows, and metadataflows are related to another by the structure set.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, RelatedStructures*, MappedObject*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereType.MappedObject">
            <summary>
            <para>
            MappedObject is used to query for structure sets where the reference object is mapped in one of the maps defined by the structure set. The referenced object can be specified as being either a source, a target, or either in the queried map.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, RelatedStructures*, MappedObject*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectType">
            <summary>
            <para>
            MappedObjectType defines a structure for referencing an object and indicating whether it is the source, target, or either for the purposes of query for structure set containing the referenced object in one of the maps it defines.
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectType.#ctor">
            <summary>
            <para>
            MappedObjectType defines a structure for referencing an object and indicating whether it is the source, target, or either for the purposes of query for structure set containing the referenced object in one of the maps it defines.
            </para>
            <para>
            Regular expression: ((@Ref, URN?)|URN)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectType.type">
            <summary>
            <para>
            The type attribute indicates whether the referenced object should be queried as the source, target, or both of a map.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectReferenceType">
            <summary>
            <para>
            MappedObjectReferenceType is a type for referencing any mappable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectReferenceType.#ctor">
            <summary>
            <para>
            MappedObjectReferenceType is a type for referencing any mappable object. It consists of a URN and/or a complete set of reference fields; agency, id, and version.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectRefType">
            <summary>
            <para>
            MappedObjectRefType defines a set of reference fields for any type of mappable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectRefType.#ctor">
            <summary>
            <para>
            MappedObjectRefType defines a set of reference fields for any type of mappable object.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MappedObjectTypeCodelistType">
            <summary>
            <para>
            MappedObjectTypeCodelistType is a restriction of the MaintainableTypeCodelistType which contains only the object types which can be mapped in a structure set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.SourceTargetType">
            <summary>
            <para>
            SourceTargetType is an enumeration to indicate whether an object is the source, target, or either of the two options.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresQueryType">
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query. The parameters for the query are contained in the StructuresWhere element. The References element, typically used to indicate which objects should be returned, is fixed so that all object matching the parameters are returned..
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresQueryType.#ctor">
            <summary>
            <para>
            StructuresQueryType defines the structure of a structures query. The parameters for the query are contained in the StructuresWhere element. The References element, typically used to indicate which objects should be returned, is fixed so that all object matching the parameters are returned..
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresWhereType">
            <summary>
            <para>
            StructuresWhereType contains a set of parameters for a structures query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresWhereType.#ctor">
            <summary>
            <para>
            StructuresWhereType contains a set of parameters for a structures query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataWhere">
            <summary>
            <para>
            MaintainableQueryType is an abstract base type that serves as the basis for any query for a maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataWhere.#ctor">
            <summary>
            <para>
            MaintainableQueryType is an abstract base type that serves as the basis for any query for a maintainable object.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MaintainableWhereType)">
            <summary>
            <para>
            MaintainableQueryType is an abstract base type that serves as the basis for any query for a maintainable object.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataWhere.AgencyID">
            <summary>
            <para>
            AgencyID is used to match the agency id of the maintained object.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuralMetadataWhere.type">
            <summary>
            <para>
            The type attribute optionally defines the type of object being queried. For queries for distinct types of objects, a fixed value should be specified in the derived queries. For queries that serve to query for like types of objects, this should be required.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhere">
            <summary>
            <para>
            ItemQueryType is an abstract base type that serves as the basis for a query for an item within an item scheme query. A nested item where is provided to query for items nested within other items. The conditions within an item query are implied to be in an and-query. If an id and a child item where condition are supplied, then both conditions will have to met in order for the item query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhere.#ctor">
            <summary>
            <para>
            ItemQueryType is an abstract base type that serves as the basis for a query for an item within an item scheme query. A nested item where is provided to query for items nested within other items. The conditions within an item query are implied to be in an and-query. If an id and a child item where condition are supplied, then both conditions will have to met in order for the item query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhereType)">
            <summary>
            <para>
            ItemQueryType is an abstract base type that serves as the basis for a query for an item within an item scheme query. A nested item where is provided to query for items nested within other items. The conditions within an item query are implied to be in an and-query. If an id and a child item where condition are supplied, then both conditions will have to met in order for the item query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhere.Parent">
            <summary>
            <para>
            Parent is used to query for an item where it declares the item referenced here as its parent. This is used for items that are not nested in a hierarchy. If child items are sought for an item that is contained in a nested hierarchy (e.g. a category) on can query directly for the parent category and request that the child items be returned by specifying cascadeMatchedItems in the detail field of the return details.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, (Parent | (ItemWhere)+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ItemWhere.ItemWhere1">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ItemWhere, CategoryWhere, CodeWhere, ConceptWhere, OrganisationWhere, ReportingCategoryWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, (Parent | (ItemWhere)+)?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhere">
            <summary>
            <para>
            ComponentListWhereType is an abstract base type that serves as the basis for a query for a component list within a structure query. A list of component where children are provided to query for the list's child components. The conditions within a component list query are implied to be in an and-query. If an id and a child component where condition are supplied, then both conditions will have to met in order for the component list query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhere.#ctor">
            <summary>
            <para>
            ComponentListWhereType is an abstract base type that serves as the basis for a query for a component list within a structure query. A list of component where children are provided to query for the list's child components. The conditions within a component list query are implied to be in an and-query. If an id and a child component where condition are supplied, then both conditions will have to met in order for the component list query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhereType)">
            <summary>
            <para>
            ComponentListWhereType is an abstract base type that serves as the basis for a query for a component list within a structure query. A list of component where children are provided to query for the list's child components. The conditions within a component list query are implied to be in an and-query. If an id and a child component where condition are supplied, then both conditions will have to met in order for the component list query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentListWhere.ComponentWhere">
            <summary>
            <para>
            Occurrence: required
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Substitution members: ComponentWhere, GroupDimensionWhere, AttributeWhere, DimensionWhere, TimeDimensionWhere, PrimaryMeasureWhere, MeasureDimensionWhere, TargetObjectWhere, MetadataAttributeWhere
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, (ComponentWhere)*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhere">
            <summary>
            <para>
            ComponentWhereType is an abstract base type that serves as the basis for a query for a component within a component list where or a structure query. A concept identity and a local representation condition are available to seek a component that utilizes a particular concept or representation scheme. The conditions within a component query are implied to be in an and-query. If an id and a concept identity condition are supplied, then both conditions will have to met in order for the component query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhere.#ctor">
            <summary>
            <para>
            ComponentWhereType is an abstract base type that serves as the basis for a query for a component within a component list where or a structure query. A concept identity and a local representation condition are available to seek a component that utilizes a particular concept or representation scheme. The conditions within a component query are implied to be in an and-query. If an id and a concept identity condition are supplied, then both conditions will have to met in order for the component query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhereType)">
            <summary>
            <para>
            ComponentWhereType is an abstract base type that serves as the basis for a query for a component within a component list where or a structure query. A concept identity and a local representation condition are available to seek a component that utilizes a particular concept or representation scheme. The conditions within a component query are implied to be in an and-query. If an id and a concept identity condition are supplied, then both conditions will have to met in order for the component query to return true. If, for instance, a query based on names in multiple languages is required, then multiple instances of the element utilizing this type should be used within an or-query container.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhere.ConceptIdentity">
            <summary>
            <para>
            ConceptIdentity is used to query for a structure component based on the concept from which it takes its semantic.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, ConceptIdentity?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ComponentWhere.Enumeration">
            <summary>
            <para>
            Enumeration is used to query for a structure component based on the item scheme that is used as The enumeration for its representation. This enumeration may be explicit defined by the component (i.e. its local representation), or inherited from the concept from which the component takes its semantic (i.e. the concept core representation).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, ConceptIdentity?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValue">
            <summary>
            <para>
            NumericValueType describes the structure of a numeric query. A value is provided as the content in decimal format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValue.#ctor">
            <summary>
            <para>
            NumericValueType describes the structure of a numeric query. A value is provided as the content in decimal format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValue.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValueType)">
            <summary>
            <para>
            NumericValueType describes the structure of a numeric query. A value is provided as the content in decimal format.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.NumericValue.operator">
            <summary>
            <para>
            The operator attribute indicates the operator to apply to the numeric value query, such as equal to or greater than.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TextValue">
            <summary>
            <para>
            QueryTextType describes the structure of a textual query value. A language must be specified if parallel multi-lingual values are available, otherwise it is ignored.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TextValue.#ctor">
            <summary>
            <para>
            QueryTextType describes the structure of a textual query value. A language must be specified if parallel multi-lingual values are available, otherwise it is ignored.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TextValue.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.QueryTextType)">
            <summary>
            <para>
            QueryTextType describes the structure of a textual query value. A language must be specified if parallel multi-lingual values are available, otherwise it is ignored.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TextValue.operator">
            <summary>
            <para>
            The operator attribute indicates how the supplied value should be applied to the objects being searched in order to constitute a match. For example, a value of "EqualTo" means the value of the field being search should exactly match the value supplied. See the defining type for further details.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeValue">
            <summary>
            <para>
            TimePeriodValueType describes the structure of a time period query. A value is provided as the content in the SDMX time period format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeValue.#ctor">
            <summary>
            <para>
            TimePeriodValueType describes the structure of a time period query. A value is provided as the content in the SDMX time period format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeValue.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimePeriodValueType)">
            <summary>
            <para>
            TimePeriodValueType describes the structure of a time period query. A value is provided as the content in the SDMX time period format.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeValue.operator">
            <summary>
            <para>
            The operator attribute indicates the operator to apply to the value query, such as equal to or greater than.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeValue.reportingYearStartDay">
            <summary>
            <para>
            The reportingYearStartDay attribute allows a reporting year start day to be specified for the reporting period time value. If this time value provided is not a report period, this value can be ignored. If an explicit value is provided, this will effectively turn the time parameter into a distinct time range. For example if the time parameter value is "2010-Q1" and this attribute has a value of "--04-01", the parameter will be treated as "2010-04-01/2010-06-30". If a value of "Any" is provided, then data will be matched regardless of its reporting year start day. For example, a query of 2011-A1 would return all data that belongs to a reporting year of 2011, regardless of the start day of the reporting year. For the puroses of matching data reporting against a Gregorian period against a time parameter value that is a reporting period, a value of "Any" will be treated as a start day of January 1. Therefore, if the time paramter value was 2011-A1, data reported against 2011 would be matched but data reporting against '2011-06/P1Y' would not be matched.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.Value">
            <summary>
            <para>
            SimpleValueType describes the structure of a simple value query. A value is provided as the content in string format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.Value.#ctor">
            <summary>
            <para>
            SimpleValueType describes the structure of a simple value query. A value is provided as the content in string format.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.Value.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.SimpleValueType)">
            <summary>
            <para>
            SimpleValueType describes the structure of a simple value query. A value is provided as the content in string format.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.Value.operator">
            <summary>
            <para>
            The operator attribute indicates the operator to apply to the string value query. The options are equal and notEqual.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere">
            <summary>
            <para>
            CategorisationWhereType contains a set of parameters for a categorisation query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere.#ctor">
            <summary>
            <para>
            CategorisationWhereType contains a set of parameters for a categorisation query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhereType)">
            <summary>
            <para>
            CategorisationWhereType contains a set of parameters for a categorisation query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere.CategoryScheme">
            <summary>
            <para>
            CategoryScheme references a category scheme for which categorisations or sought for any of the scheme's categories. Any categorisation which has a target of a category defined in the scheme will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere.TargetCategory">
            <summary>
            <para>
            TargetCategory references the category that defines the target of the categorisation (the category which an object is categorized against). Only categorisations which refence the category supplied here will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere.ObjectReference">
            <summary>
            <para>
            ObjectReference references the object that is the source of the categorisation (the object which is categorized). Only categorisations which reference the object supplied here will be returned.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorisationWhere.CategorisedObjectType">
            <summary>
            <para>
            CategorisedObjectType is used to specify the type of objects that are categorised by the categorisations being sought. For example, this could be used to find an caategorisation which classifies a code list.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, CategoryScheme?, TargetCategory?, ObjectReference?, CategorisedObjectType*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeWhere">
            <summary>
            <para>
            CategorySchemeWhereType defines the parameters of a category scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeWhere.#ctor">
            <summary>
            <para>
            CategorySchemeWhereType defines the parameters of a category scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategorySchemeWhereType)">
            <summary>
            <para>
            CategorySchemeWhereType defines the parameters of a category scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategoryWhere">
            <summary>
            <para>
            CategoryQueryWhereType contains a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategoryWhere.#ctor">
            <summary>
            <para>
            CategoryQueryWhereType contains a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategoryWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CategoryWhereType)">
            <summary>
            <para>
            CategoryQueryWhereType contains a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistWhere">
            <summary>
            <para>
            CodelistWhereType contains the parameters of a codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistWhere.#ctor">
            <summary>
            <para>
            CodelistWhereType contains the parameters of a codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodelistWhereType)">
            <summary>
            <para>
            CodelistWhereType contains the parameters of a codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeWhere">
            <summary>
            <para>
            CodeWhereType defines a set of parameters for matching a code. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeWhere.#ctor">
            <summary>
            <para>
            CodeWhereType defines a set of parameters for matching a code. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.CodeWhereType)">
            <summary>
            <para>
            CodeWhereType defines a set of parameters for matching a code. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeWhere">
            <summary>
            <para>
            ConceptSchemeWhereType contains the parameters of a concept scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeWhere.#ctor">
            <summary>
            <para>
            ConceptSchemeWhereType contains the parameters of a concept scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptSchemeWhereType)">
            <summary>
            <para>
            ConceptSchemeWhereType contains the parameters of a concept scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhere">
            <summary>
            <para>
            ConceptWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base parameters for an item, a concept can be queried based on the item scheme that is used as a core representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhere.#ctor">
            <summary>
            <para>
            ConceptWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base parameters for an item, a concept can be queried based on the item scheme that is used as a core representation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhereType)">
            <summary>
            <para>
            ConceptWhereType defines a set of parameters for matching a category. All supplied parameters must be matched in order for an object to satisfy the query. In addition to the base parameters for an item, a concept can be queried based on the item scheme that is used as a core representation.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConceptWhere.Enumeration">
            <summary>
            <para>
            Enumeration is used to query for a concept based on the codelist that is uses as The enumeration for its core representation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, (Parent)?, Enumeration?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhere">
            <summary>
            <para>
            ConstraintWhereType contains the parameters of a constraint query. All supplied parameters must be matched in order for an object to stratify the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhere.#ctor">
            <summary>
            <para>
            ConstraintWhereType contains the parameters of a constraint query. All supplied parameters must be matched in order for an object to stratify the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhereType)">
            <summary>
            <para>
            ConstraintWhereType contains the parameters of a constraint query. All supplied parameters must be matched in order for an object to stratify the query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhere.ConstraintAttachmentWhere">
            <summary>
            <para>
            ConstraintAttachmentWhere identifies a collection of objects to which a constraint may be attached. This container is an implicit and-query, meaning all of the objects referenced in here must be part of the constraint attachment in order for a constraint to match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ConstraintAttachmentWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ConstraintWhere.allowable">
            <summary>
            <para>
            The allowable attribute indicates whether the returned search should be limited to only allowable constraints. This only applies to content constraint. If this attribute has a value  of true, this indicates that only matching allowable content constraints should be returned. If this is false, than only actual content constraints returned. If no value is provided, all matching content constraints will be returned, regardless of whether they are stating actual or allowable content.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowWhere">
            <summary>
            <para>
            DataflowWhereType contains the parameters of a dataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowWhere.#ctor">
            <summary>
            <para>
            DataflowWhereType contains the parameters of a dataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataflowWhereType)">
            <summary>
            <para>
            DataflowWhereType contains the parameters of a dataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere">
            <summary>
            <para>
            DataStructureWhereType defines the parameters of a data structure definition query. In addition to querying based on the identification, it is also possible to search for data structure definitions based on information about its components.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.#ctor">
            <summary>
            <para>
            DataStructureWhereType defines the parameters of a data structure definition query. In addition to querying based on the identification, it is also possible to search for data structure definitions based on information about its components.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhereType)">
            <summary>
            <para>
            DataStructureWhereType defines the parameters of a data structure definition query. In addition to querying based on the identification, it is also possible to search for data structure definitions based on information about its components.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.AttributeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.DimensionWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.MeasureDimensionWhere">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.TimeDimensionWhere">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DataStructureWhere.PrimaryMeasureWhere">
            <summary>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, (GroupWhere)*, AttributeWhere*, DimensionWhere*, MeasureDimensionWhere?, TimeDimensionWhere?, PrimaryMeasureWhere?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhere">
            <summary>
            <para>
            GroupWhereType defines the parameters querying for a data structure definition based a group meeting the conditions detailed. Parameters include identification, dimensions used in the group, and the group's referenced attachment constraint. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhere.#ctor">
            <summary>
            <para>
            GroupWhereType defines the parameters querying for a data structure definition based a group meeting the conditions detailed. Parameters include identification, dimensions used in the group, and the group's referenced attachment constraint. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhereType)">
            <summary>
            <para>
            GroupWhereType defines the parameters querying for a data structure definition based a group meeting the conditions detailed. Parameters include identification, dimensions used in the group, and the group's referenced attachment constraint. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupWhere.AttachmentConstraint">
            <summary>
            <para>
            AttachmentConstraint queries for a group where the referenced attachment constraint defines the contents of the group.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, ID?, (GroupDimensionWhere)*, AttachmentConstraint?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupDimensionWhere">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupDimensionWhere.#ctor">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupDimensionWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhereType)">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.GroupDimensionWhere.Role">
            <summary>
            <para>
            Role is used to specify the role of the dimension.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhere">
            <summary>
            <para>
            AttributeWhereType describes the structure of an attribute query. An attribute can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhere.#ctor">
            <summary>
            <para>
            AttributeWhereType describes the structure of an attribute query. An attribute can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhereType)">
            <summary>
            <para>
            AttributeWhereType describes the structure of an attribute query. An attribute can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.AttributeWhere.Role">
            <summary>
            <para>
            Role is used to specify the role of the attribute.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhere">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhere.#ctor">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhereType)">
            <summary>
            <para>
            DimensionWhereType describes the structure of a dimension query. A dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.DimensionWhere.Role">
            <summary>
            <para>
            Role is used to specify the role of the dimension.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionWhere">
            <summary>
            <para>
            TimeDimensionWhereType describes the structure of a time dimension query. The time dimension can be queried based on the concept from which it takes its semantic. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionWhere.#ctor">
            <summary>
            <para>
            TimeDimensionWhereType describes the structure of a time dimension query. The time dimension can be queried based on the concept from which it takes its semantic. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TimeDimensionWhereType)">
            <summary>
            <para>
            TimeDimensionWhereType describes the structure of a time dimension query. The time dimension can be queried based on the concept from which it takes its semantic. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureWhere">
            <summary>
            <para>
            MeasureWhereType describes the structure of a measure query. The primary measure can be queried based on the concept from which it takes its semantic, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureWhere.#ctor">
            <summary>
            <para>
            MeasureWhereType describes the structure of a measure query. The primary measure can be queried based on the concept from which it takes its semantic, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.PrimaryMeasureWhereType)">
            <summary>
            <para>
            MeasureWhereType describes the structure of a measure query. The primary measure can be queried based on the concept from which it takes its semantic, and the code list it uses as The enumeration of its representation. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhere">
            <summary>
            <para>
            MeasureDimensionWhereType describes the structure of a measure dimension query. A measure dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the concept scheme which defines its measure concepts. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhere.#ctor">
            <summary>
            <para>
            MeasureDimensionWhereType describes the structure of a measure dimension query. A measure dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the concept scheme which defines its measure concepts. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhereType)">
            <summary>
            <para>
            MeasureDimensionWhereType describes the structure of a measure dimension query. A measure dimension can be queried based on its identification, the concept from which it takes its semantic, the role it plays, and the concept scheme which defines its measure concepts. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MeasureDimensionWhere.Role">
            <summary>
            <para>
            Role is used to specify the role of the dimension.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, ConceptIdentity?, Enumeration?, Role*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhere">
            <summary>
            <para>
            HierarchicalCodelistWhereType contains the parameters of a hierarchical codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhere.#ctor">
            <summary>
            <para>
            HierarchicalCodelistWhereType contains the parameters of a hierarchical codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhereType)">
            <summary>
            <para>
            HierarchicalCodelistWhereType contains the parameters of a hierarchical codelist query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.HierarchicalCodelistWhere.IncludedCodelist">
            <summary>
            <para>
            IncludedCodelist is used to reference a codelist which the hierarchical codelist to be matched references.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, IncludedCodelist*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowWhere">
            <summary>
            <para>
            MetadataflowWhereType contains the parameters of a metadataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowWhere.#ctor">
            <summary>
            <para>
            MetadataflowWhereType contains the parameters of a metadataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataflowWhereType)">
            <summary>
            <para>
            MetadataflowWhereType contains the parameters of a metadataflow query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere">
            <summary>
            <para>
            MetadataStructureWhereType defines the parameters of a metadata structure definition query. In addition to querying based on the identification, it is also possible to search for metadata structure definitions based on information about its components.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere.#ctor">
            <summary>
            <para>
            MetadataStructureWhereType defines the parameters of a metadata structure definition query. In addition to querying based on the identification, it is also possible to search for metadata structure definitions based on information about its components.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhereType)">
            <summary>
            <para>
            MetadataStructureWhereType defines the parameters of a metadata structure definition query. In addition to querying based on the identification, it is also possible to search for metadata structure definitions based on information about its components.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere.MetadataTargetWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere.TargetObjectWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere.ReportStructureWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataStructureWhere.MetadataAttributeWhere">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, UsedConcept*, UsedRepresentation*, MetadataTargetWhere*, TargetObjectWhere*, ReportStructureWhere*, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetWhere">
            <summary>
            <para>
            MetadataTargetWhereType describes the structure that is used to query for metadata structure definitions containing a metadata target meeting the conditions detailed. Conditions include the identification and the details of the target objects which make up the metadata target.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetWhere.#ctor">
            <summary>
            <para>
            MetadataTargetWhereType describes the structure that is used to query for metadata structure definitions containing a metadata target meeting the conditions detailed. Conditions include the identification and the details of the target objects which make up the metadata target.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataTargetWhereType)">
            <summary>
            <para>
            MetadataTargetWhereType describes the structure that is used to query for metadata structure definitions containing a metadata target meeting the conditions detailed. Conditions include the identification and the details of the target objects which make up the metadata target.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhere">
            <summary>
            <para>
            TargetObjectWhereType describes the structure of a target object query. A target object can be queried based on its identification, its type (i.e. data set target, key descriptor values target, report period target, or identifiable object target), and in the case of an identifiable object target, an item scheme which enumerates the possible values and/or the class of the target object reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhere.#ctor">
            <summary>
            <para>
            TargetObjectWhereType describes the structure of a target object query. A target object can be queried based on its identification, its type (i.e. data set target, key descriptor values target, report period target, or identifiable object target), and in the case of an identifiable object target, an item scheme which enumerates the possible values and/or the class of the target object reference.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhereType)">
            <summary>
            <para>
            TargetObjectWhereType describes the structure of a target object query. A target object can be queried based on its identification, its type (i.e. data set target, key descriptor values target, report period target, or identifiable object target), and in the case of an identifiable object target, an item scheme which enumerates the possible values and/or the class of the target object reference.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhere.type">
            <summary>
            <para>
            The type attribute is used to query for a target object of a given type (i.e. data set target, key descriptor values target, report period target, or identifiable object target)
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.TargetObjectWhere.targetClass">
            <summary>
            <para>
            The targetClass attribute is used to query for an identifiable object target based on the class its target object.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureWhere">
            <summary>
            <para>
            ReportStructureWhereType defines the parameters for matching based on the details of a report structure. This is used to query for metadata structure definitions where a given report structure meets the conditions specified. A report structure can be queried based on identification and details about its metadata attributes. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureWhere.#ctor">
            <summary>
            <para>
            ReportStructureWhereType defines the parameters for matching based on the details of a report structure. This is used to query for metadata structure definitions where a given report structure meets the conditions specified. A report structure can be queried based on identification and details about its metadata attributes. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportStructureWhereType)">
            <summary>
            <para>
            ReportStructureWhereType defines the parameters for matching based on the details of a report structure. This is used to query for metadata structure definitions where a given report structure meets the conditions specified. A report structure can be queried based on identification and details about its metadata attributes. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhere">
            <summary>
            <para>
            MetadataAttributeWhereType describes the parameters for a metadata attribute. A metadata attribute can be queried based on its identification, the concept from which it takes its semantic, and an item scheme it uses as its representation. Nested metadata attributes allow for the querying of metadata attributes explicitly at nested level, although a top level metadata attribute query will be processed by querying metadata attributes at any level. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhere.#ctor">
            <summary>
            <para>
            MetadataAttributeWhereType describes the parameters for a metadata attribute. A metadata attribute can be queried based on its identification, the concept from which it takes its semantic, and an item scheme it uses as its representation. Nested metadata attributes allow for the querying of metadata attributes explicitly at nested level, although a top level metadata attribute query will be processed by querying metadata attributes at any level. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhereType)">
            <summary>
            <para>
            MetadataAttributeWhereType describes the parameters for a metadata attribute. A metadata attribute can be queried based on its identification, the concept from which it takes its semantic, and an item scheme it uses as its representation. Nested metadata attributes allow for the querying of metadata attributes explicitly at nested level, although a top level metadata attribute query will be processed by querying metadata attributes at any level. This is an implicit set of "and" parameters, that is the conditions within this must all be met in order to return a match.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.MetadataAttributeWhere.MetadataAttributeWhere1">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Enumeration?, MetadataAttributeWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeWhere">
            <summary>
            <para>
            OrganisationSchemeWhereType contains the parameters of an organisation scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeWhere.#ctor">
            <summary>
            <para>
            OrganisationSchemeWhereType contains the parameters of an organisation scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationSchemeWhereType)">
            <summary>
            <para>
            OrganisationSchemeWhereType contains the parameters of an organisation scheme query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationWhere">
            <summary>
            <para>
            OrganisationWhereType defines a set of parameters for matching an organisation. In addition to the base parameters for any item, there is an additional parameter for matching an organisation based on the roles it serves. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationWhere.#ctor">
            <summary>
            <para>
            OrganisationWhereType defines a set of parameters for matching an organisation. In addition to the base parameters for any item, there is an additional parameter for matching an organisation based on the roles it serves. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.OrganisationWhereType)">
            <summary>
            <para>
            OrganisationWhereType defines a set of parameters for matching an organisation. In addition to the base parameters for any item, there is an additional parameter for matching an organisation based on the roles it serves. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhere">
            <summary>
            <para>
            ProcessWhereType defines the parameters of a process query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhere.#ctor">
            <summary>
            <para>
            ProcessWhereType defines the parameters of a process query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhereType)">
            <summary>
            <para>
            ProcessWhereType defines the parameters of a process query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProcessWhere.ProcessStepWhere">
            <summary>
            <para>
            ProcessStepWhere is used to query for process steps matching the parameters supplied. It allows for nested process step queries so that hierarchical steps can be queried explicitly by their nested level, although a top level step will always result in a search for process steps at any level. This is an implicit set of "and" parameters, meaning all of the conditions must be met in order to return a match.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, ProcessStepWhere*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhere">
            <summary>
            <para>
            ProvisionAgreementWhereType defines the parameters of a provision agreement query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhere.#ctor">
            <summary>
            <para>
            ProvisionAgreementWhereType defines the parameters of a provision agreement query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhereType)">
            <summary>
            <para>
            ProvisionAgreementWhereType defines the parameters of a provision agreement query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhere.StructureUsage">
            <summary>
            <para>
            StructureUsage is used to indicate which structure usage the provision agreement must reference in order to constitute a match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, StructureUsage?, DataProvider?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ProvisionAgreementWhere.DataProvider">
            <summary>
            <para>
            DataProvider is used to indicate which data provider the provision agreement must reference in order to constitute a match.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, StructureUsage?, DataProvider?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyWhere">
            <summary>
            <para>
            ReportingTaxonomyWhereType defines the parameters of a reporting taxonomy query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search for taxonomies that contain particular reporting categories, and on the root level structure definitions of the taxonomy.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyWhere.#ctor">
            <summary>
            <para>
            ReportingTaxonomyWhereType defines the parameters of a reporting taxonomy query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search for taxonomies that contain particular reporting categories, and on the root level structure definitions of the taxonomy.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingTaxonomyWhereType)">
            <summary>
            <para>
            ReportingTaxonomyWhereType defines the parameters of a reporting taxonomy query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search for taxonomies that contain particular reporting categories, and on the root level structure definitions of the taxonomy.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhere">
            <summary>
            <para>
            ReportingCategoryWhereType contains a set of parameters for matching a reporting category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhere.#ctor">
            <summary>
            <para>
            ReportingCategoryWhereType contains a set of parameters for matching a reporting category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhereType)">
            <summary>
            <para>
            ReportingCategoryWhereType contains a set of parameters for matching a reporting category. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhere.ProvisioningMetadata">
            <summary>
            <para>
            ProvisioningMetadata is used to query for a reporting category where the structure usages referenced are referenced by the reporting category.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, ((ReportingCategoryWhere)+)?, (ProvisioningMetadata* | StructuralMetadata*))
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.ReportingCategoryWhere.StructuralMetadata">
            <summary>
            <para>
            StructuralMetadata is used to query for a reporting category where the structures referenced are referenced by the reporting category.
            </para>
            <para>
            Occurrence: optional, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotation?, ID?, Name?, Description?, ((ReportingCategoryWhere)+)?, (ProvisioningMetadata* | StructuralMetadata*))
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhere">
            <summary>
            <para>
            StructureSetWhereType defines the parameters of a structure set query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search based on the structures that are related by the set or the objects which are mapped by the set's maps.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhere.#ctor">
            <summary>
            <para>
            StructureSetWhereType defines the parameters of a structure set query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search based on the structures that are related by the set or the objects which are mapped by the set's maps.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhereType)">
            <summary>
            <para>
            StructureSetWhereType defines the parameters of a structure set query. All supplied parameters must be matched in order for an object to satisfy the query. In addition to querying based on the base maintainable parameters, it is also possible to search based on the structures that are related by the set or the objects which are mapped by the set's maps.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhere.RelatedStructures">
            <summary>
            <para>
            RelatedStructure is used to query for structure sets where the referenced key families, metadata structure definitions, dataflows, and metadataflows are related to another by the structure set.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, RelatedStructures*, MappedObject*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructureSetWhere.MappedObject">
            <summary>
            <para>
            MappedObject is used to query for structure sets where the reference object is mapped in one of the maps defined by the structure set. The referenced object can be specified as being either a source, a target, or either in the queried map.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotation?, URN?, ID?, Name?, Description?, Version?, VersionTo?, VersionFrom?, VersionActive?, AgencyID?, RelatedStructures*, MappedObject*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresWhere">
            <summary>
            <para>
            StructuresWhereType contains a set of parameters for a structures query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresWhere.#ctor">
            <summary>
            <para>
            StructuresWhereType contains a set of parameters for a structures query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresWhere.#ctor(Org.Sdmx.Resources.SdmxMl.Schemas.V21.Query.StructuresWhereType)">
            <summary>
            <para>
            StructuresWhereType contains a set of parameters for a structures query. All supplied parameters must be matched in order for an object to satisfy the query.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType">
            <summary>
            <para>
            DataSetType defines the structure of the generic data set. Data is organised into either a collection of series (grouped observations) or a collection of un-grouped observations. The organisation used is dependent on the structure specification in the header of the data message (which is referenced via the structureRef attribute). The structure specification states which data occurs at the observation level. If this dimension is "AllDimensions" then the data set must consist of a collection of un-grouped observations; otherwise the data set will contain a collection of series with the observations in the series disambiguated by the specified dimension at the observation level. This data set is capable of containing data (observed values) and/or documentation (attribute values). It is assumed that each series or un-grouped observation will be distinct in its purpose. For example, if series contains both data and documentation, it assumed that each series will have a unique key. If the series contains only data or only documentation, then it is possible that another series with the same key might exist, but with not with the same purpose (i.e. to provide data or documentation) as the first series.
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType defines the structure of the generic data set. Data is organised into either a collection of series (grouped observations) or a collection of un-grouped observations. The organisation used is dependent on the structure specification in the header of the data message (which is referenced via the structureRef attribute). The structure specification states which data occurs at the observation level. If this dimension is "AllDimensions" then the data set must consist of a collection of un-grouped observations; otherwise the data set will contain a collection of series with the observations in the series disambiguated by the specified dimension at the observation level. This data set is capable of containing data (observed values) and/or documentation (attribute values). It is assumed that each series or un-grouped observation will be distinct in its purpose. For example, if series contains both data and documentation, it assumed that each series will have a unique key. If the series contains only data or only documentation, then it is possible that another series with the same key might exist, but with not with the same purpose (i.e. to provide data or documentation) as the first series.
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.DataProvider">
            <summary>
            <para>
            DataProvider contains a reference to the provider for the data set.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.Attributes">
            <summary>
            <para>
            Attributes contains the collection of attribute values for attributes defined in the data structure definition which do not have an attribute relationship with any other data structure definition components.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.Group">
            <summary>
            <para>
            Group contains a references to a defined group in the data structure definition along with its key (if necessary) and values for the attributes which are associated with the group. An attribute is associated to a group by either an explicit group relationship or by a group attachment when the attribute has a relationship with a dimension which is a member of this group.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.Series">
            <summary>
            <para>
            Series contains a collection of observations that share a common key (set of dimension values). The key of a series is every dimension defined in the data structure definition, save the dimension which is declared in the structure specification to be at the observation level. In addition to the key and observations, the series contains values for attributes which have a relationship with any dimension that is part of the series key, so long as the attribute does not specify an attachment group or also has a relationship with the dimension declared to be at the observation level.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.Obs">
            <summary>
            <para>
            Obs is an un-grouped observation. This observation has a key which is a set of values for all dimensions declared in the data structure definition. In addition to the key, the value of the observation can be provided along with values for all attributes which have an association with the primary measure or any dimension (so long as it does not specify a group attachment).
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Attributes?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.structureRef">
            <summary>
            <para>
            The structureRef contains a reference to a structural specification in the header of a data or reference metadata message. The structural specification details which structure the data or reference metadata conforms to, as well as providing additional information such as how the data is structure (e.g. which dimension occurs at the observation level for a data set).
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.setID">
            <summary>
            <para>
            The setID provides an identification of the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.action">
            <summary>
            <para>
            The action attribute indicates whether the file is appending, replacing, or deleting.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.reportingBeginDate">
            <summary>
            <para>
            The reportingBeginDate indicates the inclusive start time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.reportingEndDate">
            <summary>
            <para>
            The reportingEndDate indicates the inclusive end time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.validFromDate">
            <summary>
            <para>
            The validFromDate indicates the inclusive start time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.validToDate">
            <summary>
            <para>
            The validToDate indicates the inclusive end time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.publicationYear">
            <summary>
            <para>
            The publicationYear holds the ISO 8601 four-digit year.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.DataSetType.publicationPeriod">
            <summary>
            <para>
            The publicationPeriod specifies the period of publication of the data or metadata in terms of whatever provisioning agreements might be in force (i.e., "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.GroupType">
            <summary>
            <para>
            GroupType defines a structure which is used to communicate attribute values for a group defined in a data structure definition. The group can consist of either a subset of the dimensions defined by the data structure definition, or an association to an attachment constraint, which in turn defines key sets to which attributes can be attached. In the case that the group is based on an attachment constraint, only the identification of group is provided. It is expected that a system which is processing this will relate that identifier to the key sets defined in the constraint and apply the values provided for the attributes appropriately.
            </para>
            <para>
            Regular expression: (Annotations?, GroupKey?, Attributes)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.GroupType.#ctor">
            <summary>
            <para>
            GroupType defines a structure which is used to communicate attribute values for a group defined in a data structure definition. The group can consist of either a subset of the dimensions defined by the data structure definition, or an association to an attachment constraint, which in turn defines key sets to which attributes can be attached. In the case that the group is based on an attachment constraint, only the identification of group is provided. It is expected that a system which is processing this will relate that identifier to the key sets defined in the constraint and apply the values provided for the attributes appropriately.
            </para>
            <para>
            Regular expression: (Annotations?, GroupKey?, Attributes)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.GroupType.GroupKey">
            <summary>
            <para>
            GroupKey contains the values for each dimension defined as being a member of the referenced group in the data structure definition. A value must be provided for every group dimension. This is optional, and not used if the group is defined as an association to an attachment constraint rather than a subset of the data structure definition dimensions.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, GroupKey?, Attributes)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.GroupType.Attributes">
            <summary>
            <para>
            Attributes contains the set of attribute values which are reported for group. The attribute values provided here apply to all data matching the partial key defined by the group key or the key sets of the associated attachment constraint.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, GroupKey?, Attributes)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.GroupType.type">
            <summary>
            <para>
            The type attribute holds the identifier assigned to the group in the data structure definition for which attribute values are being provided.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.SeriesType">
            <summary>
            <para>
            SeriesType defines a structure which is used to group a collection of observations which have a key in common. The key for a series is every dimension defined in the data structure definition, save the dimension declared to be at the observation level for this data set. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the observation dimension). It is possible for the series to contain only observations or only attribute values, or both.
            </para>
            <para>
            Regular expression: (Annotations?, SeriesKey, Attributes?, Obs*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType defines a structure which is used to group a collection of observations which have a key in common. The key for a series is every dimension defined in the data structure definition, save the dimension declared to be at the observation level for this data set. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the observation dimension). It is possible for the series to contain only observations or only attribute values, or both.
            </para>
            <para>
            Regular expression: (Annotations?, SeriesKey, Attributes?, Obs*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.SeriesType.SeriesKey">
            <summary>
            <para>
            SeriesKey contains the values for each all dimensions defined in the data structure definition, except for that which is declared to be at the observation level for this data set. This key is required, and every dimension must be provided a value.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, SeriesKey, Attributes?, Obs*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.SeriesType.Attributes">
            <summary>
            <para>
            Attributes contains the values for attributes which are associated with the dimensions which make up the series key, so long as the attributes do not also specify an attachment group or have a relationship with the observation dimension.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, SeriesKey, Attributes?, Obs*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.SeriesType.Obs">
            <summary>
            <para>
            Obs contains an observation which shares the dimensionality of the series key. These observations are disambiguated from one another within this series by a single dimension value provided for each dimension. The dimension which provides this observation key is declared in the structure specification for the data set, which is provided in the header of the data message.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, SeriesKey, Attributes?, Obs*)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsOnlyType">
            <summary>
            <para>
            ObsOnlyType defines the structure for an un-grouped observation. Unlike a group observation, an un-grouped must provided a full set of values for every dimension declared in the data structure definition. The observation can contain an observed value and/or a collection of attribute values.
            </para>
            <para>
            Regular expression: (Annotations?, ObsKey, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsOnlyType.#ctor">
            <summary>
            <para>
            ObsOnlyType defines the structure for an un-grouped observation. Unlike a group observation, an un-grouped must provided a full set of values for every dimension declared in the data structure definition. The observation can contain an observed value and/or a collection of attribute values.
            </para>
            <para>
            Regular expression: (Annotations?, ObsKey, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsOnlyType.ObsKey">
            <summary>
            <para>
            ObsKey contains the values for every dimension defined in the data structure definition. A value must be provided for each dimension. This key serves to disambiguate the un-grouped observation within the data set.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, ObsKey, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsOnlyType.ObsValue">
            <summary>
            <para>
            ObsValue type contains the value for the observation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ObsKey, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsOnlyType.Attributes">
            <summary>
            <para>
            Attributes contains the set of values reported for the attributes which have an association with the primary measure or any dimension in the data structure definition (so long as an attachment group is not also specified).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ObsKey, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsType">
            <summary>
            <para>
            ObsType defines the structure of a grouped observation. The observation must be provided a value for the dimension which is declared to be at the observation level for this data set. This dimension value should disambiguate the observation within the series in which it is defined (i.e. there should not be another observation with the same dimension value). The observation can contain an observed value and/or attribute values.
            </para>
            <para>
            Regular expression: (Annotations?, ObsDimension, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsType.#ctor">
            <summary>
            <para>
            ObsType defines the structure of a grouped observation. The observation must be provided a value for the dimension which is declared to be at the observation level for this data set. This dimension value should disambiguate the observation within the series in which it is defined (i.e. there should not be another observation with the same dimension value). The observation can contain an observed value and/or attribute values.
            </para>
            <para>
            Regular expression: (Annotations?, ObsDimension, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsType.ObsDimension">
            <summary>
            <para>
            ObsDimension holds the key for the grouped observation, i.e. the value of the observation dimension. Note that in this element, the reference to the dimension is optional, since it can be inferred from the structure specification for the data set. This saves having to repeat the value unnecessarily. It is assumed that any application processing the data set will have the information from the structure specification available, so that if a dimension identifier is not supplied here, the proper reference can be applied.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, ObsDimension, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsType.ObsValue">
            <summary>
            <para>
            ObsValue type contains the value for the observation.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ObsDimension, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsType.Attributes">
            <summary>
            <para>
            Attributes contains the set of values reported for the attributes which have an association with the primary measure or the observations dimension (so long as an attachment group is not also specified).
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, ObsDimension, ObsValue?, Attributes?)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ValuesType">
            <summary>
            <para>
            ValuesType is a general structure which contains a collection of data structure definition component values. This type is used to provide both key and attribute collection values.
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ValuesType.#ctor">
            <summary>
            <para>
            ValuesType is a general structure which contains a collection of data structure definition component values. This type is used to provide both key and attribute collection values.
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ValuesType.Value">
            <summary>
            <para>
            Value contains a component value and a reference to the component for which a value is being provided.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Value+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.BaseValueType">
            <summary>
            <para>
            BaseValueType is a general structure which contains a reference to a data structure definition component and a value for that component. In this structure the reference to the component is optional to allow for usages where the actual reference might be provided in another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.BaseValueType.#ctor">
            <summary>
            <para>
            BaseValueType is a general structure which contains a reference to a data structure definition component and a value for that component. In this structure the reference to the component is optional to allow for usages where the actual reference might be provided in another context.
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.BaseValueType.id">
            <summary>
            <para>
            The id attribute contains the identifier for the component for which a value is being provided.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.BaseValueType.value">
            <summary>
            <para>
            The value attribute contains the provided component value.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsValueType">
            <summary>
            <para>
            ObsValueType is a derivation of the BaseValueType which is used to provide an observation value. Since an observation value is always associated with the data structure definition primary measure, and the identifier for the primary measure is fixed, the component reference for this structure is fixed. Note that this means that it is not necessary to provide a value in an instance as the fixed value will be provided in the post validation information set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ObsValueType.#ctor">
            <summary>
            <para>
            ObsValueType is a derivation of the BaseValueType which is used to provide an observation value. Since an observation value is always associated with the data structure definition primary measure, and the identifier for the primary measure is fixed, the component reference for this structure is fixed. Note that this means that it is not necessary to provide a value in an instance as the fixed value will be provided in the post validation information set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ComponentValueType">
            <summary>
            <para>
            ComponentValueType is a derivation of the BaseValueType which requires that the component reference be provided. This is used when the identification of the component cannot be inferred from another context.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.ComponentValueType.#ctor">
            <summary>
            <para>
            ComponentValueType is a derivation of the BaseValueType which requires that the component reference be provided. This is used when the identification of the component cannot be inferred from another context.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeSeriesDataSetType">
            <summary>
            <para>
            TimeSeriesDataSetType is a derivation of the base DataSetType of the generic format the restricts the data set to only allow for grouped observations where the dimension at the observation level is the time dimension of the data structure definition. This means that unlike the base data set structure, there can be no un-grouped observations. Because this derivation is achieved using restriction, data sets conforming to this type will inherently conform to the base data set structure as well. In fact, data structured here will be identical to data in the base data set when the time dimension is the observation dimension. This means that the data contained in this structure can be processed in exactly the same manner as the base structure.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeSeriesDataSetType.#ctor">
            <summary>
            <para>
            TimeSeriesDataSetType is a derivation of the base DataSetType of the generic format the restricts the data set to only allow for grouped observations where the dimension at the observation level is the time dimension of the data structure definition. This means that unlike the base data set structure, there can be no un-grouped observations. Because this derivation is achieved using restriction, data sets conforming to this type will inherently conform to the base data set structure as well. In fact, data structured here will be identical to data in the base data set when the time dimension is the observation dimension. This means that the data contained in this structure can be processed in exactly the same manner as the base structure.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeSeriesType">
            <summary>
            <para>
            TimeSeriesType defines a structure which is used to group a collection of observations which have a key in common, organised by time. The key for a series is every dimension defined in the data structure definition, save the time dimension. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the time dimension). It is possible for the series to contain only observations or only attribute values, or both.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeSeriesType.#ctor">
            <summary>
            <para>
            TimeSeriesType defines a structure which is used to group a collection of observations which have a key in common, organised by time. The key for a series is every dimension defined in the data structure definition, save the time dimension. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the time dimension). It is possible for the series to contain only observations or only attribute values, or both.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeSeriesObsType">
            <summary>
            <para>
            TimeSeriesObsType defines the structure of a time series observation. The observation must be provided a value for the time dimension. This time value should disambiguate the observation within the series in which it is defined (i.e. there should not be another observation with the same time value). The observation can contain an observed value and/or attribute values.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeSeriesObsType.#ctor">
            <summary>
            <para>
            TimeSeriesObsType defines the structure of a time series observation. The observation must be provided a value for the time dimension. This time value should disambiguate the observation within the series in which it is defined (i.e. there should not be another observation with the same time value). The observation can contain an observed value and/or attribute values.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeValueType">
            <summary>
            <para>
            TimeValueType is a derivation of the BaseValueType which is used to provide a value for the time dimension. Since the identifier for the time dimension is fixed, the component reference for this structure is fixed. Note that this means that it is not necessary to provide a value in an instance as the fixed value will be provided in the post validation information set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.Generic.TimeValueType.#ctor">
            <summary>
            <para>
            TimeValueType is a derivation of the BaseValueType which is used to provide a value for the time dimension. Since the identifier for the time dimension is fixed, the component reference for this structure is fixed. Note that this means that it is not necessary to provide a value in an instance as the fixed value will be provided in the post validation information set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType">
            <summary>
            <para>
            DataSetType is the abstract type which defines the base structure for any data structure definition specific data set. A derived data set type will be created that is specific to a data structure definition and the details of the organisation of the data (i.e. which dimension is the observation dimension and whether explicit measures should be used). Data is organised into either a collection of series (grouped observations) or a collection of un-grouped observations. The derived data set type will restrict this choice to be either grouped or un-grouped observations. If this dimension is "AllDimensions" then the derived data set type must consist of a collection of un-grouped observations; otherwise the data set will contain a collection of series with the observations in the series disambiguated by the specified dimension at the observation level. This data set is capable of containing data (observed values) and/or documentation (attribute values) and can be used for incremental updates and deletions (i.e. only the relevant updates or deletes are exchanged). It is assumed that each series or un-grouped observation will be distinct in its purpose. For example, if series contains both data and documentation, it assumed that each series will have a unique key. If the series contains only data or only documentation, then it is possible that another series with the same key might exist, but with not with the same purpose (i.e. to provide data or documentation) as the first series.This base type is designed such that derived types can be processed in a generic manner; it assures that data structure definition specific data will have a consistent structure. The group, series, and observation elements are unqualified, meaning that they are not qualified with a namespace in an instance. This means that in the derived data set types, the elements will always be the same, regardless of the target namespace of the schemas which defines these derived types. This allows for consistent processing of the structure without regard to what the namespace might be for the data structure definition specific schema.The data set can contain values for attributes which do not have an attribute relationship with any data structure definition components. These attribute values will exist in XML attributes in this element based on this type (DataSet). This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived data set type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). To allow for generic processing, it is required that the only unqualified XML attributes in the derived data set type (outside of the standard data set attributes) be for attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition attribute.
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.#ctor">
            <summary>
            <para>
            DataSetType is the abstract type which defines the base structure for any data structure definition specific data set. A derived data set type will be created that is specific to a data structure definition and the details of the organisation of the data (i.e. which dimension is the observation dimension and whether explicit measures should be used). Data is organised into either a collection of series (grouped observations) or a collection of un-grouped observations. The derived data set type will restrict this choice to be either grouped or un-grouped observations. If this dimension is "AllDimensions" then the derived data set type must consist of a collection of un-grouped observations; otherwise the data set will contain a collection of series with the observations in the series disambiguated by the specified dimension at the observation level. This data set is capable of containing data (observed values) and/or documentation (attribute values) and can be used for incremental updates and deletions (i.e. only the relevant updates or deletes are exchanged). It is assumed that each series or un-grouped observation will be distinct in its purpose. For example, if series contains both data and documentation, it assumed that each series will have a unique key. If the series contains only data or only documentation, then it is possible that another series with the same key might exist, but with not with the same purpose (i.e. to provide data or documentation) as the first series.This base type is designed such that derived types can be processed in a generic manner; it assures that data structure definition specific data will have a consistent structure. The group, series, and observation elements are unqualified, meaning that they are not qualified with a namespace in an instance. This means that in the derived data set types, the elements will always be the same, regardless of the target namespace of the schemas which defines these derived types. This allows for consistent processing of the structure without regard to what the namespace might be for the data structure definition specific schema.The data set can contain values for attributes which do not have an attribute relationship with any data structure definition components. These attribute values will exist in XML attributes in this element based on this type (DataSet). This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived data set type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). To allow for generic processing, it is required that the only unqualified XML attributes in the derived data set type (outside of the standard data set attributes) be for attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition attribute.
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.DataProvider">
            <summary>
            <para>
            DataProvider contains a reference to the provider for the data set.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.Group">
            <summary>
            <para>
            Group contains a references to a defined group in the data structure definition along with its key (if necessary) and values for the attributes which are associated with the group. An attribute is associated to a group by either an explicit group relationship or by a group attachment when the attribute has a relationship with a dimension which is a member of this group.
            </para>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.Series">
            <summary>
            <para>
            Series contains a collection of observations that share a common key (set of dimension values). The key of a series is every dimension defined in the data structure definition, save the dimension at the observation level. In addition to the key and observations, the series contains values for attributes which have a relationship with any dimension that is part of the series key, so long as the attribute does not specify an attachment group or also has a relationship with the dimension declared to be at the observation level.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.Obs">
            <summary>
            <para>
            Obs is an un-grouped observation. This observation has a key which is a set of values for all dimensions declared in the data structure definition. In addition to the key, the value of the observation can be provided along with values for all attributes which have an association with the primary measure or any dimension (so long as it does not specify a group attachment).
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, DataProvider?, Group*, (Series+ | Obs+)?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.structureRef">
            <summary>
            <para>
            The structureRef contains a reference to a structural specification in the header of a data or reference metadata message. The structural specification details which structure the data or reference metadata conforms to, as well as providing additional information such as how the data is structure (e.g. which dimension occurs at the observation level for a data set).
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.setID">
            <summary>
            <para>
            The setID provides an identification of the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.action">
            <summary>
            <para>
            The action attribute indicates whether the file is appending, replacing, or deleting.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.reportingBeginDate">
            <summary>
            <para>
            The reportingBeginDate indicates the inclusive start time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.reportingEndDate">
            <summary>
            <para>
            The reportingEndDate indicates the inclusive end time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.validFromDate">
            <summary>
            <para>
            The validFromDate indicates the inclusive start time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.validToDate">
            <summary>
            <para>
            The validToDate indicates the inclusive end time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.publicationYear">
            <summary>
            <para>
            The publicationYear holds the ISO 8601 four-digit year.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.publicationPeriod">
            <summary>
            <para>
            The publicationPeriod specifies the period of publication of the data or metadata in terms of whatever provisioning agreements might be in force (i.e., "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.dataScope">
            <summary>
            <para>
            The dataScope attribute indicates the scope at which the data is meant to be validated. These scopes are hierarchical and are (from the top down); DataStructure, ConstrainedDataStructure, Dataflow, and ProvisionAgreement. the hierarchy of these scopes represent the cascading level of constraints, which can restrict the valid values for components. For example, a data structure defines a dimension with a coded representation. A data flow might have a constraint associated with it which further restricts the values allowed from the referenced code list to a subset of the values allowed by the data structure definition. A provision agreement that is based on the dataflow might also have a constraint, which further restricts the subset of the codelist from the dataflow. Therefore, the allowed content becomes stricter lower in the hierarchy. Data that is given a scope of one value is stated to be valid at that level and all levels below it. Therefore, this scope serves to state that data that is meant to be structured simply against the data structure definition is not meant to be validated against the a dataflow, where constraints might be applied.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataSetType.REPORTING_YEAR_START_DAY">
            <summary>
            <para>
            The REPORTING_YEAR_START_DAY attribute is an explict attribute for the reporting year start day, which provides context to the time dimension when its value contains a reporting period (e.g. 2010-Q1). This attribute is used to state the month and day that the reporting year begins (e.g. --07-01 for July 1st). In the absence of an explicit value provided in this attribute, all reporting period values will be assumed to be based on a reporting year start day of January 1. This is declared in the base schema since it has a fixed identifier and representation. The derived data set type may either require or prohibit this attribute, depending on whether the data structure declared the reporting year start day attribute and if so, the attribute relationship and assignment status assigned to it.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.GroupType">
            <summary>
            <para>
            GroupType is the abstract type which defines a structure which is used to communicate attribute values for a group defined in a data structure definition. The group can consist of either a subset of the dimensions defined by the data structure definition, or an association to an attachment constraint, which in turn defines key sets to which attributes can be attached. In the case that the group is based on an attachment constraint, only the identification of group is provided. It is expected that a system which is processing this will relate that identifier to the key sets defined in the constraint and apply the values provided for the attributes appropriately.Data structure definition schemas will drive types based on this for each group defined in the data structure definition. Both the dimension values which make up the key (if applicable) and the attribute values associated with the group will be represented with XML attributes. This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived group type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). The dimension XML attributes will be required while the attribute XML attributes will be optional. To allow for generic processing, it is required that the only unqualified XML attributes in the derived group type be for the group dimensions and attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition dimension or attribute.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.GroupType.#ctor">
            <summary>
            <para>
            GroupType is the abstract type which defines a structure which is used to communicate attribute values for a group defined in a data structure definition. The group can consist of either a subset of the dimensions defined by the data structure definition, or an association to an attachment constraint, which in turn defines key sets to which attributes can be attached. In the case that the group is based on an attachment constraint, only the identification of group is provided. It is expected that a system which is processing this will relate that identifier to the key sets defined in the constraint and apply the values provided for the attributes appropriately.Data structure definition schemas will drive types based on this for each group defined in the data structure definition. Both the dimension values which make up the key (if applicable) and the attribute values associated with the group will be represented with XML attributes. This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived group type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). The dimension XML attributes will be required while the attribute XML attributes will be optional. To allow for generic processing, it is required that the only unqualified XML attributes in the derived group type be for the group dimensions and attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition dimension or attribute.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.GroupType.type">
            <summary>
            <para>
            The type attribute reference the identifier of the group as defined in the data structure definition. This is optional, but derived group types will provide a fixed value for this so that it always available in the post validation information set. This allows the group to be processed in a generic manner.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.GroupType.REPORTING_YEAR_START_DAY">
            <summary>
            <para>
            The REPORTING_YEAR_START_DAY attribute is an explict attribute for the reporting year start day, which provides context to the time dimension when its value contains a reporting period (e.g. 2010-Q1). This attribute is used to state the month and day that the reporting year begins (e.g. --07-01 for July 1st). In the absence of an explicit value provided in this attribute, all reporting period values will be assumed to be based on a reporting year start day of January 1. This is declared in the base schema since it has a fixed identifier and representation. The derived group types may either require or prohibit this attribute, depending on whether the data structure declared the reporting year start day attribute and if so, the attribute relationship and assignment status assigned to it.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.SeriesType">
            <summary>
            <para>
            SeriesType is the abstract type which defines a structure which is used to group a collection of observations which have a key in common. The key for a series is every dimension defined in the data structure definition, save the dimension declared to be at the observation level for this data set. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the observation dimension). It is possible for the series to contain only observations or only attribute values, or both.Data structure definition schemas will drive a type based on this that is specific to the data structure definition and the variation of the format being expressed in the schema. Both the dimension values which make up the key and the attribute values associated with the key dimensions will be represented with XML attributes. This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived series type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). The dimension XML attributes will be required while the attribute XML attributes will be optional. To allow for generic processing, it is required that the only unqualified XML attributes in the derived group type be for the series dimensions and attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition dimension or attribute.
            </para>
            <para>
            Regular expression: (Annotations?, Obs*)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.SeriesType.#ctor">
            <summary>
            <para>
            SeriesType is the abstract type which defines a structure which is used to group a collection of observations which have a key in common. The key for a series is every dimension defined in the data structure definition, save the dimension declared to be at the observation level for this data set. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the observation dimension). It is possible for the series to contain only observations or only attribute values, or both.Data structure definition schemas will drive a type based on this that is specific to the data structure definition and the variation of the format being expressed in the schema. Both the dimension values which make up the key and the attribute values associated with the key dimensions will be represented with XML attributes. This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived series type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). The dimension XML attributes will be required while the attribute XML attributes will be optional. To allow for generic processing, it is required that the only unqualified XML attributes in the derived group type be for the series dimensions and attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition dimension or attribute.
            </para>
            <para>
            Regular expression: (Annotations?, Obs*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.SeriesType.Obs">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Obs*)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.SeriesType.TIME_PERIOD">
            <summary>
            <para>
            The TIME_PERIOD attribute is an explict attribute for the time dimension. This is declared in the base schema since it has a fixed identifier and representation. The derived series type will either require or prohibit this attribute, depending on whether time is the observation dimension. If the time dimension specifies a more specific representation of time the derived type will restrict the type definition to the appropriate type.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.SeriesType.REPORTING_YEAR_START_DAY">
            <summary>
            <para>
            The REPORTING_YEAR_START_DAY attribute is an explict attribute for the reporting year start day, which provides context to the time dimension when its value contains a reporting period (e.g. 2010-Q1). This attribute is used to state the month and day that the reporting year begins (e.g. --07-01 for July 1st). In the absence of an explicit value provided in this attribute, all reporting period values will be assumed to be based on a reporting year start day of January 1. This is declared in the base schema since it has a fixed identifier and representation. The derived series type may either require or prohibit this attribute, depending on whether the data structure declared the reporting year start day attribute and if so, the attribute relationship and assignment status assigned to it.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.ObsType">
            <summary>
            <para>
            ObsType is the abstract type which defines the structure of a grouped or un-grouped observation. The observation must be provided a key, which is either a value for the dimension which is declared to be at the observation level if the observation is grouped, or a full set of values for all dimensions in the data structure definition if the observation is un-grouped. This key should disambiguate the observation within the context in which it is defined (e.g. there should not be another observation with the same dimension value in a series). The observation can contain an observed value and/or attribute values.Data structure definition schemas will drive a type or types based on this that is specific to the data structure definition and the variation of the format being expressed in the schema. The dimension value(s) which make up the key and the attribute values associated with the key dimension(s) or the primary measure will be represented with XML attributes. This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived observation type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). The dimension XML attribute(s) will be required while the attribute XML attributes will be optional. To allow for generic processing, it is required that the only unqualified XML attributes in the derived observation type be for the observation dimension(s) and attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition dimension or attribute.If the data structure definition specific schema requires that explicit measures be used (only possible when the measure dimension is specified at the observation), then there will be types derived for each measure defined by the measure dimension. In this case, the types will be specific to each measure, which is to say that the representation of the primary measure (i.e. the observed value) will be restricted to that which is specified by the specific measure.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.ObsType.#ctor">
            <summary>
            <para>
            ObsType is the abstract type which defines the structure of a grouped or un-grouped observation. The observation must be provided a key, which is either a value for the dimension which is declared to be at the observation level if the observation is grouped, or a full set of values for all dimensions in the data structure definition if the observation is un-grouped. This key should disambiguate the observation within the context in which it is defined (e.g. there should not be another observation with the same dimension value in a series). The observation can contain an observed value and/or attribute values.Data structure definition schemas will drive a type or types based on this that is specific to the data structure definition and the variation of the format being expressed in the schema. The dimension value(s) which make up the key and the attribute values associated with the key dimension(s) or the primary measure will be represented with XML attributes. This is specified in the content model with the declaration of anyAttributes in the "local" namespace. The derived observation type will refine this structure so that the attributes are explicit. The XML attributes will be given a name based on the attribute's identifier. These XML attributes will be unqualified (meaning they do not have a namespace associated with them). The dimension XML attribute(s) will be required while the attribute XML attributes will be optional. To allow for generic processing, it is required that the only unqualified XML attributes in the derived observation type be for the observation dimension(s) and attributes declared in the data structure definition. If additional attributes are required, these should be qualified with a namespace so that a generic application can easily distinguish them as not being meant to represent a data structure definition dimension or attribute.If the data structure definition specific schema requires that explicit measures be used (only possible when the measure dimension is specified at the observation), then there will be types derived for each measure defined by the measure dimension. In this case, the types will be specific to each measure, which is to say that the representation of the primary measure (i.e. the observed value) will be restricted to that which is specified by the specific measure.
            </para>
            <para>
            Regular expression: (Annotations?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.ObsType.type">
            <summary>
            <para>
            The type attribute is used when the derived format requires that explicit measure be used. In this case, the derived type based on the measure will fix this value to be the identification of the measure concept. This will not be required, but since it is fixed it will be available in the post validation information set which will allow for generic processing of the data. If explicit measures are not used, then the derived type will prohibit the use of this attribute.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.ObsType.TIME_PERIOD">
            <summary>
            <para>
            The TIME_PERIOD attribute is an explicit attribute for the time dimension. This is declared in the base schema since it has a fixed identifier and representation. The derived series type will either require or prohibit this attribute, depending on whether time is the observation dimension. If the time dimension specifies a more specific representation of time the derived type will restrict the type definition to the appropriate type.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.ObsType.REPORTING_YEAR_START_DAY">
            <summary>
            <para>
            The REPORTING_YEAR_START_DAY attribute is an explict attribute for the reporting year start day, which provides context to the time dimension when its value contains a reporting period (e.g. 2010-Q1). This attribute is used to state the month and day that the reporting year begins (e.g. --07-01 for July 1st). In the absence of an explicit value provided in this attribute, all reporting period values will be assumed to be based on a reporting year start day of January 1. This is declared in the base schema since it has a fixed identifier and representation. The derived observation type may either require or prohibit this attribute, depending on whether the data structure declared the reporting year start day attribute and if so, the attribute relationship and assignment status assigned to it.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.ObsType.OBS_VALUE">
            <summary>
            <para>
            The OBS_VALUE attribute is an explicit attribute for the primary measure, which is intended to hold the value for the observation. This is declared in the base schema since it has a fixed identifier. This attribute is un-typed, since the representation of the observed value can vary widely. Derived types will restrict this to be a type based on the representation of the primary measure. In the case that an explicit measure is used, the derived type for a given measure might further restrict the type of the primary measure to be more specific to the core representation for the measure concept. Note that it is required that in the case of multiple measures being used, that the representation of the primary measure is broad enough to handle the various representations of the measure concepts.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.DataScopeType">
            <summary>
            <para>
            DataScopeType is an enumeration of the possible validity scopes for a data set. These scopes indicate the level at which the data is stated to be valid.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.TimeSeriesDataSetType">
            <summary>
            <para>
            TimeSeriesDataSetType is the abstract type which defines the base structure for any data structure definition specific time series based data set. A derived data set type will be created that is specific to a data structure definition. Unlike the base format, only one variation of this is allowed for a data structure definition. This variation is the time dimension as the observation dimension. Data is organised into a collection of time series. Because this derivation is achieved using restriction, data sets conforming to this type will inherently conform to the base data set structure as well. In fact, data structure specific here will be identical to data in the base data set when the time dimension is the observation dimension, even for the derived data set types. This means that the data contained in this structure can be processed in exactly the same manner as the base structure. The same rules for derivation as the base data set type apply to this specialized data set.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.TimeSeriesDataSetType.#ctor">
            <summary>
            <para>
            TimeSeriesDataSetType is the abstract type which defines the base structure for any data structure definition specific time series based data set. A derived data set type will be created that is specific to a data structure definition. Unlike the base format, only one variation of this is allowed for a data structure definition. This variation is the time dimension as the observation dimension. Data is organised into a collection of time series. Because this derivation is achieved using restriction, data sets conforming to this type will inherently conform to the base data set structure as well. In fact, data structure specific here will be identical to data in the base data set when the time dimension is the observation dimension, even for the derived data set types. This means that the data contained in this structure can be processed in exactly the same manner as the base structure. The same rules for derivation as the base data set type apply to this specialized data set.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.TimeSeriesType">
            <summary>
            <para>
            TimeSeriesType defines an abstract structure which is used to group a collection of observations which have a key in common, organised by time. The key for a series is every dimension defined in the data structure definition, save the time dimension. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the time dimension). It is possible for the series to contain only observations or only attribute values, or both. The same rules for derivation as the base series type apply to this specialized series.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.TimeSeriesType.#ctor">
            <summary>
            <para>
            TimeSeriesType defines an abstract structure which is used to group a collection of observations which have a key in common, organised by time. The key for a series is every dimension defined in the data structure definition, save the time dimension. In addition to observations, values can be provided for attributes which are associated with the dimensions which make up this series key (so long as the attributes do not specify a group attachment or also have an relationship with the time dimension). It is possible for the series to contain only observations or only attribute values, or both. The same rules for derivation as the base series type apply to this specialized series.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.TimeSeriesObsType">
            <summary>
            <para>
            TimeSeriesObsType defines the abstract structure of a time series observation. The observation must be provided a value for the time dimension. This time value should disambiguate the observation within the series in which it is defined (i.e. there should not be another observation with the same time value). The observation can contain an observed value and/or attribute values. The same rules for derivation as the base observation type apply to this specialized observation.
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.Data.StructureSpecific.TimeSeriesObsType.#ctor">
            <summary>
            <para>
            TimeSeriesObsType defines the abstract structure of a time series observation. The observation must be provided a value for the time dimension. This time value should disambiguate the observation within the series in which it is defined (i.e. there should not be another observation with the same time value). The observation can contain an observed value and/or attribute values. The same rules for derivation as the base observation type apply to this specialized observation.
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType">
            <summary>
            <para>
            MetadataSetType describes the structure for a metadata set, which contains a collection of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. The metadata set may contain reported metadata for multiple report structures defined in a metadata structure definition.
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.#ctor">
            <summary>
            <para>
            MetadataSetType describes the structure for a metadata set, which contains a collection of reported metadata against a set of values for a given full or partial target identifier, as described in a metadata structure definition. The metadata set may contain reported metadata for multiple report structures defined in a metadata structure definition.
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.DataProvider">
            <summary>
            <para>
            DataProviderReference provides a references to an organisation with the role of data provider that is providing this metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.Report">
            <summary>
            <para>
            Report contains the details of a the reported metadata, including the identification of the target and the report attributes.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.structureRef">
            <summary>
            <para>
            The structureRef contains a reference to a structural specification in the header of a data or reference metadata message. The structural specification details which structure the data or reference metadata conforms to, as well as providing additional information such as how the data is structure (e.g. which dimension occurs at the observation level for a data set).
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.setID">
            <summary>
            <para>
            The setID provides an identification of the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.action">
            <summary>
            <para>
            The action attribute indicates whether the file is appending, replacing, or deleting.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.reportingBeginDate">
            <summary>
            <para>
            The reportingBeginDate indicates the inclusive start time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.reportingEndDate">
            <summary>
            <para>
            The reportingEndDate indicates the inclusive end time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.validFromDate">
            <summary>
            <para>
            The validFromDate indicates the inclusive start time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.validToDate">
            <summary>
            <para>
            The validToDate indicates the inclusive end time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.publicationYear">
            <summary>
            <para>
            The publicationYear holds the ISO 8601 four-digit year.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.MetadataSetType.publicationPeriod">
            <summary>
            <para>
            The publicationPeriod specifies the period of publication of the data or metadata in terms of whatever provisioning agreements might be in force (i.e., "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportType">
            <summary>
            <para>
            ReportType contains a set of report attributes and identifies a target objects] to which they apply.
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportType.#ctor">
            <summary>
            <para>
            ReportType contains a set of report attributes and identifies a target objects] to which they apply.
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportType.Target">
            <summary>
            <para>
            Target contains a set of target reference values which when taken together, identify the object or objects to which the reported metadata apply.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportType.AttributeSet">
            <summary>
            <para>
            AttributeSet contains the reported metadata attribute values for the reported metadata.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportType.id">
            <summary>
            <para>
            The id attribute holds the identifier of the report structure as defined in the metadata structure definition. This identifies the report structure which defines the structure of metadata that is being reported.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.TargetType">
            <summary>
            <para>
            TargetType defines the structure of a target. It contains a set of target reference values which when taken together, identify the object or objects to which the reported metadata apply.
            </para>
            <para>
            Regular expression: (ReferenceValue+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.TargetType.#ctor">
            <summary>
            <para>
            TargetType defines the structure of a target. It contains a set of target reference values which when taken together, identify the object or objects to which the reported metadata apply.
            </para>
            <para>
            Regular expression: (ReferenceValue+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.TargetType.ReferenceValue">
            <summary>
            <para>
            ReferenceValue contains a value for a target reference object reference. When this is taken with its sibling elements, they identify the object or objects to which the reported metadata apply. The content of this will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ReferenceValue+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.TargetType.id">
            <summary>
            <para>
            The id attribute holds the identifier of the metadata target as defined in the metadata structure definition. This identifies the metadata target of the report structure that identifies the target object(s) of the reported metadata.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType">
            <summary>
            <para>
            ReferenceValueType defines the structure of a target object reference value. A target reference value will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period.
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.#ctor">
            <summary>
            <para>
            ReferenceValueType defines the structure of a target object reference value. A target reference value will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period.
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.ObjectReference">
            <summary>
            <para>
            ObjectReference provides a reference to an identifiable object in the SDMX information model. An identifiable object target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.DataKey">
            <summary>
            <para>
            ObjectReference provides a set of dimension references and values for those dimension for the purpose of reporting metadata against a set of data. A key descriptor values target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.DataSetReference">
            <summary>
            <para>
            DataSetReference provides a reference to a data set for the purpose of reporting metadata against the data. A data set target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.ConstraintContentReference">
            <summary>
            <para>
            ConstraintContentReference provides a reference to an attachment constraint for the purpose of reporting metadata against the data identified in the key sets and/or cube regions identified by the constraint. A constraint target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.ReportPeriod">
            <summary>
            <para>
            ReportPeriod provides a report period for the purpose of qualifying the target reporting period of reported metadata. A report period target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReferenceValueType.id">
            <summary>
            <para>
            The id attribute holds the identifier of the target reference object as defined in the metadata structure definition. This identifies the target reference of the metadata target that identifes one of the target references, that when taken together, identify the target of the reported metadata.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.AttributeSetType">
            <summary>
            <para>
            AttributeSetType defines the structure for a collection of reported metadata attributes.
            </para>
            <para>
            Regular expression: (ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.AttributeSetType.#ctor">
            <summary>
            <para>
            AttributeSetType defines the structure for a collection of reported metadata attributes.
            </para>
            <para>
            Regular expression: (ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.AttributeSetType.ReportedAttribute">
            <summary>
            <para>
            ReportedAttribute provides the details of a reported attribute, including a value and/or child reported attributes.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ReportedAttribute+)
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType">
            <summary>
            <para>
            ReportedAttributeType defines the structure for a reported metadata attribute. A value for the attribute can be supplied as either a single value, or multi-lingual text values (either structured or unstructured). An optional set of child metadata attributes is also available if the metadata attribute definition defines nested metadata attributes.
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType.#ctor">
            <summary>
            <para>
            ReportedAttributeType defines the structure for a reported metadata attribute. A value for the attribute can be supplied as either a single value, or multi-lingual text values (either structured or unstructured). An optional set of child metadata attributes is also available if the metadata attribute definition defines nested metadata attributes.
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType.Text">
            <summary>
            <para>
            Text is used to supply parallel multi-lingual textual values for the reported metadata attribute. This will be used if the text format of the metadata attribute has a type of string and the multi-lingual value is set to true.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType.StructuredText">
            <summary>
            <para>
            StructuredText is used to supply parallel multi-lingual structured (as XHTML) textual values for the reported metadata attribute. This will be used if the text format of the metadata attribute has a type of XHTML and the multi-lingual value is set to true.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType.AttributeSet">
            <summary>
            <para>
            AttributeSet contains the reported metadata attribute values for the child metadata attributes.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType.id">
            <summary>
            <para>
            The id attribute identifies the metadata attribute that the value is being reported for.
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.Generic.ReportedAttributeType.value">
            <summary>
            <para>
            The value attribute holds any simple value for the metadata attribute.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType">
            <summary>
            <para>
            MetadataSetType is an abstract base type the forms the basis for a metadata structure specific metadata set. It is restricted by the metadata structure definition specific schema to meet its needs.
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.#ctor">
            <summary>
            <para>
            MetadataSetType is an abstract base type the forms the basis for a metadata structure specific metadata set. It is restricted by the metadata structure definition specific schema to meet its needs.
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.Name">
            <summary>
            <para>
            Occurrence: optional, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.DataProvider">
            <summary>
            <para>
            >DataProviderReference provides a references to an organisation with the role of data provider that is providing this metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.Report">
            <summary>
            <para>
            Report contains the details of a the reported metadata, including the identification of the target and the report attributes. This element is unqualified so that the metadata structure definition specific schema can refine the type of the element such that it requires types built according to the metadata structure definition. This allows the metadata structure definition to validate the structure of the reported metadata against the metadata structure definition while still allowing the content to be processed in a generic manner.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (Annotations?, Name*, DataProvider?, Report+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.structureRef">
            <summary>
            <para>
            The structureRef contains a reference to a structural specification in the header of a data or reference metadata message. The structural specification details which structure the data or reference metadata conforms to, as well as providing additional information such as how the data is structure (e.g. which dimension occurs at the observation level for a data set).
            </para>
            <para>
            Occurrence: required
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.setID">
            <summary>
            <para>
            The setID provides an identification of the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.action">
            <summary>
            <para>
            The action attribute indicates whether the file is appending, replacing, or deleting.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.reportingBeginDate">
            <summary>
            <para>
            The reportingBeginDate indicates the inclusive start time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.reportingEndDate">
            <summary>
            <para>
            The reportingEndDate indicates the inclusive end time of the data reported in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.validFromDate">
            <summary>
            <para>
            The validFromDate indicates the inclusive start time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.validToDate">
            <summary>
            <para>
            The validToDate indicates the inclusive end time indicating the validity of the information in the data or metadata set.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.publicationYear">
            <summary>
            <para>
            The publicationYear holds the ISO 8601 four-digit year.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.MetadataSetType.publicationPeriod">
            <summary>
            <para>
            The publicationPeriod specifies the period of publication of the data or metadata in terms of whatever provisioning agreements might be in force (i.e., "Q1 2005" if that is the time of publication for a data set published on a quarterly basis).
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportType">
            <summary>
            <para>
            ReportType is an abstract base type the forms the basis for a metadata structure definition specific report, based on the defined report structures. This type is restricted in the metadata structure definition specific schema so that the Target and AttributeSet conform to the prescribed report structure.
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportType.#ctor">
            <summary>
            <para>
            ReportType is an abstract base type the forms the basis for a metadata structure definition specific report, based on the defined report structures. This type is restricted in the metadata structure definition specific schema so that the Target and AttributeSet conform to the prescribed report structure.
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportType.Target">
            <summary>
            <para>
            Target contains a set of target reference values which when taken together, identify the object or objects to which the reported metadata apply. This element is unqualified so that the metadata structure definition specific schema can refine the type of the element such that the references values can be validated against those defined in the metadata targets for the report structure.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportType.AttributeSet">
            <summary>
            <para>
            AttributeSet contains the reported metadata attribute values for the reported metadata. This element is unqualified and un-typed so that it can refined by the metadata structure definition specific schema to validate that the reported metadata attributes conform to those prescribed by the report structure. The content of this must be element only, and these elements must always represent a reported attribute. Since this can not be strictly enforced in XML Schema, additional steps have been added to make generic processing of this element simpler. When processing this element, any element found with the attribute isMetadataAttribute in this target namespace is assumed to be a reported metadata attribute and can be processed as such.
            </para>
            <para>
            Occurrence: required
            </para>
            <para>
            Regular expression: (Annotations?, Target, AttributeSet)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportType.id">
            <summary>
            <para>
            The id attribute holds the identifier of the report structure as defined in the metadata structure definition. This identifies the report structure which defines the structure of metadata that is being reported. This is optional and not expected to be supplied as the metadata structure definition specific schema will specify a fixed value such that the reference to the report structure will always be available if required for processing.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.TargetType">
            <summary>
            <para>
            TargetType is an abstract base type that forms the basis of a the metadata report's metadata target value. This type is restricted in the metadata structure definition specific schema so that the ReferenceValue elements conform to the targets specified in the metadata target defined in the metadata structure definition.
            </para>
            <para>
            Regular expression: (ReferenceValue+)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.TargetType.#ctor">
            <summary>
            <para>
            TargetType is an abstract base type that forms the basis of a the metadata report's metadata target value. This type is restricted in the metadata structure definition specific schema so that the ReferenceValue elements conform to the targets specified in the metadata target defined in the metadata structure definition.
            </para>
            <para>
            Regular expression: (ReferenceValue+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.TargetType.ReferenceValue">
            <summary>
            <para>
            ReferenceValue contains a value for a target reference. When this is taken with its sibling elements, they identify the object or objects to which the reported metadata apply. The content of this will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period. This element is unqualified so that the metadata structure definition specific schema can refine the type of the element such that value can be validated against the format defined in the metadata structure definition.
            </para>
            <para>
            Occurrence: required, repeating
            </para>
            <para>
            Regular expression: (ReferenceValue+)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.TargetType.id">
            <summary>
            <para>
            The id attribute holds the identifier of the metadata target as defined in the metadata structure definition. This identifies the metadata target of the report structure that identifies the target object(s) of the reported metadata. This is optional and not expected to be supplied as the metadata structure definition specific schema will specify a fixed value such that the reference to the metadata target will always be available if required for processing.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType">
            <summary>
            <para>
            ReferenceValueType is an abstract base type that forms the basis of a target reference value. A target reference value will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period. The choice of these options will be refined to only one according to the definition of the target in the metadata structure definition.
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.#ctor">
            <summary>
            <para>
            ReferenceValueType is an abstract base type that forms the basis of a target reference value. A target reference value will either be a reference to an identifiable object, a data key, a reference to a data set, or a report period. The choice of these options will be refined to only one according to the definition of the target in the metadata structure definition.
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.ObjectReference">
            <summary>
            <para>
            ObjectReference provides a reference to an identifiable object in the SDMX information model. An identifiable object target will utilize this option as the representation of the target reference value. This element is unqualified so that the metadata structure definition specific schema can refine the type of the element such that the type of reference is valid according to the object type specified in the identifiable object target in the metadata structure definition. At the very least, the reference will be specific to the type of object being referenced so that a complete set of reference fields must be provided. In cases where an item object is restricted to be from a particular scheme, this type will be further restricted so that only a valid item reference can be supplied. The structure of this reference is such that it can be generically processed without needing to know what the intended target object type is prior to processing, as this information is part of the reference.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.DataKey">
            <summary>
            <para>
            ObjectReference provides a set of dimension references and values for those dimension for the purpose of reporting metadata against a set of data. A key descriptor values target will utilize this option as the representation of the target reference value. It is not expect that the metadata structure definition specific schema would refine this, but none the less, it is an unqualified element.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.DataSetReference">
            <summary>
            <para>
            DataSetReference provides a reference to a data set for the purpose of reporting metadata against the data. A data set target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.ConstraintContentReference">
            <summary>
            <para>
            ConstraintContentReference provides a reference to an attachment constraint for the purpose of reporting metadata against the data identified in the key sets and/or cube regions identified by the constraint. A constraint target will utilize this option as the representation of the target reference value.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.ReportPeriod">
            <summary>
            <para>
            ReportPeriod provides a report period for the purpose of qualifying the target reporting period of reported metadata. A report period target will utilize this option as the representation of the target reference value. It is not expect that the metadata structure definition specific schema would refine this, but none the less, it is an unqualified element. This element is unqualified so that the metadata structure definition specific schema can refine the type of the element such that the specific type of time value prescribed in the metadata structure definition can be validated.
            </para>
            <para>
            Occurrence: required, choice
            </para>
            <para>
            Regular expression: (ObjectReference | DataKey | DataSetReference | ConstraintContentReference | ReportPeriod)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReferenceValueType.id">
            <summary>
            <para>
            The id attribute holds the identifier of the target reference object reference as defined in the metadata structure definition. This identifies the target reference of the metadata target that identifes one of the target references, that when taken together, identify the target of the reported metadata. This is optional and not expected to be supplied as the metadata structure definition specific schema will specify a fixed value such that the reference to the target object definition will always be available if required for processing.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="T:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType">
            <summary>
            <para>
            ReportedAttributeType is an abstract base type that forms the basis for a metadata structure specific metadata attribute. A value for the attribute can be supplied as either a single value, or multi-lingual text values (either structured or unstructured). An optional set of child metadata attributes is also available if the metadata attribute definition defines nested metadata attributes. The metadata structure definition specific schema will refine this type for each metadata attribute such that the content can be validation against what is defined in the metadata structure definition.
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="M:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.#ctor">
            <summary>
            <para>
            ReportedAttributeType is an abstract base type that forms the basis for a metadata structure specific metadata attribute. A value for the attribute can be supplied as either a single value, or multi-lingual text values (either structured or unstructured). An optional set of child metadata attributes is also available if the metadata attribute definition defines nested metadata attributes. The metadata structure definition specific schema will refine this type for each metadata attribute such that the content can be validation against what is defined in the metadata structure definition.
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.Text">
            <summary>
            <para>
            Text is used to supply parallel multi-lingual textual values for the reported metadata attribute. This will be used if the text format of the metadata attribute has a type of string and the multi-lingual value is set to true.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.StructuredText">
            <summary>
            <para>
            StructuredText is used to supply parallel multi-lingual structured (as XHTML) textual values for the reported metadata attribute. This will be used if the text format of the metadata attribute has a type of XHTML and the multi-lingual value is set to true. If the multi-lingual flag is not set to true, it is expected that the maximum occurrence of this will be refined to be 1 in the metadata structure definition specific schema.
            </para>
            <para>
            Occurrence: required, repeating, choice
            </para>
            <para>
            Setter: Appends
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.AttributeSet">
            <summary>
            <para>
            AttributeSet contains the reported metadata attribute values for the child metadata attributes. This element is unqualified and un-typed so that it can refined by the metadata structure definition specific schema to validate that the reported metadata attributes conform to those prescribed by the metadata attribute definition. The content of this must be element only, and these elements must always represent a reported attribute. Since this can not be strictly enforced in XML Schema, additional steps have been added to make generic processing of this element simpler. When processing this element, any element found with the attribute isMetadataAttribute in this target namespace is assumed to be a reported metadata attribute and can be processed as such.
            </para>
            <para>
            Occurrence: optional
            </para>
            <para>
            Regular expression: (Annotations?, (Text+ | StructuredText+)?, AttributeSet?)
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.id">
            <summary>
            <para>
            The id attribute identifies the metadata attribute that the value is being reported for. This is optional and not expected to be supplied as the metadata structure definition specific schema will specify a fixed value such that the reference to the metadata attribute will always be available if required for processing.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.value">
            <summary>
            <para>
            The value attribute holds any simple value for the metadata attribute. This attribute is un-typed such that the metadata structure definition specific schema can specify any simple type according the text format / local representation defined by the metadata structure definition.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
        <member name="P:Org.Sdmx.Resources.SdmxMl.Schemas.V21.MetaData.StructureSpecific.ReportedAttributeType.isMetadataAttribute">
            <summary>
            <para>
            The isMetadataAttribute attribute is a fixed boolean (true) and is intended to designate to processing applications that a given element represents a reported attribute. This attribute is qualified (meaning that it will be qualified in an instance with the target namespace) to ensure that it can be properly identified by applications. The purpose of this is to allow applications to identify elements with unknown names as reported attributes so that they may process a metadata structure definition specific  instance without knowledge of the underlying metadata structure definition.
            </para>
            <para>
            Occurrence: optional
            </para>
            </summary>
        </member>
    </members>
</doc>
